{
  "address": "0xB55BeA758fe99e2550Ec37340BD2c511188992Dc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "bitLengths",
          "type": "uint256[]"
        }
      ],
      "name": "pack",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "packed",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packed",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "bitLengths",
          "type": "uint256[]"
        }
      ],
      "name": "unpack",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packed",
          "type": "uint256"
        }
      ],
      "name": "unpack256To64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "a",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "b",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "c",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "d",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packed",
          "type": "uint256"
        }
      ],
      "name": "unpackExecuteNftOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "b",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "c",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "d",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "e",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "f",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x061577011f40ac772e16bed7cdccb71e9a5e81574a68841cadfa5ce559340338",
  "receipt": {
    "to": null,
    "from": "0xa667403454F483dE81A0363Af7FcEE563819D910",
    "contractAddress": "0xB55BeA758fe99e2550Ec37340BD2c511188992Dc",
    "transactionIndex": 1,
    "gasUsed": "442550",
    "logsBloom": "0x
    "blockHash": "0x08b894943c9852f5d12bc7307b7ea0f7f1d94e352c0c74159dbfa63892b3a0f0",
    "transactionHash": "0x061577011f40ac772e16bed7cdccb71e9a5e81574a68841cadfa5ce559340338",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 43281117,
        "transactionHash": "0x061577011f40ac772e16bed7cdccb71e9a5e81574a68841cadfa5ce559340338",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a667403454f483de81a0363af7fcee563819d910",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000003a2bcf9f1c3f200000000000000000000000000000000000000000000000024b8d160515c830a0000000000000000000000000000000000000000000022d221517685b3c9d8c900000000000000000000000000000000000000000000000024b52ea3576abf180000000000000000000000000000000000000000000022d221551942adbb9cbb",
        "logIndex": 10,
        "blockHash": "0x08b894943c9852f5d12bc7307b7ea0f7f1d94e352c0c74159dbfa63892b3a0f0"
      }
    ],
    "blockNumber": 43281117,
    "cumulativeGasUsed": "796192",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "77db9ff83738765fb3c209f02149997c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"bitLengths\",\"type\":\"uint256[]\"}],\"name\":\"pack\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"packed\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packed\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"bitLengths\",\"type\":\"uint256[]\"}],\"name\":\"unpack\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packed\",\"type\":\"uint256\"}],\"name\":\"unpack256To64\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"a\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"b\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"c\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"d\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packed\",\"type\":\"uint256\"}],\"name\":\"unpackExecuteNftOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"e\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"f\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/PackingUtils.sol\":\"PackingUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":125},\"remappings\":[]},\"sources\":{\"contracts/libraries/PackingUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\nlibrary PackingUtils {\\n    function pack(\\n        uint256[] memory values,\\n        uint256[] memory bitLengths\\n    ) external pure returns (uint256 packed) {\\n        require(\\n            values.length == bitLengths.length,\\n            \\\"Mismatch in the lengths of values and bitLengths arrays\\\"\\n        );\\n\\n        uint256 currentShift;\\n\\n        for (uint256 i; i < values.length; i++) {\\n            require(\\n                currentShift + bitLengths[i] <= 256,\\n                \\\"Packed value exceeds 256 bits\\\"\\n            );\\n\\n            uint256 maxValue = (1 << bitLengths[i]) - 1;\\n            require(\\n                values[i] <= maxValue,\\n                \\\"Value too large for specified bit length\\\"\\n            );\\n\\n            uint256 maskedValue = values[i] & maxValue;\\n            packed |= maskedValue << currentShift;\\n            currentShift += bitLengths[i];\\n        }\\n    }\\n\\n    function unpack(\\n        uint256 packed,\\n        uint256[] memory bitLengths\\n    ) external pure returns (uint256[] memory values) {\\n        values = new uint256[](bitLengths.length);\\n\\n        uint256 currentShift;\\n        for (uint256 i; i < bitLengths.length; i++) {\\n            require(\\n                currentShift + bitLengths[i] <= 256,\\n                \\\"Unpacked value exceeds 256 bits\\\"\\n            );\\n\\n            uint256 maxValue = (1 << bitLengths[i]) - 1;\\n            uint256 mask = maxValue << currentShift;\\n            values[i] = (packed & mask) >> currentShift;\\n\\n            currentShift += bitLengths[i];\\n        }\\n    }\\n\\n    function unpack256To64(\\n        uint256 packed\\n    ) external pure returns (uint64 a, uint64 b, uint64 c, uint64 d) {\\n        a = uint64(packed);\\n        b = uint64(packed >> 64);\\n        c = uint64(packed >> 128);\\n        d = uint64(packed >> 192);\\n    }\\n\\n    // Function-specific unpacking utils\\n    function unpackExecuteNftOrder(\\n        uint256 packed\\n    )\\n        external\\n        pure\\n        returns (\\n            uint256 a,\\n            address b,\\n            uint256 c,\\n            uint256 d,\\n            uint256 e,\\n            uint256 f\\n        )\\n    {\\n        a = packed & 0xFF; // 8 bits\\n        b = address(uint160(packed >> 8)); // 160 bits\\n        c = (packed >> 168) & 0xFFFF; // 16 bits\\n        d = (packed >> 184) & 0xFFFF; // 16 bits\\n        e = (packed >> 200) & 0xFFFF; // 16 bits\\n        f = (packed >> 216) & 0xFFFF; // 16 bits\\n    }\\n}\\n\",\"keccak256\":\"0x600b1930583ab2ab8201912d367d1051844b2bd3a654f51bf329cc63aa854e2d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61070961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635e1f97581461005b578063acc482d214610084578063c6bc0c3a146100a5578063cefbb3bd146100fc575b600080fd5b61006e61006936600461057d565b61016f565b60405161007b91906105c4565b60405180910390f35b610097610092366004610608565b6102d2565b60405190815260200161007b565b6100c86100b3366004610662565b90604082901c90608083901c9060c084901c90565b6040805167ffffffffffffffff9586168152938516602085015291841691830191909152909116606082015260800161007b565b61013a61010a366004610662565b60ff811691600882901c9161ffff60a882901c81169260b883901c82169260c881901c83169260d89190911c1690565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c00161007b565b6060815167ffffffffffffffff81111561018b5761018b6104c9565b6040519080825280602002602001820160405280156101b4578160200160208202803683370190505b5090506000805b83518110156102ca576101008482815181106101d9576101d961067b565b6020026020010151836101ec91906106a7565b111561023f5760405162461bcd60e51b815260206004820152601f60248201527f556e7061636b65642076616c756520657863656564732032353620626974730060448201526064015b60405180910390fd5b600060018583815181106102555761025561067b565b60200260200101516001901b61026b91906106c0565b905060008382901b905083818816901c85848151811061028d5761028d61067b565b6020026020010181815250508583815181106102ab576102ab61067b565b6020026020010151846102be91906106a7565b935050506001016101bb565b505092915050565b600081518351146103455760405162461bcd60e51b815260206004820152603760248201527f4d69736d6174636820696e20746865206c656e67746873206f662076616c75656044820152767320616e64206269744c656e677468732061727261797360481b6064820152608401610236565b6000805b84518110156102ca576101008482815181106103675761036761067b565b60200260200101518361037a91906106a7565b11156103c85760405162461bcd60e51b815260206004820152601d60248201527f5061636b65642076616c756520657863656564732032353620626974730000006044820152606401610236565b600060018583815181106103de576103de61067b565b60200260200101516001901b6103f491906106c0565b9050808683815181106104095761040961067b565b602002602001015111156104705760405162461bcd60e51b815260206004820152602860248201527f56616c756520746f6f206c6172676520666f72207370656369666965642062696044820152670e840d8cadccee8d60c31b6064820152608401610236565b6000818784815181106104855761048561067b565b60200260200101511690508381901b851794508583815181106104aa576104aa61067b565b6020026020010151846104bd91906106a7565b93505050600101610349565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104f057600080fd5b8135602067ffffffffffffffff8083111561050d5761050d6104c9565b8260051b604051601f19603f83011681018181108482111715610532576105326104c9565b604052938452602081870181019490810192508785111561055257600080fd5b6020870191505b8482101561057257813583529183019190830190610559565b979650505050505050565b6000806040838503121561059057600080fd5b82359150602083013567ffffffffffffffff8111156105ae57600080fd5b6105ba858286016104df565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156105fc578351835292840192918401916001016105e0565b50909695505050505050565b6000806040838503121561061b57600080fd5b823567ffffffffffffffff8082111561063357600080fd5b61063f868387016104df565b9350602085013591508082111561065557600080fd5b506105ba858286016104df565b60006020828403121561067457600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156106ba576106ba610691565b92915050565b818103818111156106ba576106ba61069156fea2646970667358221220d8c4946e2b45d4870f9bc181b055edac8a4d244bca71bb4b0b0826e0b91a11ba64736f6c63430008170033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80635e1f97581461005b578063acc482d214610084578063c6bc0c3a146100a5578063cefbb3bd146100fc575b600080fd5b61006e61006936600461057d565b61016f565b60405161007b91906105c4565b60405180910390f35b610097610092366004610608565b6102d2565b60405190815260200161007b565b6100c86100b3366004610662565b90604082901c90608083901c9060c084901c90565b6040805167ffffffffffffffff9586168152938516602085015291841691830191909152909116606082015260800161007b565b61013a61010a366004610662565b60ff811691600882901c9161ffff60a882901c81169260b883901c82169260c881901c83169260d89190911c1690565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c00161007b565b6060815167ffffffffffffffff81111561018b5761018b6104c9565b6040519080825280602002602001820160405280156101b4578160200160208202803683370190505b5090506000805b83518110156102ca576101008482815181106101d9576101d961067b565b6020026020010151836101ec91906106a7565b111561023f5760405162461bcd60e51b815260206004820152601f60248201527f556e7061636b65642076616c756520657863656564732032353620626974730060448201526064015b60405180910390fd5b600060018583815181106102555761025561067b565b60200260200101516001901b61026b91906106c0565b905060008382901b905083818816901c85848151811061028d5761028d61067b565b6020026020010181815250508583815181106102ab576102ab61067b565b6020026020010151846102be91906106a7565b935050506001016101bb565b505092915050565b600081518351146103455760405162461bcd60e51b815260206004820152603760248201527f4d69736d6174636820696e20746865206c656e67746873206f662076616c75656044820152767320616e64206269744c656e677468732061727261797360481b6064820152608401610236565b6000805b84518110156102ca576101008482815181106103675761036761067b565b60200260200101518361037a91906106a7565b11156103c85760405162461bcd60e51b815260206004820152601d60248201527f5061636b65642076616c756520657863656564732032353620626974730000006044820152606401610236565b600060018583815181106103de576103de61067b565b60200260200101516001901b6103f491906106c0565b9050808683815181106104095761040961067b565b602002602001015111156104705760405162461bcd60e51b815260206004820152602860248201527f56616c756520746f6f206c6172676520666f72207370656369666965642062696044820152670e840d8cadccee8d60c31b6064820152608401610236565b6000818784815181106104855761048561067b565b60200260200101511690508381901b851794508583815181106104aa576104aa61067b565b6020026020010151846104bd91906106a7565b93505050600101610349565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104f057600080fd5b8135602067ffffffffffffffff8083111561050d5761050d6104c9565b8260051b604051601f19603f83011681018181108482111715610532576105326104c9565b604052938452602081870181019490810192508785111561055257600080fd5b6020870191505b8482101561057257813583529183019190830190610559565b979650505050505050565b6000806040838503121561059057600080fd5b82359150602083013567ffffffffffffffff8111156105ae57600080fd5b6105ba858286016104df565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156105fc578351835292840192918401916001016105e0565b50909695505050505050565b6000806040838503121561061b57600080fd5b823567ffffffffffffffff8082111561063357600080fd5b61063f868387016104df565b9350602085013591508082111561065557600080fd5b506105ba858286016104df565b60006020828403121561067457600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156106ba576106ba610691565b92915050565b818103818111156106ba576106ba61069156fea2646970667358221220d8c4946e2b45d4870f9bc181b055edac8a4d244bca71bb4b0b0826e0b91a11ba64736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}