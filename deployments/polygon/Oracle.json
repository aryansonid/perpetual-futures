{
  "address": "0x4B208e74D0De70eE2335DF7Aec23fc5Cba17205B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "feedPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "prices",
          "type": "uint256[]"
        }
      ],
      "name": "feedPriceArray",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenIndex",
          "type": "uint256"
        }
      ],
      "name": "getTWAP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "twapPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xaaaf9034530824791fc1d021d59b2b6add93c817b65e97d724ec72bccf6fd955",
  "receipt": {
    "to": null,
    "from": "0xa667403454F483dE81A0363Af7FcEE563819D910",
    "contractAddress": "0x4B208e74D0De70eE2335DF7Aec23fc5Cba17205B",
    "transactionIndex": 2,
    "gasUsed": "324562",
    "logsBloom": "0x
    "blockHash": "0x88c3bcd66ac2040c211112c63031f01d4b9da29de341e6ba162dc8a86800ab84",
    "transactionHash": "0xaaaf9034530824791fc1d021d59b2b6add93c817b65e97d724ec72bccf6fd955",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 40565601,
        "transactionHash": "0xaaaf9034530824791fc1d021d59b2b6add93c817b65e97d724ec72bccf6fd955",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a667403454f483de81a0363af7fcee563819d910",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000170fbf960fc6b20000000000000000000000000000000000000000000000007fef62fbe61c5dee0000000000000000000000000000000000000000000011685c21f3f87582869f0000000000000000000000000000000000000000000000007fd8533c500c973c0000000000000000000000000000000000000000000011685c3903b80b924d51",
        "logIndex": 6,
        "blockHash": "0x88c3bcd66ac2040c211112c63031f01d4b9da29de341e6ba162dc8a86800ab84"
      }
    ],
    "blockNumber": 40565601,
    "cumulativeGasUsed": "563554",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4a54523e30549b8c5add3101e674cffc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"feedPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"feedPriceArray\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"}],\"name\":\"getTWAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"twapPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":125},\"remappings\":[]},\"sources\":{\"contracts/Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ncontract Oracle {\\n    struct Observation {\\n        // the block timestamp of the last updation\\n        uint256 lastUpdateblockTimestamp;\\n        // the price accumelator\\n        uint256 priceCumulative;\\n        // the seconds cummelated for every price update\\n        uint256 secondsPerLiquidityCumulative;\\n        // initialize time\\n        uint256 initializeTime;\\n    }\\n\\n    mapping(uint256 => Observation) priceData;\\n\\n    function transformPriceData(\\n        Observation memory last,\\n        uint256 blockTimestamp,\\n        uint256 price\\n    ) private pure returns (Observation memory) {\\n        uint256 delta = blockTimestamp - last.lastUpdateblockTimestamp;\\n        return\\n            Observation({\\n                lastUpdateblockTimestamp: blockTimestamp,\\n                priceCumulative: last.priceCumulative + (price * delta),\\n                secondsPerLiquidityCumulative: last\\n                    .secondsPerLiquidityCumulative + delta,\\n                initializeTime: last.initializeTime\\n            });\\n    }\\n\\n    function initializePriceData(\\n        uint256 blockTimestamp,\\n        uint256 price\\n    ) private pure returns (Observation memory) {\\n        return\\n            Observation({\\n                lastUpdateblockTimestamp: blockTimestamp,\\n                priceCumulative: price,\\n                secondsPerLiquidityCumulative: 1,\\n                initializeTime: blockTimestamp\\n            });\\n    }\\n\\n    function feedPrice(uint256 tokenIndex, uint256 price) public {\\n        Observation memory last = priceData[tokenIndex];\\n        uint256 initializatonDelta = block.timestamp - last.initializeTime;\\n        Observation memory upadate;\\n        if (\\n            initializatonDelta < 8 hours &&\\n            !(initializatonDelta == block.timestamp)\\n        ) {\\n            upadate = transformPriceData(last, block.timestamp, price);\\n        } else {\\n            upadate = initializePriceData(block.timestamp, price);\\n        }\\n        priceData[tokenIndex] = upadate;\\n    }\\n\\n    function feedPriceArray(\\n        uint256[] calldata tokenIndexes,\\n        uint256[] calldata prices\\n    ) external {\\n        for (uint256 i; i < tokenIndexes.length; i++) {\\n            feedPrice(tokenIndexes[i], prices[i]);\\n        }\\n    }\\n\\n    function getTWAP(\\n        uint256 tokenIndex\\n    ) external view returns (uint256 twapPrice) {\\n        Observation memory tokenPriceData = priceData[tokenIndex];\\n        require(tokenPriceData.secondsPerLiquidityCumulative != 0, \\\"price feed not set\\\");\\n        twapPrice =\\n            tokenPriceData.priceCumulative /\\n            tokenPriceData.secondsPerLiquidityCumulative;\\n    }\\n}\\n\",\"keccak256\":\"0x7f0fe0a493f2744bfce8e646ccb719b011c7b6b66d16b69fb4ff2d4483306049\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506104e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063918dcb5614610046578063bab7cae71461005b578063f30d3d1b1461006e575b600080fd5b610059610054366004610368565b610093565b005b6100596100693660046103d4565b6100f1565b61008161007c3660046103f6565b6101b3565b60405190815260200160405180910390f35b60005b838110156100ea576100d88585838181106100b3576100b361040f565b905060200201358484848181106100cc576100cc61040f565b905060200201356100f1565b806100e28161043b565b915050610096565b5050505050565b600082815260208181526040808320815160808101835281548152600182015493810193909352600281015491830191909152600301546060820181905290919061013c9042610454565b90506101466102f4565b617080821080156101575750428214155b1561016e57610167834286610250565b905061017b565b61017842856102c1565b90505b600094855260208581526040958690208251815590820151600182015594810151600286015560600151600390940193909355505050565b600081815260208181526040808320815160808101835281548152600182015493810193909352600281015491830182905260030154606083015282036102355760405162461bcd60e51b81526020600482015260126024820152711c1c9a58d94819995959081b9bdd081cd95d60721b604482015260640160405180910390fd5b806040015181602001516102499190610467565b9392505050565b6102586102f4565b83516000906102679085610454565b9050604051806080016040528085815260200182856102869190610489565b876020015161029591906104a0565b81526020018287604001516102aa91906104a0565b815260200186606001518152509150509392505050565b6102c96102f4565b6040518060800160405280848152602001838152602001600181526020018481525090505b92915050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60008083601f84011261032e57600080fd5b50813567ffffffffffffffff81111561034657600080fd5b6020830191508360208260051b850101111561036157600080fd5b9250929050565b6000806000806040858703121561037e57600080fd5b843567ffffffffffffffff8082111561039657600080fd5b6103a28883890161031c565b909650945060208701359150808211156103bb57600080fd5b506103c88782880161031c565b95989497509550505050565b600080604083850312156103e757600080fd5b50508035926020909101359150565b60006020828403121561040857600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161044d5761044d610425565b5060010190565b818103818111156102ee576102ee610425565b60008261048457634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176102ee576102ee610425565b808201808211156102ee576102ee61042556fea264697066735822122088cf98bab08c19e113a1de432fa9d9f6fb29a44bf1a376a725cdbc81d12b7b1a64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063918dcb5614610046578063bab7cae71461005b578063f30d3d1b1461006e575b600080fd5b610059610054366004610368565b610093565b005b6100596100693660046103d4565b6100f1565b61008161007c3660046103f6565b6101b3565b60405190815260200160405180910390f35b60005b838110156100ea576100d88585838181106100b3576100b361040f565b905060200201358484848181106100cc576100cc61040f565b905060200201356100f1565b806100e28161043b565b915050610096565b5050505050565b600082815260208181526040808320815160808101835281548152600182015493810193909352600281015491830191909152600301546060820181905290919061013c9042610454565b90506101466102f4565b617080821080156101575750428214155b1561016e57610167834286610250565b905061017b565b61017842856102c1565b90505b600094855260208581526040958690208251815590820151600182015594810151600286015560600151600390940193909355505050565b600081815260208181526040808320815160808101835281548152600182015493810193909352600281015491830182905260030154606083015282036102355760405162461bcd60e51b81526020600482015260126024820152711c1c9a58d94819995959081b9bdd081cd95d60721b604482015260640160405180910390fd5b806040015181602001516102499190610467565b9392505050565b6102586102f4565b83516000906102679085610454565b9050604051806080016040528085815260200182856102869190610489565b876020015161029591906104a0565b81526020018287604001516102aa91906104a0565b815260200186606001518152509150509392505050565b6102c96102f4565b6040518060800160405280848152602001838152602001600181526020018481525090505b92915050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60008083601f84011261032e57600080fd5b50813567ffffffffffffffff81111561034657600080fd5b6020830191508360208260051b850101111561036157600080fd5b9250929050565b6000806000806040858703121561037e57600080fd5b843567ffffffffffffffff8082111561039657600080fd5b6103a28883890161031c565b909650945060208701359150808211156103bb57600080fd5b506103c88782880161031c565b95989497509550505050565b600080604083850312156103e757600080fd5b50508035926020909101359150565b60006020828403121561040857600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161044d5761044d610425565b5060010190565b818103818111156102ee576102ee610425565b60008261048457634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176102ee576102ee610425565b808201808211156102ee576102ee61042556fea264697066735822122088cf98bab08c19e113a1de432fa9d9f6fb29a44bf1a376a725cdbc81d12b7b1a64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/Oracle.sol:Oracle",
        "label": "priceData",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Observation)10_storage)"
      }
    ],
    "types": {
      "t_mapping(t_uint256,t_struct(Observation)10_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Oracle.Observation)",
        "numberOfBytes": "32",
        "value": "t_struct(Observation)10_storage"
      },
      "t_struct(Observation)10_storage": {
        "encoding": "inplace",
        "label": "struct Oracle.Observation",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "lastUpdateblockTimestamp",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "priceCumulative",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "secondsPerLiquidityCumulative",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9,
            "contract": "contracts/Oracle.sol:Oracle",
            "label": "initializeTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}