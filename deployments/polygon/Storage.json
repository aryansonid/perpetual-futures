{
  "address": "0xbdf8f302BD6F26ca167B57c48B7E8cf6A7651b8f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "AddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract NftInterfaceV5[5]",
          "name": "nfts",
          "type": "address[5]"
        }
      ],
      "name": "NftsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NumberUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NumberUpdatedPair",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "openingInterestShort",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "openingInterestLong",
          "type": "uint256"
        }
      ],
      "name": "OpenningInterestUpated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "name": "SpreadReductionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "SupportedTokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "indexed": true,
          "internalType": "struct StorageInterface.Trade",
          "name": "t",
          "type": "tuple"
        }
      ],
      "name": "TradeClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "indexed": true,
          "internalType": "struct StorageInterface.Trade",
          "name": "t",
          "type": "tuple"
        }
      ],
      "name": "TradeOpen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "TradingContractAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "TradingContractRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addSupportedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trading",
          "type": "address"
        }
      ],
      "name": "addTradingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "callbacks",
      "outputs": [
        {
          "internalType": "contract PausableInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultLeverageUnlocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dev",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFeesToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFeesWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "distributeLpRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "firstEmptyOpenLimitIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "firstEmptyTradeIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGov",
      "outputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getLeverageUnlocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getOpenLimitOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.OpenLimitOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenLimitOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.OpenLimitOrder[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOpenTrades",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.Trade",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOpenTradesInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenPriceWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openInterestWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tpLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "beingMarketClosed",
              "type": "bool"
            }
          ],
          "internalType": "struct StorageInterface.TradeInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "getPendingMarketOrder",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pairIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialPosToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionSizeWETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "buy",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "leverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sl",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StorageInterface.Trade",
              "name": "trade",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wantedPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slippageP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.PendingMarketOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "getPendingNftOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftHolder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "enum StorageInterface.LimitOrder",
              "name": "orderType",
              "type": "uint8"
            }
          ],
          "internalType": "struct StorageInterface.PendingNftOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getPendingOrderIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getReferral",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSpreadReductionsArray",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govFeesToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govFeesWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_leveragedPositionSize",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_WETH",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_fullFee",
          "type": "bool"
        }
      ],
      "name": "handleDevGovFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_a",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_mint",
          "type": "bool"
        }
      ],
      "name": "handleTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "hasOpenLimitOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseNftRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseReferralRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isTradingContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkErc677",
      "outputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxGainP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPendingMarketOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSlP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTradesPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTradesPerPair",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftLastSuccess",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftSuccessTimelock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "contract NftInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openInterestWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openLimitOrderIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openLimitOrders",
      "outputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spreadReductionP",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "buy",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sl",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openLimitOrdersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openTrades",
      "outputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialPosToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionSizeWETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "buy",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sl",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openTradesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openTradesInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenPriceWETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openInterestWETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tpLastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slLastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "beingMarketClosed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairTraders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairTradersArray",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairTradersId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingMarketCloseCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingMarketOpenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingOrderIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "pendingOrderIdsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract PoolInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceAggregator",
      "outputs": [
        {
          "internalType": "contract AggregatorInterfaceV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trading",
          "type": "address"
        }
      ],
      "name": "removeTradingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reqID_pendingMarketOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.Trade",
          "name": "trade",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wantedPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slippageP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spreadReductionP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reqID_pendingNftOrder",
      "outputs": [
        {
          "internalType": "address",
          "name": "nftHolder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "enum StorageInterface.LimitOrder",
          "name": "orderType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_callbacks",
          "type": "address"
        }
      ],
      "name": "setCallbacks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lev",
          "type": "uint256"
        }
      ],
      "name": "setDefaultLeverageUnlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        }
      ],
      "name": "setDev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newLeverage",
          "type": "uint256"
        }
      ],
      "name": "setLeverageUnlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setMaxGainP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newMaxOpenInterest",
          "type": "uint256"
        }
      ],
      "name": "setMaxOpenInterestWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxPendingMarketOrders",
          "type": "uint256"
        }
      ],
      "name": "setMaxPendingMarketOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setMaxSlP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTradesPerBlock",
          "type": "uint256"
        }
      ],
      "name": "setMaxTradesPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTradesPerPair",
          "type": "uint256"
        }
      ],
      "name": "setMaxTradesPerPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocks",
          "type": "uint256"
        }
      ],
      "name": "setNftSuccessTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "setPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "setPriceAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[5]",
          "name": "_r",
          "type": "uint256[5]"
        }
      ],
      "name": "setSpreadReductionsP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenWETHRouter",
          "type": "address"
        }
      ],
      "name": "setTokenWETHRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trading",
          "type": "address"
        }
      ],
      "name": "setTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "spreadReductionsP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.OpenLimitOrder",
          "name": "o",
          "type": "tuple"
        }
      ],
      "name": "storeOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pairIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialPosToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionSizeWETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "buy",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "leverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sl",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StorageInterface.Trade",
              "name": "trade",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wantedPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slippageP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.PendingMarketOrder",
          "name": "_order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_open",
          "type": "bool"
        }
      ],
      "name": "storePendingMarketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftHolder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "enum StorageInterface.LimitOrder",
              "name": "orderType",
              "type": "uint8"
            }
          ],
          "internalType": "struct StorageInterface.PendingNftOrder",
          "name": "_nftOrder",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_orderId",
          "type": "uint256"
        }
      ],
      "name": "storePendingNftOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referral",
          "type": "address"
        }
      ],
      "name": "storeReferral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.Trade",
          "name": "_trade",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenPriceWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openInterestWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tpLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "beingMarketClosed",
              "type": "bool"
            }
          ],
          "internalType": "struct StorageInterface.TradeInfo",
          "name": "_tradeInfo",
          "type": "tuple"
        }
      ],
      "name": "storeTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenWETHRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensBurned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "traders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "leverageUnlocked",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referralRewardsTotal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trading",
      "outputs": [
        {
          "internalType": "contract PausableInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_leveragedPosWETH",
          "type": "uint256"
        }
      ],
      "name": "transferLinkToAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "unregisterOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_open",
          "type": "bool"
        }
      ],
      "name": "unregisterPendingMarketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_order",
          "type": "uint256"
        }
      ],
      "name": "unregisterPendingNftOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "unregisterTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract NftInterfaceV5[5]",
          "name": "_nfts",
          "type": "address[5]"
        }
      ],
      "name": "updateNfts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.OpenLimitOrder",
          "name": "_o",
          "type": "tuple"
        }
      ],
      "name": "updateOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newSl",
          "type": "uint256"
        }
      ],
      "name": "updateSl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "_newToken",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newTp",
          "type": "uint256"
        }
      ],
      "name": "updateTp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.Trade",
          "name": "_t",
          "type": "tuple"
        }
      ],
      "name": "updateTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x154a03748fbb3006abfea1b369741ffb568e5936826270c33e628c2e901a8c4d",
  "receipt": {
    "to": null,
    "from": "0xa667403454F483dE81A0363Af7FcEE563819D910",
    "contractAddress": "0xbdf8f302BD6F26ca167B57c48B7E8cf6A7651b8f",
    "transactionIndex": 0,
    "gasUsed": "5339855",
    "logsBloom": "0x
    "blockHash": "0xf41ddb6713392803e23587c70b7533929d7650eaffc0e1e5a241ec59d35cbee2",
    "transactionHash": "0x154a03748fbb3006abfea1b369741ffb568e5936826270c33e628c2e901a8c4d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 41919055,
        "transactionHash": "0x154a03748fbb3006abfea1b369741ffb568e5936826270c33e628c2e901a8c4d",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a667403454f483de81a0363af7fcee563819d910",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x000000000000000000000000000000000000000000000000004a9e96c4611cf20000000000000000000000000000000000000000000000001b6abbecd190f8e900000000000000000000000000000000000000000000033ca3df133f8b66bcc40000000000000000000000000000000000000000000000001b201d560d2fdbf700000000000000000000000000000000000000000000033ca429b1d64fc7d9b6",
        "logIndex": 0,
        "blockHash": "0xf41ddb6713392803e23587c70b7533929d7650eaffc0e1e5a241ec59d35cbee2"
      }
    ],
    "blockNumber": 41919055,
    "cumulativeGasUsed": "5339855",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1f420C70B43d2D038A4186071953993B5A421421",
    "0xa667403454F483dE81A0363Af7FcEE563819D910",
    "0xa667403454F483dE81A0363Af7FcEE563819D910"
  ],
  "numDeployments": 1,
  "solcInputHash": "0f660eaf02b319e800391db4de42c79c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract NftInterfaceV5[5]\",\"name\":\"nfts\",\"type\":\"address[5]\"}],\"name\":\"NftsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NumberUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NumberUpdatedPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"openingInterestShort\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"openingInterestLong\",\"type\":\"uint256\"}],\"name\":\"OpenningInterestUpated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"name\":\"SpreadReductionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"SupportedTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"indexed\":true,\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"t\",\"type\":\"tuple\"}],\"name\":\"TradeClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"indexed\":true,\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"t\",\"type\":\"tuple\"}],\"name\":\"TradeOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"TradingContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"TradingContractRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"addTradingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbacks\",\"outputs\":[{\"internalType\":\"contract PausableInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLeverageUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFeesToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFeesWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"distributeLpRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"firstEmptyOpenLimitIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"firstEmptyTradeIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getLeverageUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getOpenLimitOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.OpenLimitOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenLimitOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.OpenLimitOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOpenTrades\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOpenTradesInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"internalType\":\"struct StorageInterface.TradeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getPendingMarketOrder\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.PendingMarketOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getPendingNftOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum StorageInterface.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"internalType\":\"struct StorageInterface.PendingNftOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getPendingOrderIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getReferral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpreadReductionsArray\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFeesToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFeesWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_leveragedPositionSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_WETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_fullFee\",\"type\":\"bool\"}],\"name\":\"handleDevGovFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_mint\",\"type\":\"bool\"}],\"name\":\"handleTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"hasOpenLimitOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseNftRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseReferralRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTradingContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkErc677\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGainP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPendingMarketOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSlP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTradesPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTradesPerPair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftLastSuccess\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftSuccessTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"contract NftInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openInterestWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrderIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrdersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTrades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTradesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTradesInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairTraders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairTradersArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairTradersId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingMarketCloseCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingMarketOpenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingOrderIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"pendingOrderIdsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract PoolInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceAggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorInterfaceV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"removeTradingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reqID_pendingMarketOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reqID_pendingNftOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum StorageInterface.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_callbacks\",\"type\":\"address\"}],\"name\":\"setCallbacks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lev\",\"type\":\"uint256\"}],\"name\":\"setDefaultLeverageUnlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newLeverage\",\"type\":\"uint256\"}],\"name\":\"setLeverageUnlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxGainP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMaxOpenInterest\",\"type\":\"uint256\"}],\"name\":\"setMaxOpenInterestWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPendingMarketOrders\",\"type\":\"uint256\"}],\"name\":\"setMaxPendingMarketOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxSlP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTradesPerBlock\",\"type\":\"uint256\"}],\"name\":\"setMaxTradesPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTradesPerPair\",\"type\":\"uint256\"}],\"name\":\"setMaxTradesPerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocks\",\"type\":\"uint256\"}],\"name\":\"setNftSuccessTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"}],\"name\":\"setPriceAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_r\",\"type\":\"uint256[5]\"}],\"name\":\"setSpreadReductionsP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenWETHRouter\",\"type\":\"address\"}],\"name\":\"setTokenWETHRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"spreadReductionsP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.OpenLimitOrder\",\"name\":\"o\",\"type\":\"tuple\"}],\"name\":\"storeOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.PendingMarketOrder\",\"name\":\"_order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"storePendingMarketOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum StorageInterface.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"internalType\":\"struct StorageInterface.PendingNftOrder\",\"name\":\"_nftOrder\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"storePendingNftOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"}],\"name\":\"storeReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"_trade\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"internalType\":\"struct StorageInterface.TradeInfo\",\"name\":\"_tradeInfo\",\"type\":\"tuple\"}],\"name\":\"storeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenWETHRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"traders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageUnlocked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referralRewardsTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trading\",\"outputs\":[{\"internalType\":\"contract PausableInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_leveragedPosWETH\",\"type\":\"uint256\"}],\"name\":\"transferLinkToAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"unregisterOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"unregisterPendingMarketOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_order\",\"type\":\"uint256\"}],\"name\":\"unregisterPendingNftOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unregisterTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract NftInterfaceV5[5]\",\"name\":\"_nfts\",\"type\":\"address[5]\"}],\"name\":\"updateNfts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.OpenLimitOrder\",\"name\":\"_o\",\"type\":\"tuple\"}],\"name\":\"updateOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newSl\",\"type\":\"uint256\"}],\"name\":\"updateSl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"_newToken\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newTp\",\"type\":\"uint256\"}],\"name\":\"updateTp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"_t\",\"type\":\"tuple\"}],\"name\":\"updateTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Storage.sol\":\"Storage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":125},\"remappings\":[]},\"sources\":{\"contracts/Storage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\nimport \\\"./interfaces/StorageInterface.sol\\\";\\nimport \\\"./interfaces/AggregatorInterfaceV1.sol\\\";\\nimport \\\"./interfaces/PoolInterfaceV5.sol\\\";\\nimport \\\"./interfaces/NftInterfaceV5.sol\\\";\\nimport \\\"./interfaces/PausableInterfaceV5.sol\\\";\\n\\ncontract Storage is StorageInterface {\\n    // Constants\\n    uint public constant PRECISION = 1e10;\\n    bytes32 public constant MINTER_ROLE =\\n        0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6;\\n    TokenInterface public WETH;\\n    IOracle public oracle;\\n    TokenInterface public constant linkErc677 =\\n        TokenInterface(0xb0897686c545045aFc77CF20eC7A532E3120E0F1);\\n\\n    // Contracts (updatable)\\n    AggregatorInterfaceV1 public priceAggregator;\\n    PoolInterfaceV5 public pool;\\n    PausableInterfaceV5 public trading;\\n    PausableInterfaceV5 public callbacks;\\n    TokenInterface public token =\\n        TokenInterface(0x7075cAB6bCCA06613e2d071bd918D1a0241379E2);\\n    NftInterfaceV5[5] public nfts = [\\n        NftInterfaceV5(0xF9A4c522E327935BD1F5a338c121E14e4cc1f898),\\n        NftInterfaceV5(0x77cd42B925e1A82f41d852D6BE727CFc88fddBbC),\\n        NftInterfaceV5(0x3378AD81D09DE23725Ee9B9270635c97Ed601921),\\n        NftInterfaceV5(0x02e2c5825C1a3b69C0417706DbE1327C2Af3e6C2),\\n        NftInterfaceV5(0x2D266A94469d05C9e06D52A4D0d9C23b157767c2)\\n    ];\\n    address public vault;\\n    address public tokenWETHRouter;\\n\\n    // Trading variables\\n    uint public maxTradesPerPair = 3;\\n    uint public maxTradesPerBlock = 5;\\n    uint public maxPendingMarketOrders = 5;\\n    uint public maxGainP = 900; // %\\n    uint public maxSlP = 80; // %\\n    uint public defaultLeverageUnlocked = 50; // x\\n    uint public nftSuccessTimelock = 50; // 50 blocks\\n    uint[5] public spreadReductionsP = [15, 20, 25, 30, 35]; // %\\n\\n    // Gov & dev addresses (updatable)\\n    address public gov; //TODO need to change to our\\n    address public dev; //TODO need to change to our\\n\\n    // Gov & dev fees\\n    uint public devFeesToken; // 1e18\\n    uint public devFeesWETH; // 1e18\\n    uint public govFeesToken; // 1e18\\n    uint public govFeesWETH; // 1e18\\n\\n    // Stats\\n    uint public tokensBurned; // 1e18\\n    uint public tokensMinted; // 1e18\\n    uint public nftRewards; // 1e18\\n\\n    // Enums\\n    // enum LimitOrder {\\n    //     TP,\\n    //     SL,\\n    //     LIQ,\\n    //     OPEN\\n    // }\\n\\n    // Structs\\n    struct Trader {\\n        uint leverageUnlocked;\\n        address referral;\\n        uint referralRewardsTotal; // 1e18\\n    }\\n    // struct Trade {\\n    //     address trader;\\n    //     uint pairIndex;\\n    //     uint index;\\n    //     uint initialPosToken; // 1e18\\n    //     uint positionSizeWETH; // 1e18\\n    //     uint openPrice; // PRECISION\\n    //     bool buy;\\n    //     uint leverage;\\n    //     uint tp; // PRECISION\\n    //     uint sl; // PRECISION\\n    // }\\n    // struct TradeInfo {\\n    //     uint tokenId;\\n    //     uint tokenPriceWETH; // PRECISION\\n    //     uint openInterestWETH; // 1e18\\n    //     uint tpLastUpdated;\\n    //     uint slLastUpdated;\\n    //     bool beingMarketClosed;\\n    // }\\n    // struct OpenLimitOrder {\\n    //     address trader;\\n    //     uint pairIndex;\\n    //     uint index;\\n    //     uint positionSize; // 1e18 (WETH or GFARM2)\\n    //     uint spreadReductionP;\\n    //     bool buy;\\n    //     uint leverage;\\n    //     uint tp; // PRECISION (%)\\n    //     uint sl; // PRECISION (%)\\n    //     uint minPrice; // PRECISION\\n    //     uint maxPrice; // PRECISION\\n    //     uint block;\\n    //     uint tokenId; // index in supportedTokens\\n    // }\\n    // struct PendingMarketOrder {\\n    //     Trade trade;\\n    //     uint block;\\n    //     uint wantedPrice; // PRECISION\\n    //     uint slippageP; // PRECISION (%)\\n    //     uint spreadReductionP;\\n    //     uint tokenId; // index in supportedTokens\\n    // }\\n    // struct PendingNftOrder {\\n    //     address nftHolder;\\n    //     uint nftId;\\n    //     address trader;\\n    //     uint pairIndex;\\n    //     uint index;\\n    //     LimitOrder orderType;\\n    // }\\n\\n    // Supported tokens to open trades with\\n    address[] public supportedTokens;\\n\\n    // User info mapping\\n    mapping(address => Trader) public traders;\\n\\n    // Trades mappings\\n    mapping(address => mapping(uint => mapping(uint => Trade)))\\n        public openTrades;\\n    mapping(address => mapping(uint => mapping(uint => TradeInfo)))\\n        public openTradesInfo;\\n    mapping(address => mapping(uint => uint)) public openTradesCount;\\n\\n    // Limit orders mappings\\n    mapping(address => mapping(uint => mapping(uint => uint)))\\n        public openLimitOrderIds;\\n    mapping(address => mapping(uint => uint)) public openLimitOrdersCount;\\n    OpenLimitOrder[] public openLimitOrders;\\n\\n    // Pending orders mappings\\n    mapping(uint => PendingMarketOrder) public reqID_pendingMarketOrder;\\n    mapping(uint => PendingNftOrder) public reqID_pendingNftOrder;\\n    mapping(address => uint[]) public pendingOrderIds;\\n    mapping(address => mapping(uint => uint)) public pendingMarketOpenCount;\\n    mapping(address => mapping(uint => uint)) public pendingMarketCloseCount;\\n\\n    // List of open trades & limit orders\\n    mapping(uint => address[]) public pairTraders;\\n    mapping(address => mapping(uint => uint)) public pairTradersId;\\n\\n    // Current and max open interests for each pair\\n    mapping(uint => uint[3]) public openInterestWETH; // 1e18 [long,short,max]\\n\\n    // Restrictions & Timelocks\\n    mapping(uint => uint) public tradesPerBlock;\\n    mapping(uint => uint) public nftLastSuccess;\\n\\n    // List of allowed contracts => can update storage + mint/burn tokens\\n    mapping(address => bool) public isTradingContract;\\n\\n    // Events\\n    event SupportedTokenAdded(address a);\\n    event TradingContractAdded(address a);\\n    event TradingContractRemoved(address a);\\n    event AddressUpdated(string name, address a);\\n    event NftsUpdated(NftInterfaceV5[5] nfts);\\n    event NumberUpdated(string name, uint value);\\n    event NumberUpdatedPair(string name, uint pairIndex, uint value);\\n    event SpreadReductionsUpdated(uint[5]);\\n\\n    constructor(address _WETH, address _gov, address _dev) {\\n        WETH = TokenInterface(_WETH);\\n        gov = _gov;\\n        dev = _dev;\\n    }\\n\\n    // Modifiers\\n    modifier onlyGov() {\\n        require(msg.sender == gov);\\n        _;\\n    }\\n    modifier onlyTrading() {\\n        require(\\n            isTradingContract[msg.sender],\\n            // &&\\n            //     token.hasRole(MINTER_ROLE, msg.sender)\\n            \\\"here here\\\"\\n        );\\n        _;\\n    }\\n\\n    // Manage addresses\\n    function setGov(address _gov) external onlyGov {\\n        require(_gov != address(0));\\n        gov = _gov;\\n        emit AddressUpdated(\\\"gov\\\", _gov);\\n    }\\n\\n    function setDev(address _dev) external onlyGov {\\n        require(_dev != address(0));\\n        dev = _dev;\\n        emit AddressUpdated(\\\"dev\\\", _dev);\\n    }\\n\\n    function updateToken(TokenInterface _newToken) external onlyGov {\\n        require(trading.isPaused() && callbacks.isPaused(), \\\"NOT_PAUSED\\\");\\n        require(address(_newToken) != address(0));\\n        token = _newToken;\\n        emit AddressUpdated(\\\"token\\\", address(_newToken));\\n    }\\n\\n    function updateNfts(NftInterfaceV5[5] memory _nfts) external onlyGov {\\n        require(address(_nfts[0]) != address(0));\\n        nfts = _nfts;\\n        emit NftsUpdated(_nfts);\\n    }\\n\\n    // Trading + callbacks contracts\\n    function addTradingContract(address _trading) external onlyGov {\\n        // require(token.hasRole(MINTER_ROLE, _trading), \\\"NOT_MINTER\\\"); /// TODO : need to have a gtoken type token of our own\\n        require(_trading != address(0));\\n        isTradingContract[_trading] = true;\\n        emit TradingContractAdded(_trading);\\n    }\\n\\n    function removeTradingContract(address _trading) external onlyGov {\\n        require(_trading != address(0));\\n        isTradingContract[_trading] = false;\\n        emit TradingContractRemoved(_trading);\\n    }\\n\\n    function addSupportedToken(address _token) external onlyGov {\\n        require(_token != address(0));\\n        supportedTokens.push(_token);\\n        emit SupportedTokenAdded(_token);\\n    }\\n\\n    function setPriceAggregator(address _aggregator) external onlyGov {\\n        require(_aggregator != address(0));\\n        priceAggregator = AggregatorInterfaceV1(_aggregator);\\n        emit AddressUpdated(\\\"priceAggregator\\\", _aggregator);\\n    }\\n\\n    function setPool(address _pool) external onlyGov {\\n        require(_pool != address(0));\\n        pool = PoolInterfaceV5(_pool);\\n        emit AddressUpdated(\\\"pool\\\", _pool);\\n    }\\n\\n    function setVault(address _vault) external onlyGov {\\n        require(_vault != address(0));\\n        vault = _vault;\\n        emit AddressUpdated(\\\"vault\\\", _vault);\\n    }\\n\\n    function setTrading(address _trading) external onlyGov {\\n        require(_trading != address(0));\\n        trading = PausableInterfaceV5(_trading);\\n        emit AddressUpdated(\\\"trading\\\", _trading);\\n    }\\n\\n    function setCallbacks(address _callbacks) external onlyGov {\\n        require(_callbacks != address(0));\\n        callbacks = PausableInterfaceV5(_callbacks);\\n        emit AddressUpdated(\\\"callbacks\\\", _callbacks);\\n    }\\n\\n    function setTokenWETHRouter(address _tokenWETHRouter) external onlyGov {\\n        require(_tokenWETHRouter != address(0));\\n        tokenWETHRouter = _tokenWETHRouter;\\n        emit AddressUpdated(\\\"tokenWETHRouter\\\", _tokenWETHRouter);\\n    }\\n\\n    // Manage trading variables\\n    function setMaxTradesPerBlock(uint _maxTradesPerBlock) external onlyGov {\\n        require(_maxTradesPerBlock > 0);\\n        maxTradesPerBlock = _maxTradesPerBlock;\\n        emit NumberUpdated(\\\"maxTradesPerBlock\\\", _maxTradesPerBlock);\\n    }\\n\\n    function setMaxTradesPerPair(uint _maxTradesPerPair) external onlyGov {\\n        require(_maxTradesPerPair > 0);\\n        maxTradesPerPair = _maxTradesPerPair;\\n        emit NumberUpdated(\\\"maxTradesPerPair\\\", _maxTradesPerPair);\\n    }\\n\\n    function setMaxPendingMarketOrders(\\n        uint _maxPendingMarketOrders\\n    ) external onlyGov {\\n        require(_maxPendingMarketOrders > 0);\\n        maxPendingMarketOrders = _maxPendingMarketOrders;\\n        emit NumberUpdated(\\\"maxPendingMarketOrders\\\", _maxPendingMarketOrders);\\n    }\\n\\n    function setMaxGainP(uint _max) external onlyGov {\\n        require(_max >= 300);\\n        maxGainP = _max;\\n        emit NumberUpdated(\\\"maxGainP\\\", _max);\\n    }\\n\\n    function setDefaultLeverageUnlocked(uint _lev) external onlyGov {\\n        require(_lev > 0);\\n        defaultLeverageUnlocked = _lev;\\n        emit NumberUpdated(\\\"defaultLeverageUnlocked\\\", _lev);\\n    }\\n\\n    function setMaxSlP(uint _max) external onlyGov {\\n        require(_max >= 50);\\n        maxSlP = _max;\\n        emit NumberUpdated(\\\"maxSlP\\\", _max);\\n    }\\n\\n    function setNftSuccessTimelock(uint _blocks) external onlyGov {\\n        nftSuccessTimelock = _blocks;\\n        emit NumberUpdated(\\\"nftSuccessTimelock\\\", _blocks);\\n    }\\n\\n    function setSpreadReductionsP(uint[5] calldata _r) external onlyGov {\\n        require(\\n            _r[0] > 0 &&\\n                _r[1] > _r[0] &&\\n                _r[2] > _r[1] &&\\n                _r[3] > _r[2] &&\\n                _r[4] > _r[3]\\n        );\\n        spreadReductionsP = _r;\\n        emit SpreadReductionsUpdated(_r);\\n    }\\n\\n    function setMaxOpenInterestWETH(\\n        uint _pairIndex,\\n        uint _newMaxOpenInterest\\n    ) external onlyGov {\\n        // Can set max open interest to 0 to pause trading on this pair only\\n        openInterestWETH[_pairIndex][2] = _newMaxOpenInterest;\\n        emit NumberUpdatedPair(\\n            \\\"maxOpenInterestWETH\\\",\\n            _pairIndex,\\n            _newMaxOpenInterest\\n        );\\n    }\\n\\n    // Manage stored trades\\n    function storeTrade(\\n        Trade memory _trade,\\n        TradeInfo memory _tradeInfo\\n    ) external onlyTrading {\\n        _trade.index = firstEmptyTradeIndex(_trade.trader, _trade.pairIndex);\\n        openTrades[_trade.trader][_trade.pairIndex][_trade.index] = _trade;\\n\\n        openTradesCount[_trade.trader][_trade.pairIndex]++;\\n        tradesPerBlock[block.number]++;\\n\\n        if (openTradesCount[_trade.trader][_trade.pairIndex] == 1) {\\n            pairTradersId[_trade.trader][_trade.pairIndex] = pairTraders[\\n                _trade.pairIndex\\n            ].length;\\n            pairTraders[_trade.pairIndex].push(_trade.trader);\\n        }\\n\\n        _tradeInfo.beingMarketClosed = false;\\n        openTradesInfo[_trade.trader][_trade.pairIndex][\\n            _trade.index\\n        ] = _tradeInfo;\\n\\n        updateOpenInterestWETH(\\n            _trade.pairIndex,\\n            _tradeInfo.openInterestWETH,\\n            true,\\n            _trade.buy\\n        );\\n\\n        emit TradeOpen(_trade);\\n    }\\n\\n    function unregisterTrade(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external onlyTrading {\\n        Trade storage t = openTrades[trader][pairIndex][index];\\n        TradeInfo storage i = openTradesInfo[trader][pairIndex][index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n\\n        updateOpenInterestWETH(pairIndex, i.openInterestWETH, false, t.buy);\\n\\n        if (openTradesCount[trader][pairIndex] == 1) {\\n            uint _pairTradersId = pairTradersId[trader][pairIndex];\\n            address[] storage p = pairTraders[pairIndex];\\n\\n            p[_pairTradersId] = p[p.length - 1];\\n            pairTradersId[p[_pairTradersId]][pairIndex] = _pairTradersId;\\n\\n            delete pairTradersId[trader][pairIndex];\\n            p.pop();\\n        }\\n\\n        delete openTrades[trader][pairIndex][index];\\n        delete openTradesInfo[trader][pairIndex][index];\\n\\n        openTradesCount[trader][pairIndex]--;\\n        tradesPerBlock[block.number]++;\\n\\n        emit TradeClose(t);\\n    }\\n\\n    // Manage pending market orders\\n    function storePendingMarketOrder(\\n        PendingMarketOrder memory _order,\\n        uint _id,\\n        bool _open\\n    ) external onlyTrading {\\n        pendingOrderIds[_order.trade.trader].push(_id);\\n\\n        reqID_pendingMarketOrder[_id] = _order;\\n        reqID_pendingMarketOrder[_id].block = block.number;\\n\\n        if (_open) {\\n            pendingMarketOpenCount[_order.trade.trader][\\n                _order.trade.pairIndex\\n            ]++;\\n        } else {\\n            pendingMarketCloseCount[_order.trade.trader][\\n                _order.trade.pairIndex\\n            ]++;\\n            openTradesInfo[_order.trade.trader][_order.trade.pairIndex][\\n                _order.trade.index\\n            ].beingMarketClosed = true;\\n        }\\n    }\\n\\n    function unregisterPendingMarketOrder(\\n        uint _id,\\n        bool _open\\n    ) external onlyTrading {\\n        PendingMarketOrder memory _order = reqID_pendingMarketOrder[_id];\\n        uint[] storage orderIds = pendingOrderIds[_order.trade.trader];\\n\\n        for (uint i = 0; i < orderIds.length; i++) {\\n            if (orderIds[i] == _id) {\\n                if (_open) {\\n                    pendingMarketOpenCount[_order.trade.trader][\\n                        _order.trade.pairIndex\\n                    ]--;\\n                } else {\\n                    pendingMarketCloseCount[_order.trade.trader][\\n                        _order.trade.pairIndex\\n                    ]--;\\n                    openTradesInfo[_order.trade.trader][_order.trade.pairIndex][\\n                        _order.trade.index\\n                    ].beingMarketClosed = false;\\n                }\\n\\n                orderIds[i] = orderIds[orderIds.length - 1];\\n                orderIds.pop();\\n\\n                delete reqID_pendingMarketOrder[_id];\\n                return;\\n            }\\n        }\\n    }\\n\\n    // Manage open interest\\n    function updateOpenInterestWETH(\\n        uint _pairIndex,\\n        uint _leveragedPosWETH,\\n        bool _open,\\n        bool _long\\n    ) private {\\n        uint index = _long ? 0 : 1;\\n        uint[3] storage o = openInterestWETH[_pairIndex];\\n        o[index] = _open\\n            ? o[index] + _leveragedPosWETH\\n            : o[index] - _leveragedPosWETH;\\n        emit OpenningInterestUpated(_pairIndex, o[1], o[0]);\\n    }\\n\\n    // Manage open limit orders\\n    function storeOpenLimitOrder(OpenLimitOrder memory o) external onlyTrading {\\n        o.index = firstEmptyOpenLimitIndex(o.trader, o.pairIndex);\\n        o.block = block.number;\\n        openLimitOrders.push(o);\\n        openLimitOrderIds[o.trader][o.pairIndex][o.index] =\\n            openLimitOrders.length -\\n            1;\\n        openLimitOrdersCount[o.trader][o.pairIndex]++;\\n    }\\n\\n    function updateOpenLimitOrder(\\n        OpenLimitOrder calldata _o\\n    ) external onlyTrading {\\n        if (!hasOpenLimitOrder(_o.trader, _o.pairIndex, _o.index)) {\\n            return;\\n        }\\n        OpenLimitOrder storage o = openLimitOrders[\\n            openLimitOrderIds[_o.trader][_o.pairIndex][_o.index]\\n        ];\\n        o.positionSize = _o.positionSize;\\n        o.buy = _o.buy;\\n        o.leverage = _o.leverage;\\n        o.tp = _o.tp;\\n        o.sl = _o.sl;\\n        o.minPrice = _o.minPrice;\\n        o.maxPrice = _o.maxPrice;\\n        o.block = block.number;\\n    }\\n\\n    function unregisterOpenLimitOrder(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index\\n    ) external onlyTrading {\\n        if (!hasOpenLimitOrder(_trader, _pairIndex, _index)) {\\n            return;\\n        }\\n\\n        // Copy last order to deleted order => update id of this limit order\\n        uint id = openLimitOrderIds[_trader][_pairIndex][_index];\\n        openLimitOrders[id] = openLimitOrders[openLimitOrders.length - 1];\\n        openLimitOrderIds[openLimitOrders[id].trader][\\n            openLimitOrders[id].pairIndex\\n        ][openLimitOrders[id].index] = id;\\n\\n        // Remove\\n        delete openLimitOrderIds[_trader][_pairIndex][_index];\\n        openLimitOrders.pop();\\n\\n        openLimitOrdersCount[_trader][_pairIndex]--;\\n    }\\n\\n    // Manage NFT orders\\n    function storePendingNftOrder(\\n        PendingNftOrder memory _nftOrder,\\n        uint _orderId\\n    ) external onlyTrading {\\n        reqID_pendingNftOrder[_orderId] = _nftOrder;\\n    }\\n\\n    function unregisterPendingNftOrder(uint _order) external onlyTrading {\\n        delete reqID_pendingNftOrder[_order];\\n    }\\n\\n    // Manage open trade\\n    function updateSl(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index,\\n        uint _newSl\\n    ) external onlyTrading {\\n        Trade storage t = openTrades[_trader][_pairIndex][_index];\\n        TradeInfo storage i = openTradesInfo[_trader][_pairIndex][_index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n        t.sl = _newSl;\\n        i.slLastUpdated = block.number;\\n    }\\n\\n    function updateTp(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index,\\n        uint _newTp\\n    ) external onlyTrading {\\n        Trade storage t = openTrades[_trader][_pairIndex][_index];\\n        TradeInfo storage i = openTradesInfo[_trader][_pairIndex][_index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n        t.tp = _newTp;\\n        i.tpLastUpdated = block.number;\\n    }\\n\\n    function updateTrade(Trade memory _t) external onlyTrading {\\n        // useful when partial adding/closing\\n        Trade storage t = openTrades[_t.trader][_t.pairIndex][_t.index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n        t.initialPosToken = _t.initialPosToken;\\n        t.positionSizeWETH = _t.positionSizeWETH;\\n        t.openPrice = _t.openPrice;\\n        t.leverage = _t.leverage;\\n    }\\n\\n    // Manage referrals\\n    function storeReferral(\\n        address _trader,\\n        address _referral\\n    ) external onlyTrading {\\n        Trader storage trader = traders[_trader];\\n        trader.referral = _referral != address(0) &&\\n            trader.referral == address(0) &&\\n            _referral != _trader\\n            ? _referral\\n            : trader.referral;\\n    }\\n\\n    function increaseReferralRewards(\\n        address _referral,\\n        uint _amount\\n    ) external onlyTrading {\\n        traders[_referral].referralRewardsTotal += _amount;\\n    }\\n\\n    // Manage rewards\\n    function distributeLpRewards(uint _amount) external onlyTrading {\\n        pool.increaseAccTokensPerLp(_amount);\\n    }\\n\\n    function increaseNftRewards(\\n        uint _nftId,\\n        uint _amount\\n    ) external onlyTrading {\\n        nftLastSuccess[_nftId] = block.number;\\n        nftRewards += _amount;\\n    }\\n\\n    // Unlock next leverage\\n    function setLeverageUnlocked(\\n        address _trader,\\n        uint _newLeverage\\n    ) external onlyTrading {\\n        traders[_trader].leverageUnlocked = _newLeverage;\\n    }\\n\\n    // Manage dev & gov fees\\n    function handleDevGovFees(\\n        uint _pairIndex,\\n        uint _leveragedPositionSize,\\n        bool _WETH,\\n        bool _fullFee\\n    ) external onlyTrading returns (uint fee) {\\n        fee =\\n            (_leveragedPositionSize * priceAggregator.openFeeP(_pairIndex)) /\\n            PRECISION /\\n            100;\\n        if (!_fullFee) {\\n            fee /= 2;\\n        }\\n\\n        if (_WETH) {\\n            govFeesWETH += fee;\\n            devFeesWETH += fee;\\n        } else {\\n            govFeesToken += fee;\\n            devFeesToken += fee;\\n        }\\n\\n        fee *= 2;\\n    }\\n\\n    function claimFees() external onlyGov {\\n        token.mint(dev, devFeesToken);\\n        token.mint(gov, govFeesToken);\\n\\n        tokensMinted += devFeesToken + govFeesToken;\\n\\n        WETH.transfer(gov, govFeesWETH);\\n        WETH.transfer(dev, devFeesWETH);\\n\\n        devFeesToken = 0;\\n        govFeesToken = 0;\\n        devFeesWETH = 0;\\n        govFeesWETH = 0;\\n    }\\n\\n    // Manage tokens\\n    function handleTokens(\\n        address _a,\\n        uint _amount,\\n        bool _mint\\n    ) external onlyTrading {\\n        if (_mint) {\\n            token.mint(_a, _amount);\\n            tokensMinted += _amount;\\n        } else {\\n            token.burn(_a, _amount);\\n            tokensBurned += _amount;\\n        }\\n    }\\n\\n    function transferWETH(\\n        address _from,\\n        address _to,\\n        uint _amount\\n    ) external onlyTrading {\\n        if (_from == address(this)) {\\n            WETH.transfer(_to, _amount);\\n        } else {\\n            WETH.transferFrom(_from, _to, _amount);\\n        }\\n    }\\n\\n    function mintWETH(address _to, uint _amount) external onlyTrading {\\n        WETH.mint(_to, _amount);\\n    }\\n\\n    function transferLinkToAggregator(\\n        address _from,\\n        uint _pairIndex,\\n        uint _leveragedPosWETH\\n    ) external onlyTrading {\\n        linkErc677.transferFrom(\\n            _from,\\n            address(priceAggregator),\\n            priceAggregator.linkFee(_pairIndex, _leveragedPosWETH)\\n        );\\n    }\\n\\n    // View utils functions\\n    function firstEmptyTradeIndex(\\n        address trader,\\n        uint pairIndex\\n    ) public view returns (uint index) {\\n        for (uint i = 0; i < maxTradesPerPair; i++) {\\n            if (openTrades[trader][pairIndex][i].leverage == 0) {\\n                index = i;\\n                break;\\n            }\\n        }\\n    }\\n\\n    function firstEmptyOpenLimitIndex(\\n        address trader,\\n        uint pairIndex\\n    ) public view returns (uint index) {\\n        for (uint i = 0; i < maxTradesPerPair; i++) {\\n            if (!hasOpenLimitOrder(trader, pairIndex, i)) {\\n                index = i;\\n                break;\\n            }\\n        }\\n    }\\n\\n    function hasOpenLimitOrder(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) public view returns (bool) {\\n        if (openLimitOrders.length == 0) {\\n            return false;\\n        }\\n        OpenLimitOrder storage o = openLimitOrders[\\n            openLimitOrderIds[trader][pairIndex][index]\\n        ];\\n        return\\n            o.trader == trader && o.pairIndex == pairIndex && o.index == index;\\n    }\\n\\n    // Additional getters\\n    function getReferral(address _trader) external view returns (address) {\\n        return traders[_trader].referral;\\n    }\\n\\n    function getLeverageUnlocked(address _trader) external view returns (uint) {\\n        return traders[_trader].leverageUnlocked;\\n    }\\n\\n    function pairTradersArray(\\n        uint _pairIndex\\n    ) external view returns (address[] memory) {\\n        return pairTraders[_pairIndex];\\n    }\\n\\n    function getPendingOrderIds(\\n        address _trader\\n    ) external view returns (uint[] memory) {\\n        return pendingOrderIds[_trader];\\n    }\\n\\n    function pendingOrderIdsCount(\\n        address _trader\\n    ) external view returns (uint) {\\n        return pendingOrderIds[_trader].length;\\n    }\\n\\n    function getOpenLimitOrder(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index\\n    ) external view returns (OpenLimitOrder memory) {\\n        require(hasOpenLimitOrder(_trader, _pairIndex, _index));\\n        return openLimitOrders[openLimitOrderIds[_trader][_pairIndex][_index]];\\n    }\\n\\n    function getOpenLimitOrders()\\n        external\\n        view\\n        returns (OpenLimitOrder[] memory)\\n    {\\n        return openLimitOrders;\\n    }\\n\\n    function getSupportedTokens() external view returns (address[] memory) {\\n        return supportedTokens;\\n    }\\n\\n    function getSpreadReductionsArray() external view returns (uint[5] memory) {\\n        return spreadReductionsP;\\n    }\\n\\n    function getGov() external view returns (address _gov) {\\n        return gov;\\n    }\\n\\n    function setOracle(address _oracle) external {\\n        oracle = IOracle(_oracle);\\n    }\\n\\n    function getOpenTrades(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external view returns (Trade memory) {\\n        return openTrades[trader][pairIndex][index];\\n    }\\n\\n    function getOpenTradesInfo(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external view returns (TradeInfo memory) {\\n        return openTradesInfo[trader][pairIndex][index];\\n    }\\n\\n    function getPendingMarketOrder(\\n        uint orderId\\n    ) external view returns (PendingMarketOrder memory) {\\n        return reqID_pendingMarketOrder[orderId];\\n    }\\n\\n    function getPendingNftOrder(\\n        uint orderId\\n    ) external view returns (PendingNftOrder memory) {\\n        return reqID_pendingNftOrder[orderId];\\n    }\\n}\\n\",\"keccak256\":\"0x78a68b32e25a439a97a7831074349c1e8e4c54dec65ea86fa8f344ed611f505a\",\"license\":\"MIT\"},\"contracts/interfaces/AggregatorInterfaceV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\nimport \\\"./StorageInterface.sol\\\";\\n\\ninterface AggregatorInterfaceV1 {\\n    enum OrderType {\\n        MARKET_OPEN,\\n        MARKET_CLOSE,\\n        LIMIT_OPEN,\\n        LIMIT_CLOSE\\n    }\\n\\n    function getPrice(uint, OrderType, uint) external returns (uint);\\n\\n    function tokenPriceWETH() external view returns (uint);\\n\\n    function pairMinOpenLimitSlippageP(uint) external view returns (uint);\\n\\n    function closeFeeP(uint) external view returns (uint);\\n\\n    function linkFee(uint, uint) external view returns (uint);\\n\\n    function openFeeP(uint) external view returns (uint);\\n\\n    function pairMinLeverage(uint) external view returns (uint);\\n\\n    function pairMaxLeverage(uint) external view returns (uint);\\n\\n    function pairsCount() external view returns (uint);\\n\\n    function tokenWETHReservesLp() external view returns (uint, uint);\\n\\n    function referralP(uint) external view returns (uint);\\n\\n    function nftLimitOrderFeeP(uint) external view returns (uint);\\n\\n    function marketOrderfulfill(\\n        uint256 orderId,\\n        StorageInterface.PendingMarketOrder memory o\\n    ) external;\\n\\n    function nftOrderfulfill(\\n        uint256 orderId,\\n        StorageInterface.PendingNftOrder memory o\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2db40cc6e09498c8ed9453e3344a63f10dd2bd807df042c1bc657ddb2e08d124\",\"license\":\"MIT\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\ninterface IOracle {\\n    function getPrice(\\n        uint256 tokenIndex\\n    ) external view returns (uint256 price, uint256 lastupdateTime);\\n\\n    function getFundingFee(\\n        uint256 tokenIndex\\n    ) external view returns (uint256 fee);\\n}\\n\",\"keccak256\":\"0xee98e4fbf009e257228d09fe8741b67c7e01247a83cff8ae73ccca4738624ff4\",\"license\":\"MIT\"},\"contracts/interfaces/IToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\ninterface IToken {\\n    function manager() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function currentEpoch() external view returns (uint);\\n\\n    function currentEpochStart() external view returns (uint);\\n\\n    function currentEpochPositiveOpenPnl() external view returns (uint);\\n\\n    function updateAccPnlPerTokenUsed(\\n        uint prevPositiveOpenPnl,\\n        uint newPositiveOpenPnl\\n    ) external returns (uint);\\n\\n    struct LockedDeposit {\\n        address owner;\\n        uint shares; // 1e18\\n        uint assetsDeposited; // 1e18\\n        uint assetsDiscount; // 1e18\\n        uint atTimestamp; // timestamp\\n        uint lockDuration; // timestamp\\n    }\\n\\n    function getLockedDeposit(\\n        uint depositId\\n    ) external view returns (LockedDeposit memory);\\n\\n    function sendAssets(uint assets, address receiver) external;\\n\\n    function receiveAssets(uint assets, address user) external;\\n\\n    function distributeReward(uint assets) external;\\n\\n    function currentBalanceWETH() external view returns (uint);\\n\\n    function tvl() external view returns (uint);\\n\\n    function marketCap() external view returns (uint);\\n\\n    function getPendingAccBlockWeightedMarketCap(\\n        uint currentBlock\\n    ) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xddaaad1ec0ae5742e39ffff1c2c85404729e3be57479f73b190c1d0492dcb01d\",\"license\":\"MIT\"},\"contracts/interfaces/NftInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\ninterface NftInterfaceV5 {\\n    function balanceOf(address) external view returns (uint);\\n\\n    function ownerOf(uint) external view returns (address);\\n\\n    function transferFrom(address, address, uint) external;\\n\\n    function tokenOfOwnerByIndex(address, uint) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xf8f2f1f9d4faa342be365faaa63ac29b21c83e23ea6d8aca5aeec9b6e45f3ca0\",\"license\":\"MIT\"},\"contracts/interfaces/PausableInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\ninterface PausableInterfaceV5 {\\n    function isPaused() external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf439723f853b013721f9cc98c3e9ace8f63d178512916f35307be17c090b2a12\",\"license\":\"MIT\"},\"contracts/interfaces/PoolInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\ninterface PoolInterfaceV5 {\\n    function increaseAccTokensPerLp(uint) external;\\n}\\n\",\"keccak256\":\"0xf8dccfa1b7714aea72c882ba90068cbb38351cfbfb5c0a65a03b47a5247548b7\",\"license\":\"MIT\"},\"contracts/interfaces/StorageInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\nimport \\\"./TokenInterface.sol\\\";\\nimport \\\"./NftInterfaceV5.sol\\\";\\nimport \\\"./IToken.sol\\\";\\nimport \\\"./AggregatorInterfaceV1.sol\\\";\\nimport \\\"./IOracle.sol\\\";\\nimport \\\"./PausableInterfaceV5.sol\\\";\\n\\ninterface StorageInterface {\\n    enum LimitOrder {\\n        TP,\\n        SL,\\n        LIQ,\\n        OPEN,\\n        PAR_LIQ\\n    }\\n    struct Trade {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint initialPosToken; // 1e18\\n        uint positionSizeWETH; // 1e18\\n        uint openPrice; // PRECISION\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION\\n        uint sl; // PRECISION\\n    }\\n    struct TradeInfo {\\n        uint tokenId;\\n        uint tokenPriceWETH; // PRECISION\\n        uint openInterestWETH; // 1e18\\n        uint tpLastUpdated;\\n        uint slLastUpdated;\\n        bool beingMarketClosed;\\n    }\\n    struct OpenLimitOrder {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint positionSize; // 1e18 (WETH or GFARM2)\\n        uint spreadReductionP;\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION (%)\\n        uint sl; // PRECISION (%)\\n        uint minPrice; // PRECISION\\n        uint maxPrice; // PRECISION\\n        uint block;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingMarketOrder {\\n        Trade trade;\\n        uint block;\\n        uint wantedPrice; // PRECISION\\n        uint slippageP; // PRECISION (%)\\n        uint spreadReductionP;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingNftOrder {\\n        address nftHolder;\\n        uint nftId;\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        LimitOrder orderType;\\n    }\\n\\n    event OpenningInterestUpated(\\n        uint256 indexed pairIndex,\\n        uint256 indexed openingInterestShort,\\n        uint256 indexed openingInterestLong\\n    );\\n\\n    event TradeOpen(Trade indexed t);\\n\\n    event TradeClose(Trade indexed t);\\n\\n    function PRECISION() external pure returns (uint);\\n\\n    function gov() external view returns (address);\\n\\n    function dev() external view returns (address);\\n\\n    function WETH() external view returns (TokenInterface);\\n\\n    function token() external view returns (TokenInterface);\\n\\n    function linkErc677() external view returns (TokenInterface);\\n\\n    function priceAggregator() external view returns (AggregatorInterfaceV1);\\n\\n    function vault() external view returns (address);\\n\\n    function trading() external view returns (PausableInterfaceV5);\\n\\n    function callbacks() external view returns (PausableInterfaceV5);\\n\\n    function handleTokens(address, uint, bool) external;\\n\\n    function transferWETH(address, address, uint) external;\\n\\n    function transferLinkToAggregator(address, uint, uint) external;\\n\\n    function unregisterTrade(address, uint, uint) external;\\n\\n    function unregisterPendingMarketOrder(uint, bool) external;\\n\\n    function unregisterOpenLimitOrder(address, uint, uint) external;\\n\\n    function hasOpenLimitOrder(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (bool);\\n\\n    function storePendingMarketOrder(\\n        PendingMarketOrder memory,\\n        uint,\\n        bool\\n    ) external;\\n\\n    function getOpenTrades(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (Trade memory);\\n\\n    function getOpenTradesInfo(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (TradeInfo memory);\\n\\n    function updateSl(address, uint, uint, uint) external;\\n\\n    function updateTp(address, uint, uint, uint) external;\\n\\n    function getOpenLimitOrder(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (OpenLimitOrder memory);\\n\\n    function spreadReductionsP(uint) external view returns (uint);\\n\\n    function storeOpenLimitOrder(OpenLimitOrder memory) external;\\n\\n    function getPendingMarketOrder(\\n        uint\\n    ) external view returns (PendingMarketOrder memory);\\n\\n    function storePendingNftOrder(PendingNftOrder memory, uint) external;\\n\\n    function updateOpenLimitOrder(OpenLimitOrder calldata) external;\\n\\n    function firstEmptyTradeIndex(address, uint) external view returns (uint);\\n\\n    function firstEmptyOpenLimitIndex(\\n        address,\\n        uint\\n    ) external view returns (uint);\\n\\n    function increaseNftRewards(uint, uint) external;\\n\\n    function nftSuccessTimelock() external view returns (uint);\\n\\n    function getPendingNftOrder(\\n        uint\\n    ) external view returns (PendingNftOrder memory);\\n\\n    function updateTrade(Trade memory) external;\\n\\n    function nftLastSuccess(uint) external view returns (uint);\\n\\n    function unregisterPendingNftOrder(uint) external;\\n\\n    function handleDevGovFees(uint, uint, bool, bool) external returns (uint);\\n\\n    function distributeLpRewards(uint) external;\\n\\n    function storeTrade(Trade memory, TradeInfo memory) external;\\n\\n    function openLimitOrdersCount(address, uint) external view returns (uint);\\n\\n    function openTradesCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketOpenCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketCloseCount(\\n        address,\\n        uint\\n    ) external view returns (uint);\\n\\n    function maxTradesPerPair() external view returns (uint);\\n\\n    function pendingOrderIdsCount(address) external view returns (uint);\\n\\n    function maxPendingMarketOrders() external view returns (uint);\\n\\n    function openInterestWETH(uint, uint) external view returns (uint);\\n\\n    function getPendingOrderIds(address) external view returns (uint[] memory);\\n\\n    function nfts(uint) external view returns (NftInterfaceV5);\\n\\n    // function fakeBlockNumber() external view returns (uint); // Testing\\n\\n    function getGov() external view returns (address); // checking\\n\\n    function mintWETH(address _to, uint _amount) external;\\n\\n    function oracle() external view returns (IOracle);\\n}\\n\",\"keccak256\":\"0xa19659fba0b03423e47b86410ef3dac74b997c1db803d3533f9505b888b96a9a\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\ninterface TokenInterface {\\n    function burn(address, uint256) external;\\n\\n    function mint(address, uint256) external;\\n\\n    function transfer(address, uint256) external returns (bool);\\n\\n    function transferFrom(address, address, uint256) external returns (bool);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function hasRole(bytes32, address) external view returns (bool);\\n\\n    function approve(address, uint256) external returns (bool);\\n\\n    function allowance(address, address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7a399fcb853dd13380cdcb8ec4fbfa3f37a559d521c5e45505bae5a1033f3604\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x600680546001600160a01b031916737075cab6bcca06613e2d071bd918d1a0241379e217905561012060405273f9a4c522e327935bd1f5a338c121e14e4cc1f89860809081527377cd42b925e1a82f41d852d6be727cfc88fddbbc60a052733378ad81d09de23725ee9b9270635c97ed60192160c0527302e2c5825c1a3b69c0417706dbe1327c2af3e6c260e052732d266a94469d05c9e06d52a4d0d9c23b157767c261010052620000b69060079060056200018b565b506003600e556005600f818155601082905561038460115560506012556032601381905560149081556040805160a0810182529283526020830191909152601990820152601e606082015260236080820152620001179160159190620001e8565b503480156200012557600080fd5b506040516200599f3803806200599f833981016040819052620001489162000252565b600080546001600160a01b039485166001600160a01b031991821617909155601a805493851693821693909317909255601b80549190931691161790556200029c565b8260058101928215620001d6579160200282015b82811115620001d657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200019f565b50620001e49291506200021e565b5090565b8260058101928215620001d6579160200282015b82811115620001d6578251829060ff16905591602001919060010190620001fc565b5b80821115620001e457600081556001016200021f565b80516001600160a01b03811681146200024d57600080fd5b919050565b6000806000606084860312156200026857600080fd5b620002738462000235565b9250620002836020850162000235565b9150620002936040850162000235565b90509250925092565b6156f380620002ac6000396000f3fe608060405234801561001057600080fd5b50600436106105df5760003560e01c806390d112b911610307578063d294f0931161019e578063ecf56a1f116100ef578063f823e2ae1161009d578063f823e2ae14611226578063f8d24b4814611239578063fbfa77cf14611242578063fc0c546a14611255578063fdb5941314611268578063fe0fc8d614611271578063fece4eac1461128457600080fd5b8063ecf56a1f14611133578063eda00d5414611146578063ee51f63614611177578063ee92a4ff146111d8578063f013d278146111e1578063f65d9dbe146111f4578063f7b3c6fd146111fd57600080fd5b8063dcdf339a1161014c578063dcdf339a146110b8578063e212991a146110cb578063e3cbe3a7146110de578063e3f04eba146110f1578063e765540314611104578063e7873b5814611117578063ec44acf21461112057600080fd5b8063d294f09314611035578063d3b5fe701461103d578063d3c7c2c714611050578063d477f05f14611058578063d4bda9081461106b578063d53913931461107e578063dc2123ff146110a557600080fd5b8063ad5c464811610258578063c122fea611610206578063c122fea614610fba578063c311ab3114610fc3578063c625562614610fd6578063c76faf7814610fe9578063cab9458014610ffc578063cfad57a21461100f578063cfbacc141461102257600080fd5b8063ad5c464814610e51578063b4b0f56714610e64578063b66e6b0514610e77578063b767608a14610f49578063b7682d5414610f5c578063b8878a2c14610f87578063bcc9f1d314610fa757600080fd5b80639d1a1073116102b55780639d1a107314610d07578063a2ab2dee14610d1a578063a354418114610d2b578063a3a80ffe14610d3e578063a553906c14610e12578063aa3b7d7714610e25578063aaf5eb6814610e4557600080fd5b806390d112b914610bc357806391cca3db14610bd657806392a88fa214610be9578063959509e414610c4457806397e7995a14610c4d57806399794d3514610c785780639c8912f114610cdc57600080fd5b806356a6796f1161047b578063796d82d9116103cc578063817fa1a41161037a578063817fa1a414610ad3578063878679e614610ae65780638a0bd70214610af95780638a238ae514610b0e5780638bbb644c14610b215780638bf7f5f914610b2a5780638c8ff1d514610b3d57600080fd5b8063796d82d914610a385780637ad3def214610a415780637adbf97314610a545780637dc0d1d014610a845780637f0584ed14610a975780637fdb96f314610ab75780638049fde714610aca57600080fd5b80636817031b116104295780636817031b1461098757806368ca199d1461099a5780636d69fcaf146109c35780636d81d981146109d65780636de9f32b14610a095780637395d79e14610a1257806377a9fdcf14610a2557600080fd5b806356a6796f146108fa5780635a9125511461090f5780635ad9f993146109185780635b621e32146109215780635c76ac9e146109345780635fbfe8cc146109545780636690a8061461097457600080fd5b8063292c16171161053557806343b8fab5116104e357806343b8fab5146108505780634415b369146108635780634437152a1461088e57806344d44f5a146108a15780635070e837146108b457806352e5398f146108c75780635378143e146108e757600080fd5b8063292c1617146107405780632a0a1cb0146107535780632d1f941a146107735780633078fff51461077c578063321495921461078f5780633b0f0f2f1461080e5780633dae10a01461083d57600080fd5b806316f0115b1161059257806316f0115b146106885780631c8636b41461069b578063201d8bdb146106d457806321f7a30b146106e7578063255566e4146106fa578063265aa6211461071a57806328b1f8871461072d57600080fd5b8062b12783146105e457806306aef7de14610614578063099fa934146106295780630eee3e4a1461063c57806312d43a511461064f57806313b36ff614610662578063145ed21c14610675575b600080fd5b6005546105f7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610627610622366004614a17565b61129f565b005b610627610637366004614a9e565b611312565b61062761064a366004614ab7565b61137a565b601a546105f7906001600160a01b031681565b610627610670366004614a9e565b61140e565b610627610683366004614ae9565b611479565b6003546105f7906001600160a01b031681565b6106c66106a9366004614b06565b602760209081526000928352604080842090915290825290205481565b60405190815260200161060b565b6106276106e2366004614a9e565b611509565b6106276106f5366004614b06565b61158d565b61070d610708366004614a9e565b6115f0565b60405161060b9190614b6a565b6105f7610728366004614a9e565b6116bb565b61062761073b366004614b06565b6116db565b6106c661074e366004614b06565b611726565b610766610761366004614bbc565b61178a565b60405161060b9190614c65565b6106c6601d5481565b6002546105f7906001600160a01b031681565b6107a261079d366004614a9e565b61183c565b604080516001600160a01b03909e168e5260208e019c909c529a8c019990995260608b019790975260808a019590955292151560a089015260c088019190915260e08701526101008601526101208501526101408401526101608301526101808201526101a00161060b565b6105f761081c366004614ae9565b6001600160a01b039081166000908152602460205260409020600101541690565b6106c661084b366004614a9e565b6118c3565b61062761085e366004614a9e565b6118da565b6106c6610871366004614b06565b603160209081526000928352604080842090915290825290205481565b61062761089c366004614ae9565b611952565b6106c66108af366004614b06565b6119d7565b6106276108c2366004614ae9565b611a0e565b6106c66108d5366004614a9e565b60336020526000908152604090205481565b6106276108f5366004614c93565b611a9e565b610902611bd5565b60405161060b9190614cd5565b6106c660125481565b6106c660225481565b61062761092f366004614ae9565b611c11565b610947610942366004614ae9565b611c8c565b60405161060b9190614d06565b610967610962366004614a9e565b611cf8565b60405161060b9190614d4a565b610627610982366004614bbc565b611d63565b610627610995366004614ae9565b611ea3565b6106c66109a8366004614ae9565b6001600160a01b031660009081526024602052604090205490565b6106276109d1366004614ae9565b611f29565b6109f96109e4366004614ae9565b60356020526000908152604090205460ff1681565b604051901515815260200161060b565b6106c660215481565b610627610a20366004614ab7565b611fd1565b6106c6610a33366004614ab7565b612023565b6106c6600f5481565b610627610a4f366004614ae9565b612048565b610627610a62366004614ae9565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546105f7906001600160a01b031681565b610aaa610aa5366004614a9e565b6121f0565b60405161060b9190614d8b565b610627610ac5366004614ddb565b6122c9565b6106c660105481565b610627610ae1366004614e16565b612365565b600d546105f7906001600160a01b031681565b610b01612430565b60405161060b9190614f3b565b610627610b1c366004614f7e565b61251f565b6106c660135481565b610627610b38366004614a9e565b6125d1565b610b94610b4b366004614bbc565b6026602090815260009384526040808520825292845282842090528252902080546001820154600283015460038401546004850154600590950154939492939192909160ff1686565b6040805196875260208701959095529385019290925260608401526080830152151560a082015260c00161060b565b610627610bd1366004614bbc565b612643565b601b546105f7906001600160a01b031681565b610c21610bf7366004614ae9565b60246020526000908152604090208054600182015460029092015490916001600160a01b03169083565b604080519384526001600160a01b0390921660208401529082015260600161060b565b6106c6601f5481565b6106c6610c5b366004614b06565b602960209081526000928352604080842090915290825290205481565b610cca610c86366004614a9e565b602c602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695939490921692909160ff1686565b60405161060b96959493929190614fbf565b6106c6610cea366004614b06565b602e60209081526000928352604080842090915290825290205481565b610627610d15366004615004565b61299c565b601a546001600160a01b03166105f7565b610627610d39366004614ddb565b612a5e565b610dbc610d4c366004614bbc565b602560209081526000938452604080852082529284528284209052825290208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b03909816989697959694959394929360ff9092169290918a565b604080516001600160a01b03909b168b5260208b0199909952978901969096526060880194909452608087019290925260a0860152151560c085015260e08401526101008301526101208201526101400161060b565b610627610e20366004614ae9565b612afa565b6106c6610e33366004614a9e565b60346020526000908152604090205481565b6106c66402540be40081565b6000546105f7906001600160a01b031681565b610627610e72366004614bbc565b612b82565b610f37610e85366004614a9e565b602b6020908152600091825260409182902082516101408101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460ff16151560c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154600b830154600c840154600d850154600e90950154939492939192909186565b60405161060b9695949392919061503d565b610627610f57366004615079565b612e8e565b6106c6610f6a366004614b06565b602f60209081526000928352604080842090915290825290205481565b610f9a610f95366004614bbc565b612fbd565b60405161060b9190615092565b6106c6610fb5366004614b06565b613140565b6106c660115481565b610627610fd1366004615134565b613171565b6105f7610fe4366004614a9e565b613420565b610627610ff73660046151c4565b61344a565b61062761100a366004615256565b61362d565b61062761101d366004614ae9565b613931565b6106c661103036600461527b565b6139b5565b610627613b0f565b61062761104b3660046152c5565b613d2b565b610967614041565b610627611066366004614ae9565b6140a2565b610627611079366004615378565b614126565b6106c67f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6106276110b3366004614a9e565b6141c3565b6109f96110c6366004614bbc565b614234565b6106276110d9366004614a9e565b6142d0565b6105f76110ec366004614ab7565b614336565b6106276110ff366004614a9e565b61436e565b610627611112366004614b06565b6143f7565b6106c660205481565b6004546105f7906001600160a01b031681565b610627611141366004614a9e565b61448e565b6106c6611154366004614bbc565b602860209081526000938452604080852082529284528284209052825290205481565b61118a611185366004614bbc565b614505565b60405161060b9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b6106c6601c5481565b6106276111ef366004615395565b6145b9565b6106c6600e5481565b6106c661120b366004614ae9565b6001600160a01b03166000908152602d602052604090205490565b610627611234366004614ae9565b614663565b6106c660145481565b600c546105f7906001600160a01b031681565b6006546105f7906001600160a01b031681565b6106c6601e5481565b61062761127f366004614ae9565b6146e1565b6105f773b0897686c545045afc77cf20ec7a532e3120e0f181565b601a546001600160a01b031633146112b657600080fd5b80516001600160a01b03166112ca57600080fd5b6112d76007826005614828565b507f89a3bfeda71ede5f8735aa09127c97cd56aa3803356c52f7c30caf418238b4648160405161130791906153cd565b60405180910390a150565b601a546001600160a01b0316331461132957600080fd5b603281101561133757600080fd5b6012819055604080518181526006918101919091526506d6178536c560d41b60608201526020810182905260008051602061567e83398151915290608001611307565b601a546001600160a01b0316331461139157600080fd5b6000828152603260205260409020819060020155604080516060808252601390820152720dac2f09ee0cadc92dce8cae4cae6e8ae8aa89606b1b6080820152602081018490529081018290527f957cd67ea49f3e1ee953cdd23a1ba1f11d973e842411220d5c24ef0e24e1c9569060a00160405180910390a15050565b601a546001600160a01b0316331461142557600080fd5b61012c81101561143457600080fd5b6011819055604080518181526008918101919091526706d61784761696e560c41b60608201526020810182905260008051602061567e83398151915290608001611307565b601a546001600160a01b0316331461149057600080fd5b6001600160a01b0381166114a357600080fd5b600d80546001600160a01b0319166001600160a01b03831690811790915560408051818152600f918101919091526e3a37b5b2b72ba2aa242937baba32b960891b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604090205460ff166115415760405162461bcd60e51b8152600401611538906153fe565b60405180910390fd5b6000908152602c6020526040812080546001600160a01b03199081168255600182018390556002820180549091169055600381018290556004810191909155600501805460ff19169055565b3360009081526035602052604090205460ff166115bc5760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b038216600090815260246020526040812060020180548392906115e7908490615437565b90915550505050565b6116266040805160c08101825260008082526020820181905291810182905260608101829052608081018290529060a082015290565b6000828152602c6020908152604091829020825160c08101845281546001600160a01b039081168252600183015493820193909352600282015490921692820192909252600382015460608201526004808301546080830152600583015491929160a084019160ff909116908111156116a1576116a1614b32565b60048111156116b2576116b2614b32565b90525092915050565b600781600581106116cb57600080fd5b01546001600160a01b0316905081565b3360009081526035602052604090205460ff1661170a5760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b03909116600090815260246020526040902055565b6000805b600e54811015611783576001600160a01b03841660009081526025602090815260408083208684528252808320848452909152812060070154900361177157809150611783565b8061177b8161544f565b91505061172a565b5092915050565b611792614880565b506001600160a01b0380841660009081526025602090815260408083208684528252808320858452825291829020825161014081018452815490941684526001810154918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460ff16151560c0830152600781015460e08301526008810154610100830152600901546101208201525b9392505050565b602a818154811061184c57600080fd5b60009182526020909120600d9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b8c0154600c909c01546001600160a01b03909b169c50989a97999698959760ff90951696939592949193909291908d565b601581600581106118d357600080fd5b0154905081565b601a546001600160a01b031633146118f157600080fd5b600081116118fe57600080fd5b60138190556040805181815260179181019190915276191959985d5b1d13195d995c9859d9555b9b1bd8dad959604a1b60608201526020810182905260008051602061567e83398151915290608001611307565b601a546001600160a01b0316331461196957600080fd5b6001600160a01b03811661197c57600080fd5b600380546001600160a01b0319166001600160a01b03831690811790915560408051818152600491810191909152631c1bdbdb60e21b6060820152602081019190915260008051602061569e83398151915290608001611307565b6000805b600e54811015611783576119f0848483614234565b6119fc57809150611783565b80611a068161544f565b9150506119db565b601a546001600160a01b03163314611a2557600080fd5b6001600160a01b038116611a3857600080fd5b600280546001600160a01b0319166001600160a01b03831690811790915560408051818152600f918101919091526e383934b1b2a0b3b3b932b3b0ba37b960891b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604090205460ff16611acd5760405162461bcd60e51b8152600401611538906153fe565b8015611b54576006546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990611b059086908690600401615468565b600060405180830381600087803b158015611b1f57600080fd5b505af1158015611b33573d6000803e3d6000fd5b505050508160216000828254611b499190615437565b90915550611bd09050565b600654604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac90611b869086908690600401615468565b600060405180830381600087803b158015611ba057600080fd5b505af1158015611bb4573d6000803e3d6000fd5b505050508160206000828254611bca9190615437565b90915550505b505050565b611bdd6148de565b6040805160a08101918290529060159060059082845b815481526020019060010190808311611bf3575b5050505050905090565b601a546001600160a01b03163314611c2857600080fd5b6001600160a01b038116611c3b57600080fd5b6001600160a01b038116600081815260356020908152604091829020805460ff1916905590519182527ff9cf924d7d98e6e0a27ec523cd7214b0bbdfaba197018b33b41a702f5238190e9101611307565b6001600160a01b0381166000908152602d6020908152604091829020805483518184028101840190945280845260609392830182828015611cec57602002820191906000526020600020905b815481526020019060010190808311611cd8575b50505050509050919050565b600081815260306020908152604091829020805483518184028101840190945280845260609392830182828015611cec57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611d3a5750505050509050919050565b3360009081526035602052604090205460ff16611d925760405162461bcd60e51b8152600401611538906153fe565b60025460405163b9e0336f60e01b8152600481018490526024810183905273b0897686c545045afc77cf20ec7a532e3120e0f1916323b872dd9186916001600160a01b031690819063b9e0336f90604401602060405180830381865afa158015611e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e249190615481565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b6020604051808303816000875af1158015611e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9d919061549a565b50505050565b601a546001600160a01b03163314611eba57600080fd5b6001600160a01b038116611ecd57600080fd5b600c80546001600160a01b0319166001600160a01b03831690811790915560408051818152600591810191909152641d985d5b1d60da1b6060820152602081019190915260008051602061569e83398151915290608001611307565b601a546001600160a01b03163314611f4057600080fd5b6001600160a01b038116611f5357600080fd5b602380546001810182556000919091527fd57b2b5166478fd4318d2acc6cc2c704584312bdd8781b32d5d06abda57f42300180546001600160a01b0319166001600160a01b0383169081179091556040519081527fd1be2e90bd3d24839d9dd94ad871068e1f9688b02fa43f2a62c9975dfa9de2d790602001611307565b3360009081526035602052604090205460ff166120005760405162461bcd60e51b8152600401611538906153fe565b6000828152603460205260408120439055602280548392906115e7908490615437565b6032602052816000526040600020816003811061203f57600080fd5b01549150829050565b601a546001600160a01b0316331461205f57600080fd5b60048054604080516358c3de9360e11b815290516001600160a01b039092169263b187bd269282820192602092908290030181865afa1580156120a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ca919061549a565b80156121485750600560009054906101000a90046001600160a01b03166001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015612124573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612148919061549a565b6121815760405162461bcd60e51b815260206004820152600a6024820152691393d517d4105554d15160b21b6044820152606401611538565b6001600160a01b03811661219457600080fd5b600680546001600160a01b0319166001600160a01b03831690811790915560408051818152600591810191909152643a37b5b2b760d91b6060820152602081019190915260008051602061569e83398151915290608001611307565b6121f86148fc565b506000908152602b602090815260409182902082516102008101845281546001600160a01b031660c08201908152600183015460e08301526002830154610100830152600383015461012083015260048301546101408301526005830154610160830152600683015460ff16151561018083015260078301546101a083015260088301546101c083015260098301546101e08301528152600a82015492810192909252600b81015492820192909252600c8201546060820152600d8201546080820152600e9091015460a082015290565b3360009081526035602052604090205460ff166122f85760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b03841660008181526025602090815260408083208784528252808320868452825280832093835260268252808320878452825280832086845290915281206007830154909103612350575050611e9d565b60089091018290554360039091015550505050565b3360009081526035602052604090205460ff166123945760405162461bcd60e51b8152600401611538906153fe565b6000818152602c6020908152604091829020845181546001600160a01b03199081166001600160a01b03928316178355928601516001808401919091559386015160028301805490941691161790915560608401516003820155608084015160048083019190915560a085015160058301805487959293919260ff1990911691849081111561242557612425614b32565b021790555050505050565b6060602a805480602002602001604051908101604052809291908181526020016000905b82821015612516576000848152602090819020604080516101a081018252600d860290920180546001600160a01b03168352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460ff16151560a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610120840152600a810154610140840152600b810154610160840152600c01546101808301529083529092019101612454565b50505050905090565b3360009081526035602052604090205460ff1661254e5760405162461bcd60e51b8152600401611538906153fe565b306001600160a01b038416036125905760005460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611e5a9085908590600401615468565b6000546040516323b872dd60e01b81526001600160a01b038581166004830152848116602483015260448201849052909116906323b872dd90606401611e5a565b601a546001600160a01b031633146125e857600080fd5b600081116125f557600080fd5b600f81905560408051818152601191810191909152706d6178547261646573506572426c6f636b60781b60608201526020810182905260008051602061567e83398151915290608001611307565b3360009081526035602052604090205460ff166126725760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b038316600081815260256020908152604080832086845282528083208584528252808320938352602682528083208684528252808320858452909152812060078301549091036126ca575050505050565b600281015460068301546126e591869160009060ff1661476b565b6001600160a01b0385166000908152602760209081526040808320878452909152902054600103612852576001600160a01b038516600090815260316020908152604080832087845282528083205460309092529091208054819061274c906001906154b7565b8154811061275c5761275c6153b7565b9060005260206000200160009054906101000a90046001600160a01b031681838154811061278c5761278c6153b7565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081603160008385815481106127d1576127d16153b7565b60009182526020808320909101546001600160a01b03908116845283820194909452604092830182208b8352815282822094909455918a1682526031835280822089835290925290812055805481908061282d5761282d6154ce565b600082815260209020810160001990810180546001600160a01b031916905501905550505b6001600160a01b03851660008181526025602090815260408083208884528252808320878452825280832080546001600160a01b03191681556001808201859055600280830186905560038084018790556004808501889055600580860189905560068601805460ff19908116909155600787018a9055600887018a90556009909601899055898952602688528689208e8a5288528689208d8a52885286892089815594850189905592840188905590830187905582018690550180549091169055928252602781528282208783529052908120805491612932836154e4565b90915550504360009081526033602052604081208054916129528361544f565b91905055508160405161296591906154fb565b604051908190038120907f27da8e9ce15b7acef76d7ad1c9eeaa7a11d169ef774cc7a05d2aa1778c286e6e90600090a25050505050565b3360009081526035602052604090205460ff166129cb5760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b03808316600090815260246020526040902090821615801590612a00575060018101546001600160a01b0316155b8015612a1e5750826001600160a01b0316826001600160a01b031614155b612a355760018101546001600160a01b0316612a37565b815b60019190910180546001600160a01b0319166001600160a01b039092169190911790555050565b3360009081526035602052604090205460ff16612a8d5760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b03841660008181526025602090815260408083208784528252808320868452825280832093835260268252808320878452825280832086845290915281206007830154909103612ae5575050611e9d565b60099091018290554360049091015550505050565b601a546001600160a01b03163314612b1157600080fd5b6001600160a01b038116612b2457600080fd5b600480546001600160a01b0319166001600160a01b038316908117909155604080518181526007918101919091526674726164696e6760c81b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604090205460ff16612bb15760405162461bcd60e51b8152600401611538906153fe565b612bbc838383614234565b15611bd0576001600160a01b03831660009081526028602090815260408083208584528252808320848452909152902054602a8054612bfd906001906154b7565b81548110612c0d57612c0d6153b7565b90600052602060002090600d0201602a8281548110612c2e57612c2e6153b7565b6000918252602082208354600d9092020180546001600160a01b0319166001600160a01b0390921691909117815560018084015490820155600280840154908201556003808401549082015560048084015490820155600580840154908201805460ff909216151560ff1990921691909117905560068084015490820155600780840154908201556008808401549082015560098084015490820155600a8084015490820155600b8084015490820155600c92830154920191909155602a80548392602892909184908110612d0557612d056153b7565b60009182526020808320600d909202909101546001600160a01b031683528201929092526040018120602a805491929185908110612d4557612d456153b7565b90600052602060002090600d02016001015481526020019081526020016000206000602a8481548110612d7a57612d7a6153b7565b600091825260208083206002600d90930201919091015483528281019390935260409182018120939093556001600160a01b0387168352602882528083208684528252808320858452909152812055602a805480612dda57612dda6154ce565b60008281526020808220600d6000199094019384020180546001600160a01b03191681556001810183905560028101839055600381018390556004810183905560058101805460ff1916905560068101839055600781018390556008810183905560098101839055600a8101839055600b8101839055600c01829055919092556001600160a01b03861682526029815260408083208684529091528120805491612e83836154e4565b919050555050505050565b3360009081526035602052604090205460ff16612ebd5760405162461bcd60e51b8152600401611538906153fe565b612edc612ecd6020830183614ae9565b82602001358360400135614234565b15612fba576000602a602882612ef56020860186614ae9565b6001600160a01b0316815260208082019290925260409081016000908120868401358252835281812086830135825290925290205481548110612f3a57612f3a6153b7565b90600052602060002090600d02019050816060013581600301819055508160a0016020810190612f6a9190615579565b60058201805460ff191691151591909117905560c0820135600682015560e0820135600782015561010082013560088201556101208201356009820155610140820135600a82015543600b909101555b50565b613033604051806101a0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61303e848484614234565b61304757600080fd5b6001600160a01b03841660009081526028602090815260408083208684528252808320858452909152902054602a80549091908110613088576130886153b7565b6000918252602091829020604080516101a081018252600d90930290910180546001600160a01b031683526001810154938301939093526002830154908201526003820154606082015260048201546080820152600582015460ff16151560a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c9091015461018082015290509392505050565b602d602052816000526040600020818154811061315c57600080fd5b90600052602060002001600091509150505481565b3360009081526035602052604090205460ff166131a05760405162461bcd60e51b8152600401611538906153fe565b6131b282600001518360200151611726565b604083810191825283516001600160a01b0390811660009081526025602090815283822081880180518452908252848320865184528252848320885181546001600160a01b031916951694851781558151600182015595516002870155606088015160038701556080880151600487015560a0880151600587015560c088015160068701805460ff191691151591909117905560e088015160078701556101008801516008870155610120880151600990960195909555918152602782528281209351815292905281208054916132888361544f565b90915550504360009081526033602052604081208054916132a88361544f565b909155505081516001600160a01b0316600090815260276020908152604080832082860151845290915290205460010361334857602082810180516000908152603080845260408083205487516001600160a01b039081168552603187528285208651865287528285209190915593518352908452812085518154600181018355918352939091200180546001600160a01b031916929091169190911790555b600060a0820181815283516001600160a01b031682526026602090815260408084208287018051865290835281852082880151865283529381902085518155918501516001808401919091559085015160028301819055606086015160038401556080860151600484015592516005909201805460ff191692151592909217909155915160c08501516133de939192919061476b565b816040516133ec9190615596565b604051908190038120907f58afb50c04302a400c4c6a6987d5992be730e9ea9e499ce4f610996a40f9fe1990600090a25050565b6023818154811061343057600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526035602052604090205460ff166134795760405162461bcd60e51b8152600401611538906153fe565b8251516001600160a01b039081166000908152602d6020908152604080832080546001808201835591855283852001879055868452602b8352928190208751805182546001600160a01b031916961695909517815591840151928201929092558282015160028201556060808401516003830155608080850151600484015560a080860151600585015560c086015160068501805460ff191691151591909117905560e08601516007850155610100860151600885015561012090950151600984015592870151600b830155860151600c82015590850151600d82015590840151600e82015543600a9091015580156135ab578251516001600160a01b03166000908152602e602090815260408083208651830151845290915281208054916135a18361544f565b9190505550505050565b8251516001600160a01b03166000908152602f602090815260408083208651830151845290915281208054916135e08361544f565b90915550508251516001600160a01b03166000908152602660209081526040808320865183015184528252808320865182015184529091529020600501805460ff19166001179055505050565b3360009081526035602052604090205460ff1661365c5760405162461bcd60e51b8152600401611538906153fe565b6000828152602b6020908152604080832081516102008101835281546001600160a01b031660c08201818152600184015460e08401526002840154610100840152600384015461012084015260048401546101408401526005840154610160840152600684015460ff16151561018084015260078401546101a084015260088401546101c084015260098401546101e08401528252600a83015482860152600b83015482850152600c8301546060830152600d8301546080830152600e9092015460a0820152908452602d909252822090915b8154811015613929578482828154811061374b5761374b6153b7565b9060005260206000200154036139175783156137a0578251516001600160a01b03166000908152602e60209081526040808320865183015184529091528120805491613796836154e4565b919050555061381b565b8251516001600160a01b03166000908152602f602090815260408083208651830151845290915281208054916137d5836154e4565b90915550508251516001600160a01b03166000908152602660209081526040808320865183015184528252808320865182015184529091529020600501805460ff191690555b8154829061382b906001906154b7565b8154811061383b5761383b6153b7565b9060005260206000200154828281548110613858576138586153b7565b906000526020600020018190555081805480613876576138766154ce565b600082815260208082208301600019908101839055909201909255868252602b90526040812080546001600160a01b0319168155600181018290556002810182905560038101829055600481018290556005810182905560068101805460ff19169055600781018290556008810182905560098101829055600a8101829055600b8101829055600c8101829055600d8101829055600e01555061392d915050565b806139218161544f565b91505061372f565b5050505b5050565b601a546001600160a01b0316331461394857600080fd5b6001600160a01b03811661395b57600080fd5b601a80546001600160a01b0319166001600160a01b038316908117909155604080518181526003918101919091526233b7bb60e91b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604081205460ff166139e45760405162461bcd60e51b8152600401611538906153fe565b600254604051630710f2ff60e51b8152600481018790526064916402540be400916001600160a01b039091169063e21e5fe090602401602060405180830381865afa158015613a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a5b9190615481565b613a659087615629565b613a6f9190615648565b613a799190615648565b905081613a8e57613a8b600282615648565b90505b8215613aca5780601f6000828254613aa69190615437565b9250508190555080601d6000828254613abf9190615437565b90915550613afb9050565b80601e6000828254613adc9190615437565b9250508190555080601c6000828254613af59190615437565b90915550505b613b06600282615629565b95945050505050565b601a546001600160a01b03163314613b2657600080fd5b600654601b54601c546040516340c10f1960e01b81526001600160a01b03938416936340c10f1993613b5d93911691600401615468565b600060405180830381600087803b158015613b7757600080fd5b505af1158015613b8b573d6000803e3d6000fd5b5050600654601a54601e546040516340c10f1960e01b81526001600160a01b0393841695506340c10f199450613bc79390921691600401615468565b600060405180830381600087803b158015613be157600080fd5b505af1158015613bf5573d6000803e3d6000fd5b50505050601e54601c54613c099190615437565b60216000828254613c1a9190615437565b9091555050600054601a54601f5460405163a9059cbb60e01b81526001600160a01b039384169363a9059cbb93613c5693911691600401615468565b6020604051808303816000875af1158015613c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c99919061549a565b50600054601b54601d5460405163a9059cbb60e01b81526001600160a01b039384169363a9059cbb93613cd193911691600401615468565b6020604051808303816000875af1158015613cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d14919061549a565b506000601c819055601e819055601d819055601f55565b3360009081526035602052604090205460ff16613d5a5760405162461bcd60e51b8152600401611538906153fe565b613d6c816000015182602001516119d7565b60408201908152436101608301908152602a805460018082018355600083905285517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d2600d90930292830180546001600160a01b0319166001600160a01b0390921691909117905560208601517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d383015593517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d482015560608501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d582015560808501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d682015560a08501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d78201805460ff191691151591909117905560c08501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d882015560e08501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d98201556101008501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545da8201556101208501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545db8201556101408501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545dc82015591517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545dd8301556101808401517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545de9092019190915554613fdb91906154b7565b81516001600160a01b039081166000908152602860209081526040808320828701805185529083528184208288015185528352818420959095558551909316825260298152828220935182529290925281208054916140398361544f565b919050555050565b60606023805480602002602001604051908101604052809291908181526020018280548015611c0757602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161407b575050505050905090565b601a546001600160a01b031633146140b957600080fd5b6001600160a01b0381166140cc57600080fd5b601b80546001600160a01b0319166001600160a01b03831690811790915560408051818152600391810191909152623232bb60e91b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604090205460ff166141555760405162461bcd60e51b8152600401611538906153fe565b80516001600160a01b03166000908152602560209081526040808320828501518452825280832081850151845290915281206007810154909103614197575050565b606082015160038201556080820151600482015560a0820151600582015560e082015160079091015550565b601a546001600160a01b031633146141da57600080fd5b600081116141e757600080fd5b600e819055604080518181526010918101919091526f36b0bc2a3930b232b9a832b92830b4b960811b60608201526020810182905260008051602061567e83398151915290608001611307565b602a54600090810361424857506000611835565b6001600160a01b03841660009081526028602090815260408083208684528252808320858452909152812054602a80549091908110614289576142896153b7565b60009182526020909120600d9091020180549091506001600160a01b0386811691161480156142bb5750838160010154145b8015613b065750600201549091149392505050565b601a546001600160a01b031633146142e757600080fd5b601481905560408051818152601291810191909152716e66745375636365737354696d656c6f636b60701b60608201526020810182905260008051602061567e83398151915290608001611307565b6030602052816000526040600020818154811061435257600080fd5b6000918252602090912001546001600160a01b03169150829050565b3360009081526035602052604090205460ff1661439d5760405162461bcd60e51b8152600401611538906153fe565b600354604051633104b73f60e21b8152600481018390526001600160a01b039091169063c412dcfc90602401600060405180830381600087803b1580156143e357600080fd5b505af1158015613929573d6000803e3d6000fd5b3360009081526035602052604090205460ff166144265760405162461bcd60e51b8152600401611538906153fe565b6000546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906144589085908590600401615468565b600060405180830381600087803b15801561447257600080fd5b505af1158015614486573d6000803e3d6000fd5b505050505050565b601a546001600160a01b031633146144a557600080fd5b600081116144b257600080fd5b601081905560408051818152601691810191909152756d617850656e64696e674d61726b65744f726465727360501b60608201526020810182905260008051602061567e83398151915290608001611307565b6145406040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b506001600160a01b03929092166000908152602660209081526040808320938352928152828220938252928352819020815160c0810183528154815260018201549381019390935260028101549183019190915260038101546060830152600481015460808301526005015460ff16151560a082015290565b601a546001600160a01b031633146145d057600080fd5b8035158015906145e4575080356020820135115b80156145f7575060208101356040820135115b801561460a575060408101356060820135115b801561461d575060608101356080820135115b61462657600080fd5b6146336015826005614938565b507fdaae5e047a75b6f38ad4e279cdefe910fc35d5a99a91b8303bd948c0a999372a81604051611307919061566a565b601a546001600160a01b0316331461467a57600080fd5b6001600160a01b03811661468d57600080fd5b6001600160a01b038116600081815260356020908152604091829020805460ff1916600117905590519182527fb692fa98cbec9bd705572b4c7e0927e3f7698e9fe526dcef6f40f3d4d4980ca39101611307565b601a546001600160a01b031633146146f857600080fd5b6001600160a01b03811661470b57600080fd5b600580546001600160a01b0319166001600160a01b038316908117909155604080518181526009918101919091526863616c6c6261636b7360b81b6060820152602081019190915260008051602061569e83398151915290608001611307565b60008161477957600161477c565b60005b600086815260326020526040902060ff919091169150836147bb57848183600381106147aa576147aa6153b7565b01546147b691906154b7565b6147da565b848183600381106147ce576147ce6153b7565b01546147da9190615437565b8183600381106147ec576147ec6153b7565b01558054600182015460405188907f6da9a00899a8a4900c75b0c762b64375242e6c0fa1e5bd9e5c5b663bdbdfe13c90600090a4505050505050565b8260058101928215614870579160200282015b8281111561487057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061483b565b5061487c929150614966565b5090565b60405180610140016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081525090565b6040518060a001604052806005906020820280368337509192915050565b6040518060c0016040528061490f614880565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b8260058101928215614870579160200282015b8281111561487057823582559160200191906001019061494b565b5b8082111561487c5760008155600101614967565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156149b4576149b461497b565b60405290565b604051610140810167ffffffffffffffff811182821017156149b4576149b461497b565b6040516101a0810167ffffffffffffffff811182821017156149b4576149b461497b565b6001600160a01b0381168114612fba57600080fd5b600060a08284031215614a2957600080fd5b82601f830112614a3857600080fd5b60405160a0810181811067ffffffffffffffff82111715614a5b57614a5b61497b565b6040528060a0840185811115614a7057600080fd5b845b81811015614a93578035614a8581614a02565b835260209283019201614a72565b509195945050505050565b600060208284031215614ab057600080fd5b5035919050565b60008060408385031215614aca57600080fd5b50508035926020909101359150565b8035614ae481614a02565b919050565b600060208284031215614afb57600080fd5b813561183581614a02565b60008060408385031215614b1957600080fd5b8235614b2481614a02565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60058110614b6657634e487b7160e01b600052602160045260246000fd5b9052565b600060c08201905060018060a01b038084511683526020840151602084015280604085015116604084015250606083015160608301526080830151608083015260a083015161178360a0840182614b48565b600080600060608486031215614bd157600080fd5b8335614bdc81614a02565b95602085013595506040909401359392505050565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c0810151614c4360c084018215159052565b5060e08181015190830152610100808201519083015261012090810151910152565b6101408101614c748284614bf1565b92915050565b8015158114612fba57600080fd5b8035614ae481614c7a565b600080600060608486031215614ca857600080fd5b8335614cb381614a02565b9250602084013591506040840135614cca81614c7a565b809150509250925092565b60a08101818360005b6005811015614cfd578151835260209283019290910190600101614cde565b50505092915050565b6020808252825182820181905260009190848201906040850190845b81811015614d3e57835183529284019291840191600101614d22565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015614d3e5783516001600160a01b031683529284019291840191600101614d66565b60006101e082019050614d9f828451614bf1565b60208301516101408301526040830151610160830152606083015161018083015260808301516101a083015260a0909201516101c09091015290565b60008060008060808587031215614df157600080fd5b8435614dfc81614a02565b966020860135965060408601359560600135945092505050565b60008082840360e0811215614e2a57600080fd5b60c0811215614e3857600080fd5b50614e41614991565b8335614e4c81614a02565b8152602084810135908201526040840135614e6681614a02565b80604083015250606084013560608201526080840135608082015260a084013560058110614e9357600080fd5b60a08201529460c0939093013593505050565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a0810151614eee60a084018215159052565b5060c0818101519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018090810151910152565b6020808252825182820181905260009190848201906040850190845b81811015614d3e57614f6a838551614ea6565b928401926101a09290920191600101614f57565b600080600060608486031215614f9357600080fd5b8335614f9e81614a02565b92506020840135614fae81614a02565b929592945050506040919091013590565b6001600160a01b0387811682526020820187905285166040820152606081018490526080810183905260c08101614ff960a0830184614b48565b979650505050505050565b6000806040838503121561501757600080fd5b823561502281614a02565b9150602083013561503281614a02565b809150509250929050565b6101e0810161504c8289614bf1565b6101408201969096526101608101949094526101808401929092526101a08301526101c090910152919050565b60006101a0828403121561508c57600080fd5b50919050565b6101a08101614c748284614ea6565b600061014082840312156150b457600080fd5b6150bc6149ba565b90506150c782614ad9565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015261510760c08301614c88565b60c082015260e082013560e082015261010080830135818301525061012080830135818301525092915050565b60008082840361020081121561514957600080fd5b61515385856150a1565b925060c061013f198201121561516857600080fd5b50615171614991565b6101408401358152610160840135602082015261018084013560408201526101a084013560608201526101c084013560808201526101e08401356151b481614c7a565b60a0820152919491935090915050565b60008060008385036102208112156151db57600080fd5b6101e0808212156151eb57600080fd5b6151f3614991565b91506151ff87876150a1565b82526101408601356020830152610160860135604083015261018086013560608301526101a086013560808301526101c086013560a0830152909350840135915061524d6102008501614c88565b90509250925092565b6000806040838503121561526957600080fd5b82359150602083013561503281614c7a565b6000806000806080858703121561529157600080fd5b843593506020850135925060408501356152aa81614c7a565b915060608501356152ba81614c7a565b939692955090935050565b60006101a082840312156152d857600080fd5b6152e06149de565b6152e983614ad9565b81526020830135602082015260408301356040820152606083013560608201526080830135608082015261531f60a08401614c88565b60a082015260c0838101359082015260e080840135908201526101008084013590820152610120808401359082015261014080840135908201526101608084013590820152610180928301359281019290925250919050565b6000610140828403121561538b57600080fd5b61183583836150a1565b600060a082840312156153a757600080fd5b8260a08301111561508c57600080fd5b634e487b7160e01b600052603260045260246000fd5b60a08101818360005b6005811015614cfd5781516001600160a01b03168352602092830192909101906001016153d6565b60208082526009908201526868657265206865726560b81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561544a5761544a615421565b500190565b60006001820161546157615461615421565b5060010190565b6001600160a01b03929092168252602082015260400190565b60006020828403121561549357600080fd5b5051919050565b6000602082840312156154ac57600080fd5b815161183581614c7a565b6000828210156154c9576154c9615421565b500390565b634e487b7160e01b600052603160045260246000fd5b6000816154f3576154f3615421565b506000190190565b81546001600160a01b0316815260018201546020820152600282015460408201526003820154606082015260048201546080820152600582015460a0820152600682015460ff16151560c0820152600782015460e08201526008820154610100820152600982015461012082015261014081015b5061014001919050565b60006020828403121561558b57600080fd5b813561183581614c7a565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015261556f61561b61560d6156006155f16155e4608087016080890151815260200190565b60a0880151815260200190565b60c08701511515815260200190565b60e0860151815260200190565b610100850151815260200190565b610120840151815260200190565b600081600019048311821515161561564357615643615421565b500290565b60008261566557634e487b7160e01b600052601260045260246000fd5b500490565b60a081810190838337600081529291505056fe8cf3e35f6221b16e1670a3413180c9484bf5aa71787905909fa82a6a2662e9ab943e9d45a11aaae5d87503e3bc248665d9807856e5cf2bdb4a988bee44422781a264697066735822122053ee0cae4654303526277449b126d9cb8e58a45ac7a8409858398519d62fa44764736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106105df5760003560e01c806390d112b911610307578063d294f0931161019e578063ecf56a1f116100ef578063f823e2ae1161009d578063f823e2ae14611226578063f8d24b4814611239578063fbfa77cf14611242578063fc0c546a14611255578063fdb5941314611268578063fe0fc8d614611271578063fece4eac1461128457600080fd5b8063ecf56a1f14611133578063eda00d5414611146578063ee51f63614611177578063ee92a4ff146111d8578063f013d278146111e1578063f65d9dbe146111f4578063f7b3c6fd146111fd57600080fd5b8063dcdf339a1161014c578063dcdf339a146110b8578063e212991a146110cb578063e3cbe3a7146110de578063e3f04eba146110f1578063e765540314611104578063e7873b5814611117578063ec44acf21461112057600080fd5b8063d294f09314611035578063d3b5fe701461103d578063d3c7c2c714611050578063d477f05f14611058578063d4bda9081461106b578063d53913931461107e578063dc2123ff146110a557600080fd5b8063ad5c464811610258578063c122fea611610206578063c122fea614610fba578063c311ab3114610fc3578063c625562614610fd6578063c76faf7814610fe9578063cab9458014610ffc578063cfad57a21461100f578063cfbacc141461102257600080fd5b8063ad5c464814610e51578063b4b0f56714610e64578063b66e6b0514610e77578063b767608a14610f49578063b7682d5414610f5c578063b8878a2c14610f87578063bcc9f1d314610fa757600080fd5b80639d1a1073116102b55780639d1a107314610d07578063a2ab2dee14610d1a578063a354418114610d2b578063a3a80ffe14610d3e578063a553906c14610e12578063aa3b7d7714610e25578063aaf5eb6814610e4557600080fd5b806390d112b914610bc357806391cca3db14610bd657806392a88fa214610be9578063959509e414610c4457806397e7995a14610c4d57806399794d3514610c785780639c8912f114610cdc57600080fd5b806356a6796f1161047b578063796d82d9116103cc578063817fa1a41161037a578063817fa1a414610ad3578063878679e614610ae65780638a0bd70214610af95780638a238ae514610b0e5780638bbb644c14610b215780638bf7f5f914610b2a5780638c8ff1d514610b3d57600080fd5b8063796d82d914610a385780637ad3def214610a415780637adbf97314610a545780637dc0d1d014610a845780637f0584ed14610a975780637fdb96f314610ab75780638049fde714610aca57600080fd5b80636817031b116104295780636817031b1461098757806368ca199d1461099a5780636d69fcaf146109c35780636d81d981146109d65780636de9f32b14610a095780637395d79e14610a1257806377a9fdcf14610a2557600080fd5b806356a6796f146108fa5780635a9125511461090f5780635ad9f993146109185780635b621e32146109215780635c76ac9e146109345780635fbfe8cc146109545780636690a8061461097457600080fd5b8063292c16171161053557806343b8fab5116104e357806343b8fab5146108505780634415b369146108635780634437152a1461088e57806344d44f5a146108a15780635070e837146108b457806352e5398f146108c75780635378143e146108e757600080fd5b8063292c1617146107405780632a0a1cb0146107535780632d1f941a146107735780633078fff51461077c578063321495921461078f5780633b0f0f2f1461080e5780633dae10a01461083d57600080fd5b806316f0115b1161059257806316f0115b146106885780631c8636b41461069b578063201d8bdb146106d457806321f7a30b146106e7578063255566e4146106fa578063265aa6211461071a57806328b1f8871461072d57600080fd5b8062b12783146105e457806306aef7de14610614578063099fa934146106295780630eee3e4a1461063c57806312d43a511461064f57806313b36ff614610662578063145ed21c14610675575b600080fd5b6005546105f7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610627610622366004614a17565b61129f565b005b610627610637366004614a9e565b611312565b61062761064a366004614ab7565b61137a565b601a546105f7906001600160a01b031681565b610627610670366004614a9e565b61140e565b610627610683366004614ae9565b611479565b6003546105f7906001600160a01b031681565b6106c66106a9366004614b06565b602760209081526000928352604080842090915290825290205481565b60405190815260200161060b565b6106276106e2366004614a9e565b611509565b6106276106f5366004614b06565b61158d565b61070d610708366004614a9e565b6115f0565b60405161060b9190614b6a565b6105f7610728366004614a9e565b6116bb565b61062761073b366004614b06565b6116db565b6106c661074e366004614b06565b611726565b610766610761366004614bbc565b61178a565b60405161060b9190614c65565b6106c6601d5481565b6002546105f7906001600160a01b031681565b6107a261079d366004614a9e565b61183c565b604080516001600160a01b03909e168e5260208e019c909c529a8c019990995260608b019790975260808a019590955292151560a089015260c088019190915260e08701526101008601526101208501526101408401526101608301526101808201526101a00161060b565b6105f761081c366004614ae9565b6001600160a01b039081166000908152602460205260409020600101541690565b6106c661084b366004614a9e565b6118c3565b61062761085e366004614a9e565b6118da565b6106c6610871366004614b06565b603160209081526000928352604080842090915290825290205481565b61062761089c366004614ae9565b611952565b6106c66108af366004614b06565b6119d7565b6106276108c2366004614ae9565b611a0e565b6106c66108d5366004614a9e565b60336020526000908152604090205481565b6106276108f5366004614c93565b611a9e565b610902611bd5565b60405161060b9190614cd5565b6106c660125481565b6106c660225481565b61062761092f366004614ae9565b611c11565b610947610942366004614ae9565b611c8c565b60405161060b9190614d06565b610967610962366004614a9e565b611cf8565b60405161060b9190614d4a565b610627610982366004614bbc565b611d63565b610627610995366004614ae9565b611ea3565b6106c66109a8366004614ae9565b6001600160a01b031660009081526024602052604090205490565b6106276109d1366004614ae9565b611f29565b6109f96109e4366004614ae9565b60356020526000908152604090205460ff1681565b604051901515815260200161060b565b6106c660215481565b610627610a20366004614ab7565b611fd1565b6106c6610a33366004614ab7565b612023565b6106c6600f5481565b610627610a4f366004614ae9565b612048565b610627610a62366004614ae9565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546105f7906001600160a01b031681565b610aaa610aa5366004614a9e565b6121f0565b60405161060b9190614d8b565b610627610ac5366004614ddb565b6122c9565b6106c660105481565b610627610ae1366004614e16565b612365565b600d546105f7906001600160a01b031681565b610b01612430565b60405161060b9190614f3b565b610627610b1c366004614f7e565b61251f565b6106c660135481565b610627610b38366004614a9e565b6125d1565b610b94610b4b366004614bbc565b6026602090815260009384526040808520825292845282842090528252902080546001820154600283015460038401546004850154600590950154939492939192909160ff1686565b6040805196875260208701959095529385019290925260608401526080830152151560a082015260c00161060b565b610627610bd1366004614bbc565b612643565b601b546105f7906001600160a01b031681565b610c21610bf7366004614ae9565b60246020526000908152604090208054600182015460029092015490916001600160a01b03169083565b604080519384526001600160a01b0390921660208401529082015260600161060b565b6106c6601f5481565b6106c6610c5b366004614b06565b602960209081526000928352604080842090915290825290205481565b610cca610c86366004614a9e565b602c602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695939490921692909160ff1686565b60405161060b96959493929190614fbf565b6106c6610cea366004614b06565b602e60209081526000928352604080842090915290825290205481565b610627610d15366004615004565b61299c565b601a546001600160a01b03166105f7565b610627610d39366004614ddb565b612a5e565b610dbc610d4c366004614bbc565b602560209081526000938452604080852082529284528284209052825290208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b03909816989697959694959394929360ff9092169290918a565b604080516001600160a01b03909b168b5260208b0199909952978901969096526060880194909452608087019290925260a0860152151560c085015260e08401526101008301526101208201526101400161060b565b610627610e20366004614ae9565b612afa565b6106c6610e33366004614a9e565b60346020526000908152604090205481565b6106c66402540be40081565b6000546105f7906001600160a01b031681565b610627610e72366004614bbc565b612b82565b610f37610e85366004614a9e565b602b6020908152600091825260409182902082516101408101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460ff16151560c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154600b830154600c840154600d850154600e90950154939492939192909186565b60405161060b9695949392919061503d565b610627610f57366004615079565b612e8e565b6106c6610f6a366004614b06565b602f60209081526000928352604080842090915290825290205481565b610f9a610f95366004614bbc565b612fbd565b60405161060b9190615092565b6106c6610fb5366004614b06565b613140565b6106c660115481565b610627610fd1366004615134565b613171565b6105f7610fe4366004614a9e565b613420565b610627610ff73660046151c4565b61344a565b61062761100a366004615256565b61362d565b61062761101d366004614ae9565b613931565b6106c661103036600461527b565b6139b5565b610627613b0f565b61062761104b3660046152c5565b613d2b565b610967614041565b610627611066366004614ae9565b6140a2565b610627611079366004615378565b614126565b6106c67f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6106276110b3366004614a9e565b6141c3565b6109f96110c6366004614bbc565b614234565b6106276110d9366004614a9e565b6142d0565b6105f76110ec366004614ab7565b614336565b6106276110ff366004614a9e565b61436e565b610627611112366004614b06565b6143f7565b6106c660205481565b6004546105f7906001600160a01b031681565b610627611141366004614a9e565b61448e565b6106c6611154366004614bbc565b602860209081526000938452604080852082529284528284209052825290205481565b61118a611185366004614bbc565b614505565b60405161060b9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b6106c6601c5481565b6106276111ef366004615395565b6145b9565b6106c6600e5481565b6106c661120b366004614ae9565b6001600160a01b03166000908152602d602052604090205490565b610627611234366004614ae9565b614663565b6106c660145481565b600c546105f7906001600160a01b031681565b6006546105f7906001600160a01b031681565b6106c6601e5481565b61062761127f366004614ae9565b6146e1565b6105f773b0897686c545045afc77cf20ec7a532e3120e0f181565b601a546001600160a01b031633146112b657600080fd5b80516001600160a01b03166112ca57600080fd5b6112d76007826005614828565b507f89a3bfeda71ede5f8735aa09127c97cd56aa3803356c52f7c30caf418238b4648160405161130791906153cd565b60405180910390a150565b601a546001600160a01b0316331461132957600080fd5b603281101561133757600080fd5b6012819055604080518181526006918101919091526506d6178536c560d41b60608201526020810182905260008051602061567e83398151915290608001611307565b601a546001600160a01b0316331461139157600080fd5b6000828152603260205260409020819060020155604080516060808252601390820152720dac2f09ee0cadc92dce8cae4cae6e8ae8aa89606b1b6080820152602081018490529081018290527f957cd67ea49f3e1ee953cdd23a1ba1f11d973e842411220d5c24ef0e24e1c9569060a00160405180910390a15050565b601a546001600160a01b0316331461142557600080fd5b61012c81101561143457600080fd5b6011819055604080518181526008918101919091526706d61784761696e560c41b60608201526020810182905260008051602061567e83398151915290608001611307565b601a546001600160a01b0316331461149057600080fd5b6001600160a01b0381166114a357600080fd5b600d80546001600160a01b0319166001600160a01b03831690811790915560408051818152600f918101919091526e3a37b5b2b72ba2aa242937baba32b960891b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604090205460ff166115415760405162461bcd60e51b8152600401611538906153fe565b60405180910390fd5b6000908152602c6020526040812080546001600160a01b03199081168255600182018390556002820180549091169055600381018290556004810191909155600501805460ff19169055565b3360009081526035602052604090205460ff166115bc5760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b038216600090815260246020526040812060020180548392906115e7908490615437565b90915550505050565b6116266040805160c08101825260008082526020820181905291810182905260608101829052608081018290529060a082015290565b6000828152602c6020908152604091829020825160c08101845281546001600160a01b039081168252600183015493820193909352600282015490921692820192909252600382015460608201526004808301546080830152600583015491929160a084019160ff909116908111156116a1576116a1614b32565b60048111156116b2576116b2614b32565b90525092915050565b600781600581106116cb57600080fd5b01546001600160a01b0316905081565b3360009081526035602052604090205460ff1661170a5760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b03909116600090815260246020526040902055565b6000805b600e54811015611783576001600160a01b03841660009081526025602090815260408083208684528252808320848452909152812060070154900361177157809150611783565b8061177b8161544f565b91505061172a565b5092915050565b611792614880565b506001600160a01b0380841660009081526025602090815260408083208684528252808320858452825291829020825161014081018452815490941684526001810154918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460ff16151560c0830152600781015460e08301526008810154610100830152600901546101208201525b9392505050565b602a818154811061184c57600080fd5b60009182526020909120600d9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b8c0154600c909c01546001600160a01b03909b169c50989a97999698959760ff90951696939592949193909291908d565b601581600581106118d357600080fd5b0154905081565b601a546001600160a01b031633146118f157600080fd5b600081116118fe57600080fd5b60138190556040805181815260179181019190915276191959985d5b1d13195d995c9859d9555b9b1bd8dad959604a1b60608201526020810182905260008051602061567e83398151915290608001611307565b601a546001600160a01b0316331461196957600080fd5b6001600160a01b03811661197c57600080fd5b600380546001600160a01b0319166001600160a01b03831690811790915560408051818152600491810191909152631c1bdbdb60e21b6060820152602081019190915260008051602061569e83398151915290608001611307565b6000805b600e54811015611783576119f0848483614234565b6119fc57809150611783565b80611a068161544f565b9150506119db565b601a546001600160a01b03163314611a2557600080fd5b6001600160a01b038116611a3857600080fd5b600280546001600160a01b0319166001600160a01b03831690811790915560408051818152600f918101919091526e383934b1b2a0b3b3b932b3b0ba37b960891b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604090205460ff16611acd5760405162461bcd60e51b8152600401611538906153fe565b8015611b54576006546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990611b059086908690600401615468565b600060405180830381600087803b158015611b1f57600080fd5b505af1158015611b33573d6000803e3d6000fd5b505050508160216000828254611b499190615437565b90915550611bd09050565b600654604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac90611b869086908690600401615468565b600060405180830381600087803b158015611ba057600080fd5b505af1158015611bb4573d6000803e3d6000fd5b505050508160206000828254611bca9190615437565b90915550505b505050565b611bdd6148de565b6040805160a08101918290529060159060059082845b815481526020019060010190808311611bf3575b5050505050905090565b601a546001600160a01b03163314611c2857600080fd5b6001600160a01b038116611c3b57600080fd5b6001600160a01b038116600081815260356020908152604091829020805460ff1916905590519182527ff9cf924d7d98e6e0a27ec523cd7214b0bbdfaba197018b33b41a702f5238190e9101611307565b6001600160a01b0381166000908152602d6020908152604091829020805483518184028101840190945280845260609392830182828015611cec57602002820191906000526020600020905b815481526020019060010190808311611cd8575b50505050509050919050565b600081815260306020908152604091829020805483518184028101840190945280845260609392830182828015611cec57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611d3a5750505050509050919050565b3360009081526035602052604090205460ff16611d925760405162461bcd60e51b8152600401611538906153fe565b60025460405163b9e0336f60e01b8152600481018490526024810183905273b0897686c545045afc77cf20ec7a532e3120e0f1916323b872dd9186916001600160a01b031690819063b9e0336f90604401602060405180830381865afa158015611e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e249190615481565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b6020604051808303816000875af1158015611e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9d919061549a565b50505050565b601a546001600160a01b03163314611eba57600080fd5b6001600160a01b038116611ecd57600080fd5b600c80546001600160a01b0319166001600160a01b03831690811790915560408051818152600591810191909152641d985d5b1d60da1b6060820152602081019190915260008051602061569e83398151915290608001611307565b601a546001600160a01b03163314611f4057600080fd5b6001600160a01b038116611f5357600080fd5b602380546001810182556000919091527fd57b2b5166478fd4318d2acc6cc2c704584312bdd8781b32d5d06abda57f42300180546001600160a01b0319166001600160a01b0383169081179091556040519081527fd1be2e90bd3d24839d9dd94ad871068e1f9688b02fa43f2a62c9975dfa9de2d790602001611307565b3360009081526035602052604090205460ff166120005760405162461bcd60e51b8152600401611538906153fe565b6000828152603460205260408120439055602280548392906115e7908490615437565b6032602052816000526040600020816003811061203f57600080fd5b01549150829050565b601a546001600160a01b0316331461205f57600080fd5b60048054604080516358c3de9360e11b815290516001600160a01b039092169263b187bd269282820192602092908290030181865afa1580156120a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ca919061549a565b80156121485750600560009054906101000a90046001600160a01b03166001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015612124573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612148919061549a565b6121815760405162461bcd60e51b815260206004820152600a6024820152691393d517d4105554d15160b21b6044820152606401611538565b6001600160a01b03811661219457600080fd5b600680546001600160a01b0319166001600160a01b03831690811790915560408051818152600591810191909152643a37b5b2b760d91b6060820152602081019190915260008051602061569e83398151915290608001611307565b6121f86148fc565b506000908152602b602090815260409182902082516102008101845281546001600160a01b031660c08201908152600183015460e08301526002830154610100830152600383015461012083015260048301546101408301526005830154610160830152600683015460ff16151561018083015260078301546101a083015260088301546101c083015260098301546101e08301528152600a82015492810192909252600b81015492820192909252600c8201546060820152600d8201546080820152600e9091015460a082015290565b3360009081526035602052604090205460ff166122f85760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b03841660008181526025602090815260408083208784528252808320868452825280832093835260268252808320878452825280832086845290915281206007830154909103612350575050611e9d565b60089091018290554360039091015550505050565b3360009081526035602052604090205460ff166123945760405162461bcd60e51b8152600401611538906153fe565b6000818152602c6020908152604091829020845181546001600160a01b03199081166001600160a01b03928316178355928601516001808401919091559386015160028301805490941691161790915560608401516003820155608084015160048083019190915560a085015160058301805487959293919260ff1990911691849081111561242557612425614b32565b021790555050505050565b6060602a805480602002602001604051908101604052809291908181526020016000905b82821015612516576000848152602090819020604080516101a081018252600d860290920180546001600160a01b03168352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460ff16151560a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610120840152600a810154610140840152600b810154610160840152600c01546101808301529083529092019101612454565b50505050905090565b3360009081526035602052604090205460ff1661254e5760405162461bcd60e51b8152600401611538906153fe565b306001600160a01b038416036125905760005460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611e5a9085908590600401615468565b6000546040516323b872dd60e01b81526001600160a01b038581166004830152848116602483015260448201849052909116906323b872dd90606401611e5a565b601a546001600160a01b031633146125e857600080fd5b600081116125f557600080fd5b600f81905560408051818152601191810191909152706d6178547261646573506572426c6f636b60781b60608201526020810182905260008051602061567e83398151915290608001611307565b3360009081526035602052604090205460ff166126725760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b038316600081815260256020908152604080832086845282528083208584528252808320938352602682528083208684528252808320858452909152812060078301549091036126ca575050505050565b600281015460068301546126e591869160009060ff1661476b565b6001600160a01b0385166000908152602760209081526040808320878452909152902054600103612852576001600160a01b038516600090815260316020908152604080832087845282528083205460309092529091208054819061274c906001906154b7565b8154811061275c5761275c6153b7565b9060005260206000200160009054906101000a90046001600160a01b031681838154811061278c5761278c6153b7565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081603160008385815481106127d1576127d16153b7565b60009182526020808320909101546001600160a01b03908116845283820194909452604092830182208b8352815282822094909455918a1682526031835280822089835290925290812055805481908061282d5761282d6154ce565b600082815260209020810160001990810180546001600160a01b031916905501905550505b6001600160a01b03851660008181526025602090815260408083208884528252808320878452825280832080546001600160a01b03191681556001808201859055600280830186905560038084018790556004808501889055600580860189905560068601805460ff19908116909155600787018a9055600887018a90556009909601899055898952602688528689208e8a5288528689208d8a52885286892089815594850189905592840188905590830187905582018690550180549091169055928252602781528282208783529052908120805491612932836154e4565b90915550504360009081526033602052604081208054916129528361544f565b91905055508160405161296591906154fb565b604051908190038120907f27da8e9ce15b7acef76d7ad1c9eeaa7a11d169ef774cc7a05d2aa1778c286e6e90600090a25050505050565b3360009081526035602052604090205460ff166129cb5760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b03808316600090815260246020526040902090821615801590612a00575060018101546001600160a01b0316155b8015612a1e5750826001600160a01b0316826001600160a01b031614155b612a355760018101546001600160a01b0316612a37565b815b60019190910180546001600160a01b0319166001600160a01b039092169190911790555050565b3360009081526035602052604090205460ff16612a8d5760405162461bcd60e51b8152600401611538906153fe565b6001600160a01b03841660008181526025602090815260408083208784528252808320868452825280832093835260268252808320878452825280832086845290915281206007830154909103612ae5575050611e9d565b60099091018290554360049091015550505050565b601a546001600160a01b03163314612b1157600080fd5b6001600160a01b038116612b2457600080fd5b600480546001600160a01b0319166001600160a01b038316908117909155604080518181526007918101919091526674726164696e6760c81b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604090205460ff16612bb15760405162461bcd60e51b8152600401611538906153fe565b612bbc838383614234565b15611bd0576001600160a01b03831660009081526028602090815260408083208584528252808320848452909152902054602a8054612bfd906001906154b7565b81548110612c0d57612c0d6153b7565b90600052602060002090600d0201602a8281548110612c2e57612c2e6153b7565b6000918252602082208354600d9092020180546001600160a01b0319166001600160a01b0390921691909117815560018084015490820155600280840154908201556003808401549082015560048084015490820155600580840154908201805460ff909216151560ff1990921691909117905560068084015490820155600780840154908201556008808401549082015560098084015490820155600a8084015490820155600b8084015490820155600c92830154920191909155602a80548392602892909184908110612d0557612d056153b7565b60009182526020808320600d909202909101546001600160a01b031683528201929092526040018120602a805491929185908110612d4557612d456153b7565b90600052602060002090600d02016001015481526020019081526020016000206000602a8481548110612d7a57612d7a6153b7565b600091825260208083206002600d90930201919091015483528281019390935260409182018120939093556001600160a01b0387168352602882528083208684528252808320858452909152812055602a805480612dda57612dda6154ce565b60008281526020808220600d6000199094019384020180546001600160a01b03191681556001810183905560028101839055600381018390556004810183905560058101805460ff1916905560068101839055600781018390556008810183905560098101839055600a8101839055600b8101839055600c01829055919092556001600160a01b03861682526029815260408083208684529091528120805491612e83836154e4565b919050555050505050565b3360009081526035602052604090205460ff16612ebd5760405162461bcd60e51b8152600401611538906153fe565b612edc612ecd6020830183614ae9565b82602001358360400135614234565b15612fba576000602a602882612ef56020860186614ae9565b6001600160a01b0316815260208082019290925260409081016000908120868401358252835281812086830135825290925290205481548110612f3a57612f3a6153b7565b90600052602060002090600d02019050816060013581600301819055508160a0016020810190612f6a9190615579565b60058201805460ff191691151591909117905560c0820135600682015560e0820135600782015561010082013560088201556101208201356009820155610140820135600a82015543600b909101555b50565b613033604051806101a0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61303e848484614234565b61304757600080fd5b6001600160a01b03841660009081526028602090815260408083208684528252808320858452909152902054602a80549091908110613088576130886153b7565b6000918252602091829020604080516101a081018252600d90930290910180546001600160a01b031683526001810154938301939093526002830154908201526003820154606082015260048201546080820152600582015460ff16151560a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c9091015461018082015290509392505050565b602d602052816000526040600020818154811061315c57600080fd5b90600052602060002001600091509150505481565b3360009081526035602052604090205460ff166131a05760405162461bcd60e51b8152600401611538906153fe565b6131b282600001518360200151611726565b604083810191825283516001600160a01b0390811660009081526025602090815283822081880180518452908252848320865184528252848320885181546001600160a01b031916951694851781558151600182015595516002870155606088015160038701556080880151600487015560a0880151600587015560c088015160068701805460ff191691151591909117905560e088015160078701556101008801516008870155610120880151600990960195909555918152602782528281209351815292905281208054916132888361544f565b90915550504360009081526033602052604081208054916132a88361544f565b909155505081516001600160a01b0316600090815260276020908152604080832082860151845290915290205460010361334857602082810180516000908152603080845260408083205487516001600160a01b039081168552603187528285208651865287528285209190915593518352908452812085518154600181018355918352939091200180546001600160a01b031916929091169190911790555b600060a0820181815283516001600160a01b031682526026602090815260408084208287018051865290835281852082880151865283529381902085518155918501516001808401919091559085015160028301819055606086015160038401556080860151600484015592516005909201805460ff191692151592909217909155915160c08501516133de939192919061476b565b816040516133ec9190615596565b604051908190038120907f58afb50c04302a400c4c6a6987d5992be730e9ea9e499ce4f610996a40f9fe1990600090a25050565b6023818154811061343057600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526035602052604090205460ff166134795760405162461bcd60e51b8152600401611538906153fe565b8251516001600160a01b039081166000908152602d6020908152604080832080546001808201835591855283852001879055868452602b8352928190208751805182546001600160a01b031916961695909517815591840151928201929092558282015160028201556060808401516003830155608080850151600484015560a080860151600585015560c086015160068501805460ff191691151591909117905560e08601516007850155610100860151600885015561012090950151600984015592870151600b830155860151600c82015590850151600d82015590840151600e82015543600a9091015580156135ab578251516001600160a01b03166000908152602e602090815260408083208651830151845290915281208054916135a18361544f565b9190505550505050565b8251516001600160a01b03166000908152602f602090815260408083208651830151845290915281208054916135e08361544f565b90915550508251516001600160a01b03166000908152602660209081526040808320865183015184528252808320865182015184529091529020600501805460ff19166001179055505050565b3360009081526035602052604090205460ff1661365c5760405162461bcd60e51b8152600401611538906153fe565b6000828152602b6020908152604080832081516102008101835281546001600160a01b031660c08201818152600184015460e08401526002840154610100840152600384015461012084015260048401546101408401526005840154610160840152600684015460ff16151561018084015260078401546101a084015260088401546101c084015260098401546101e08401528252600a83015482860152600b83015482850152600c8301546060830152600d8301546080830152600e9092015460a0820152908452602d909252822090915b8154811015613929578482828154811061374b5761374b6153b7565b9060005260206000200154036139175783156137a0578251516001600160a01b03166000908152602e60209081526040808320865183015184529091528120805491613796836154e4565b919050555061381b565b8251516001600160a01b03166000908152602f602090815260408083208651830151845290915281208054916137d5836154e4565b90915550508251516001600160a01b03166000908152602660209081526040808320865183015184528252808320865182015184529091529020600501805460ff191690555b8154829061382b906001906154b7565b8154811061383b5761383b6153b7565b9060005260206000200154828281548110613858576138586153b7565b906000526020600020018190555081805480613876576138766154ce565b600082815260208082208301600019908101839055909201909255868252602b90526040812080546001600160a01b0319168155600181018290556002810182905560038101829055600481018290556005810182905560068101805460ff19169055600781018290556008810182905560098101829055600a8101829055600b8101829055600c8101829055600d8101829055600e01555061392d915050565b806139218161544f565b91505061372f565b5050505b5050565b601a546001600160a01b0316331461394857600080fd5b6001600160a01b03811661395b57600080fd5b601a80546001600160a01b0319166001600160a01b038316908117909155604080518181526003918101919091526233b7bb60e91b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604081205460ff166139e45760405162461bcd60e51b8152600401611538906153fe565b600254604051630710f2ff60e51b8152600481018790526064916402540be400916001600160a01b039091169063e21e5fe090602401602060405180830381865afa158015613a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a5b9190615481565b613a659087615629565b613a6f9190615648565b613a799190615648565b905081613a8e57613a8b600282615648565b90505b8215613aca5780601f6000828254613aa69190615437565b9250508190555080601d6000828254613abf9190615437565b90915550613afb9050565b80601e6000828254613adc9190615437565b9250508190555080601c6000828254613af59190615437565b90915550505b613b06600282615629565b95945050505050565b601a546001600160a01b03163314613b2657600080fd5b600654601b54601c546040516340c10f1960e01b81526001600160a01b03938416936340c10f1993613b5d93911691600401615468565b600060405180830381600087803b158015613b7757600080fd5b505af1158015613b8b573d6000803e3d6000fd5b5050600654601a54601e546040516340c10f1960e01b81526001600160a01b0393841695506340c10f199450613bc79390921691600401615468565b600060405180830381600087803b158015613be157600080fd5b505af1158015613bf5573d6000803e3d6000fd5b50505050601e54601c54613c099190615437565b60216000828254613c1a9190615437565b9091555050600054601a54601f5460405163a9059cbb60e01b81526001600160a01b039384169363a9059cbb93613c5693911691600401615468565b6020604051808303816000875af1158015613c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c99919061549a565b50600054601b54601d5460405163a9059cbb60e01b81526001600160a01b039384169363a9059cbb93613cd193911691600401615468565b6020604051808303816000875af1158015613cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d14919061549a565b506000601c819055601e819055601d819055601f55565b3360009081526035602052604090205460ff16613d5a5760405162461bcd60e51b8152600401611538906153fe565b613d6c816000015182602001516119d7565b60408201908152436101608301908152602a805460018082018355600083905285517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d2600d90930292830180546001600160a01b0319166001600160a01b0390921691909117905560208601517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d383015593517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d482015560608501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d582015560808501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d682015560a08501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d78201805460ff191691151591909117905560c08501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d882015560e08501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d98201556101008501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545da8201556101208501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545db8201556101408501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545dc82015591517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545dd8301556101808401517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545de9092019190915554613fdb91906154b7565b81516001600160a01b039081166000908152602860209081526040808320828701805185529083528184208288015185528352818420959095558551909316825260298152828220935182529290925281208054916140398361544f565b919050555050565b60606023805480602002602001604051908101604052809291908181526020018280548015611c0757602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161407b575050505050905090565b601a546001600160a01b031633146140b957600080fd5b6001600160a01b0381166140cc57600080fd5b601b80546001600160a01b0319166001600160a01b03831690811790915560408051818152600391810191909152623232bb60e91b6060820152602081019190915260008051602061569e83398151915290608001611307565b3360009081526035602052604090205460ff166141555760405162461bcd60e51b8152600401611538906153fe565b80516001600160a01b03166000908152602560209081526040808320828501518452825280832081850151845290915281206007810154909103614197575050565b606082015160038201556080820151600482015560a0820151600582015560e082015160079091015550565b601a546001600160a01b031633146141da57600080fd5b600081116141e757600080fd5b600e819055604080518181526010918101919091526f36b0bc2a3930b232b9a832b92830b4b960811b60608201526020810182905260008051602061567e83398151915290608001611307565b602a54600090810361424857506000611835565b6001600160a01b03841660009081526028602090815260408083208684528252808320858452909152812054602a80549091908110614289576142896153b7565b60009182526020909120600d9091020180549091506001600160a01b0386811691161480156142bb5750838160010154145b8015613b065750600201549091149392505050565b601a546001600160a01b031633146142e757600080fd5b601481905560408051818152601291810191909152716e66745375636365737354696d656c6f636b60701b60608201526020810182905260008051602061567e83398151915290608001611307565b6030602052816000526040600020818154811061435257600080fd5b6000918252602090912001546001600160a01b03169150829050565b3360009081526035602052604090205460ff1661439d5760405162461bcd60e51b8152600401611538906153fe565b600354604051633104b73f60e21b8152600481018390526001600160a01b039091169063c412dcfc90602401600060405180830381600087803b1580156143e357600080fd5b505af1158015613929573d6000803e3d6000fd5b3360009081526035602052604090205460ff166144265760405162461bcd60e51b8152600401611538906153fe565b6000546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906144589085908590600401615468565b600060405180830381600087803b15801561447257600080fd5b505af1158015614486573d6000803e3d6000fd5b505050505050565b601a546001600160a01b031633146144a557600080fd5b600081116144b257600080fd5b601081905560408051818152601691810191909152756d617850656e64696e674d61726b65744f726465727360501b60608201526020810182905260008051602061567e83398151915290608001611307565b6145406040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b506001600160a01b03929092166000908152602660209081526040808320938352928152828220938252928352819020815160c0810183528154815260018201549381019390935260028101549183019190915260038101546060830152600481015460808301526005015460ff16151560a082015290565b601a546001600160a01b031633146145d057600080fd5b8035158015906145e4575080356020820135115b80156145f7575060208101356040820135115b801561460a575060408101356060820135115b801561461d575060608101356080820135115b61462657600080fd5b6146336015826005614938565b507fdaae5e047a75b6f38ad4e279cdefe910fc35d5a99a91b8303bd948c0a999372a81604051611307919061566a565b601a546001600160a01b0316331461467a57600080fd5b6001600160a01b03811661468d57600080fd5b6001600160a01b038116600081815260356020908152604091829020805460ff1916600117905590519182527fb692fa98cbec9bd705572b4c7e0927e3f7698e9fe526dcef6f40f3d4d4980ca39101611307565b601a546001600160a01b031633146146f857600080fd5b6001600160a01b03811661470b57600080fd5b600580546001600160a01b0319166001600160a01b038316908117909155604080518181526009918101919091526863616c6c6261636b7360b81b6060820152602081019190915260008051602061569e83398151915290608001611307565b60008161477957600161477c565b60005b600086815260326020526040902060ff919091169150836147bb57848183600381106147aa576147aa6153b7565b01546147b691906154b7565b6147da565b848183600381106147ce576147ce6153b7565b01546147da9190615437565b8183600381106147ec576147ec6153b7565b01558054600182015460405188907f6da9a00899a8a4900c75b0c762b64375242e6c0fa1e5bd9e5c5b663bdbdfe13c90600090a4505050505050565b8260058101928215614870579160200282015b8281111561487057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061483b565b5061487c929150614966565b5090565b60405180610140016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081525090565b6040518060a001604052806005906020820280368337509192915050565b6040518060c0016040528061490f614880565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b8260058101928215614870579160200282015b8281111561487057823582559160200191906001019061494b565b5b8082111561487c5760008155600101614967565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156149b4576149b461497b565b60405290565b604051610140810167ffffffffffffffff811182821017156149b4576149b461497b565b6040516101a0810167ffffffffffffffff811182821017156149b4576149b461497b565b6001600160a01b0381168114612fba57600080fd5b600060a08284031215614a2957600080fd5b82601f830112614a3857600080fd5b60405160a0810181811067ffffffffffffffff82111715614a5b57614a5b61497b565b6040528060a0840185811115614a7057600080fd5b845b81811015614a93578035614a8581614a02565b835260209283019201614a72565b509195945050505050565b600060208284031215614ab057600080fd5b5035919050565b60008060408385031215614aca57600080fd5b50508035926020909101359150565b8035614ae481614a02565b919050565b600060208284031215614afb57600080fd5b813561183581614a02565b60008060408385031215614b1957600080fd5b8235614b2481614a02565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60058110614b6657634e487b7160e01b600052602160045260246000fd5b9052565b600060c08201905060018060a01b038084511683526020840151602084015280604085015116604084015250606083015160608301526080830151608083015260a083015161178360a0840182614b48565b600080600060608486031215614bd157600080fd5b8335614bdc81614a02565b95602085013595506040909401359392505050565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c0810151614c4360c084018215159052565b5060e08181015190830152610100808201519083015261012090810151910152565b6101408101614c748284614bf1565b92915050565b8015158114612fba57600080fd5b8035614ae481614c7a565b600080600060608486031215614ca857600080fd5b8335614cb381614a02565b9250602084013591506040840135614cca81614c7a565b809150509250925092565b60a08101818360005b6005811015614cfd578151835260209283019290910190600101614cde565b50505092915050565b6020808252825182820181905260009190848201906040850190845b81811015614d3e57835183529284019291840191600101614d22565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015614d3e5783516001600160a01b031683529284019291840191600101614d66565b60006101e082019050614d9f828451614bf1565b60208301516101408301526040830151610160830152606083015161018083015260808301516101a083015260a0909201516101c09091015290565b60008060008060808587031215614df157600080fd5b8435614dfc81614a02565b966020860135965060408601359560600135945092505050565b60008082840360e0811215614e2a57600080fd5b60c0811215614e3857600080fd5b50614e41614991565b8335614e4c81614a02565b8152602084810135908201526040840135614e6681614a02565b80604083015250606084013560608201526080840135608082015260a084013560058110614e9357600080fd5b60a08201529460c0939093013593505050565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a0810151614eee60a084018215159052565b5060c0818101519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018090810151910152565b6020808252825182820181905260009190848201906040850190845b81811015614d3e57614f6a838551614ea6565b928401926101a09290920191600101614f57565b600080600060608486031215614f9357600080fd5b8335614f9e81614a02565b92506020840135614fae81614a02565b929592945050506040919091013590565b6001600160a01b0387811682526020820187905285166040820152606081018490526080810183905260c08101614ff960a0830184614b48565b979650505050505050565b6000806040838503121561501757600080fd5b823561502281614a02565b9150602083013561503281614a02565b809150509250929050565b6101e0810161504c8289614bf1565b6101408201969096526101608101949094526101808401929092526101a08301526101c090910152919050565b60006101a0828403121561508c57600080fd5b50919050565b6101a08101614c748284614ea6565b600061014082840312156150b457600080fd5b6150bc6149ba565b90506150c782614ad9565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015261510760c08301614c88565b60c082015260e082013560e082015261010080830135818301525061012080830135818301525092915050565b60008082840361020081121561514957600080fd5b61515385856150a1565b925060c061013f198201121561516857600080fd5b50615171614991565b6101408401358152610160840135602082015261018084013560408201526101a084013560608201526101c084013560808201526101e08401356151b481614c7a565b60a0820152919491935090915050565b60008060008385036102208112156151db57600080fd5b6101e0808212156151eb57600080fd5b6151f3614991565b91506151ff87876150a1565b82526101408601356020830152610160860135604083015261018086013560608301526101a086013560808301526101c086013560a0830152909350840135915061524d6102008501614c88565b90509250925092565b6000806040838503121561526957600080fd5b82359150602083013561503281614c7a565b6000806000806080858703121561529157600080fd5b843593506020850135925060408501356152aa81614c7a565b915060608501356152ba81614c7a565b939692955090935050565b60006101a082840312156152d857600080fd5b6152e06149de565b6152e983614ad9565b81526020830135602082015260408301356040820152606083013560608201526080830135608082015261531f60a08401614c88565b60a082015260c0838101359082015260e080840135908201526101008084013590820152610120808401359082015261014080840135908201526101608084013590820152610180928301359281019290925250919050565b6000610140828403121561538b57600080fd5b61183583836150a1565b600060a082840312156153a757600080fd5b8260a08301111561508c57600080fd5b634e487b7160e01b600052603260045260246000fd5b60a08101818360005b6005811015614cfd5781516001600160a01b03168352602092830192909101906001016153d6565b60208082526009908201526868657265206865726560b81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561544a5761544a615421565b500190565b60006001820161546157615461615421565b5060010190565b6001600160a01b03929092168252602082015260400190565b60006020828403121561549357600080fd5b5051919050565b6000602082840312156154ac57600080fd5b815161183581614c7a565b6000828210156154c9576154c9615421565b500390565b634e487b7160e01b600052603160045260246000fd5b6000816154f3576154f3615421565b506000190190565b81546001600160a01b0316815260018201546020820152600282015460408201526003820154606082015260048201546080820152600582015460a0820152600682015460ff16151560c0820152600782015460e08201526008820154610100820152600982015461012082015261014081015b5061014001919050565b60006020828403121561558b57600080fd5b813561183581614c7a565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015261556f61561b61560d6156006155f16155e4608087016080890151815260200190565b60a0880151815260200190565b60c08701511515815260200190565b60e0860151815260200190565b610100850151815260200190565b610120840151815260200190565b600081600019048311821515161561564357615643615421565b500290565b60008261566557634e487b7160e01b600052601260045260246000fd5b500490565b60a081810190838337600081529291505056fe8cf3e35f6221b16e1670a3413180c9484bf5aa71787905909fa82a6a2662e9ab943e9d45a11aaae5d87503e3bc248665d9807856e5cf2bdb4a988bee44422781a264697066735822122053ee0cae4654303526277449b126d9cb8e58a45ac7a8409858398519d62fa44764736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12514,
        "contract": "contracts/Storage.sol:Storage",
        "label": "WETH",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(TokenInterface)22932"
      },
      {
        "astId": 12517,
        "contract": "contracts/Storage.sol:Storage",
        "label": "oracle",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IOracle)21572"
      },
      {
        "astId": 12526,
        "contract": "contracts/Storage.sol:Storage",
        "label": "priceAggregator",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorInterfaceV1)20816"
      },
      {
        "astId": 12529,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pool",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(PoolInterfaceV5)22293"
      },
      {
        "astId": 12532,
        "contract": "contracts/Storage.sol:Storage",
        "label": "trading",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(PausableInterfaceV5)22285"
      },
      {
        "astId": 12535,
        "contract": "contracts/Storage.sol:Storage",
        "label": "callbacks",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(PausableInterfaceV5)22285"
      },
      {
        "astId": 12541,
        "contract": "contracts/Storage.sol:Storage",
        "label": "token",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(TokenInterface)22932"
      },
      {
        "astId": 12562,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nfts",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_contract(NftInterfaceV5)21867)5_storage"
      },
      {
        "astId": 12564,
        "contract": "contracts/Storage.sol:Storage",
        "label": "vault",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 12566,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tokenWETHRouter",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 12569,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxTradesPerPair",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 12572,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxTradesPerBlock",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 12575,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxPendingMarketOrders",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 12578,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxGainP",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 12581,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxSlP",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 12584,
        "contract": "contracts/Storage.sol:Storage",
        "label": "defaultLeverageUnlocked",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 12587,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nftSuccessTimelock",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 12597,
        "contract": "contracts/Storage.sol:Storage",
        "label": "spreadReductionsP",
        "offset": 0,
        "slot": "21",
        "type": "t_array(t_uint256)5_storage"
      },
      {
        "astId": 12599,
        "contract": "contracts/Storage.sol:Storage",
        "label": "gov",
        "offset": 0,
        "slot": "26",
        "type": "t_address"
      },
      {
        "astId": 12601,
        "contract": "contracts/Storage.sol:Storage",
        "label": "dev",
        "offset": 0,
        "slot": "27",
        "type": "t_address"
      },
      {
        "astId": 12603,
        "contract": "contracts/Storage.sol:Storage",
        "label": "devFeesToken",
        "offset": 0,
        "slot": "28",
        "type": "t_uint256"
      },
      {
        "astId": 12605,
        "contract": "contracts/Storage.sol:Storage",
        "label": "devFeesWETH",
        "offset": 0,
        "slot": "29",
        "type": "t_uint256"
      },
      {
        "astId": 12607,
        "contract": "contracts/Storage.sol:Storage",
        "label": "govFeesToken",
        "offset": 0,
        "slot": "30",
        "type": "t_uint256"
      },
      {
        "astId": 12609,
        "contract": "contracts/Storage.sol:Storage",
        "label": "govFeesWETH",
        "offset": 0,
        "slot": "31",
        "type": "t_uint256"
      },
      {
        "astId": 12611,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tokensBurned",
        "offset": 0,
        "slot": "32",
        "type": "t_uint256"
      },
      {
        "astId": 12613,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tokensMinted",
        "offset": 0,
        "slot": "33",
        "type": "t_uint256"
      },
      {
        "astId": 12615,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nftRewards",
        "offset": 0,
        "slot": "34",
        "type": "t_uint256"
      },
      {
        "astId": 12625,
        "contract": "contracts/Storage.sol:Storage",
        "label": "supportedTokens",
        "offset": 0,
        "slot": "35",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 12630,
        "contract": "contracts/Storage.sol:Storage",
        "label": "traders",
        "offset": 0,
        "slot": "36",
        "type": "t_mapping(t_address,t_struct(Trader)12622_storage)"
      },
      {
        "astId": 12639,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openTrades",
        "offset": 0,
        "slot": "37",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)22373_storage)))"
      },
      {
        "astId": 12648,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openTradesInfo",
        "offset": 0,
        "slot": "38",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)22386_storage)))"
      },
      {
        "astId": 12654,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openTradesCount",
        "offset": 0,
        "slot": "39",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 12662,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openLimitOrderIds",
        "offset": 0,
        "slot": "40",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))"
      },
      {
        "astId": 12668,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openLimitOrdersCount",
        "offset": 0,
        "slot": "41",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 12672,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openLimitOrders",
        "offset": 0,
        "slot": "42",
        "type": "t_array(t_struct(OpenLimitOrder)22413_storage)dyn_storage"
      },
      {
        "astId": 12677,
        "contract": "contracts/Storage.sol:Storage",
        "label": "reqID_pendingMarketOrder",
        "offset": 0,
        "slot": "43",
        "type": "t_mapping(t_uint256,t_struct(PendingMarketOrder)22427_storage)"
      },
      {
        "astId": 12682,
        "contract": "contracts/Storage.sol:Storage",
        "label": "reqID_pendingNftOrder",
        "offset": 0,
        "slot": "44",
        "type": "t_mapping(t_uint256,t_struct(PendingNftOrder)22441_storage)"
      },
      {
        "astId": 12687,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pendingOrderIds",
        "offset": 0,
        "slot": "45",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 12693,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pendingMarketOpenCount",
        "offset": 0,
        "slot": "46",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 12699,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pendingMarketCloseCount",
        "offset": 0,
        "slot": "47",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 12704,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pairTraders",
        "offset": 0,
        "slot": "48",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 12710,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pairTradersId",
        "offset": 0,
        "slot": "49",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 12716,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openInterestWETH",
        "offset": 0,
        "slot": "50",
        "type": "t_mapping(t_uint256,t_array(t_uint256)3_storage)"
      },
      {
        "astId": 12720,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tradesPerBlock",
        "offset": 0,
        "slot": "51",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 12724,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nftLastSuccess",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 12728,
        "contract": "contracts/Storage.sol:Storage",
        "label": "isTradingContract",
        "offset": 0,
        "slot": "53",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(NftInterfaceV5)21867)5_storage": {
        "base": "t_contract(NftInterfaceV5)21867",
        "encoding": "inplace",
        "label": "contract NftInterfaceV5[5]",
        "numberOfBytes": "160"
      },
      "t_array(t_struct(OpenLimitOrder)22413_storage)dyn_storage": {
        "base": "t_struct(OpenLimitOrder)22413_storage",
        "encoding": "dynamic_array",
        "label": "struct StorageInterface.OpenLimitOrder[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)3_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[3]",
        "numberOfBytes": "96"
      },
      "t_array(t_uint256)5_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[5]",
        "numberOfBytes": "160"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorInterfaceV1)20816": {
        "encoding": "inplace",
        "label": "contract AggregatorInterfaceV1",
        "numberOfBytes": "20"
      },
      "t_contract(IOracle)21572": {
        "encoding": "inplace",
        "label": "contract IOracle",
        "numberOfBytes": "20"
      },
      "t_contract(NftInterfaceV5)21867": {
        "encoding": "inplace",
        "label": "contract NftInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_contract(PausableInterfaceV5)22285": {
        "encoding": "inplace",
        "label": "contract PausableInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_contract(PoolInterfaceV5)22293": {
        "encoding": "inplace",
        "label": "contract PoolInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_contract(TokenInterface)22932": {
        "encoding": "inplace",
        "label": "contract TokenInterface",
        "numberOfBytes": "20"
      },
      "t_enum(LimitOrder)22352": {
        "encoding": "inplace",
        "label": "enum StorageInterface.LimitOrder",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)22373_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct StorageInterface.Trade)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)22373_storage))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)22386_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct StorageInterface.TradeInfo)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)22386_storage))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Trader)12622_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Storage.Trader)",
        "numberOfBytes": "32",
        "value": "t_struct(Trader)12622_storage"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_uint256)3_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[3])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)3_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)22373_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct StorageInterface.Trade))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Trade)22373_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)22386_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct StorageInterface.TradeInfo))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(TradeInfo)22386_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(PendingMarketOrder)22427_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct StorageInterface.PendingMarketOrder)",
        "numberOfBytes": "32",
        "value": "t_struct(PendingMarketOrder)22427_storage"
      },
      "t_mapping(t_uint256,t_struct(PendingNftOrder)22441_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct StorageInterface.PendingNftOrder)",
        "numberOfBytes": "32",
        "value": "t_struct(PendingNftOrder)22441_storage"
      },
      "t_mapping(t_uint256,t_struct(Trade)22373_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct StorageInterface.Trade)",
        "numberOfBytes": "32",
        "value": "t_struct(Trade)22373_storage"
      },
      "t_mapping(t_uint256,t_struct(TradeInfo)22386_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct StorageInterface.TradeInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(TradeInfo)22386_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(OpenLimitOrder)22413_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.OpenLimitOrder",
        "members": [
          {
            "astId": 22388,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trader",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 22390,
            "contract": "contracts/Storage.sol:Storage",
            "label": "pairIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 22392,
            "contract": "contracts/Storage.sol:Storage",
            "label": "index",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 22394,
            "contract": "contracts/Storage.sol:Storage",
            "label": "positionSize",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 22396,
            "contract": "contracts/Storage.sol:Storage",
            "label": "spreadReductionP",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 22398,
            "contract": "contracts/Storage.sol:Storage",
            "label": "buy",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 22400,
            "contract": "contracts/Storage.sol:Storage",
            "label": "leverage",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 22402,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 22404,
            "contract": "contracts/Storage.sol:Storage",
            "label": "sl",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 22406,
            "contract": "contracts/Storage.sol:Storage",
            "label": "minPrice",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 22408,
            "contract": "contracts/Storage.sol:Storage",
            "label": "maxPrice",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 22410,
            "contract": "contracts/Storage.sol:Storage",
            "label": "block",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 22412,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenId",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(PendingMarketOrder)22427_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.PendingMarketOrder",
        "members": [
          {
            "astId": 22416,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trade",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Trade)22373_storage"
          },
          {
            "astId": 22418,
            "contract": "contracts/Storage.sol:Storage",
            "label": "block",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 22420,
            "contract": "contracts/Storage.sol:Storage",
            "label": "wantedPrice",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 22422,
            "contract": "contracts/Storage.sol:Storage",
            "label": "slippageP",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256"
          },
          {
            "astId": 22424,
            "contract": "contracts/Storage.sol:Storage",
            "label": "spreadReductionP",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256"
          },
          {
            "astId": 22426,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenId",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "480"
      },
      "t_struct(PendingNftOrder)22441_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.PendingNftOrder",
        "members": [
          {
            "astId": 22429,
            "contract": "contracts/Storage.sol:Storage",
            "label": "nftHolder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 22431,
            "contract": "contracts/Storage.sol:Storage",
            "label": "nftId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 22433,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trader",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 22435,
            "contract": "contracts/Storage.sol:Storage",
            "label": "pairIndex",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 22437,
            "contract": "contracts/Storage.sol:Storage",
            "label": "index",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 22440,
            "contract": "contracts/Storage.sol:Storage",
            "label": "orderType",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(LimitOrder)22352"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Trade)22373_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.Trade",
        "members": [
          {
            "astId": 22354,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trader",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 22356,
            "contract": "contracts/Storage.sol:Storage",
            "label": "pairIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 22358,
            "contract": "contracts/Storage.sol:Storage",
            "label": "index",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 22360,
            "contract": "contracts/Storage.sol:Storage",
            "label": "initialPosToken",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 22362,
            "contract": "contracts/Storage.sol:Storage",
            "label": "positionSizeWETH",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 22364,
            "contract": "contracts/Storage.sol:Storage",
            "label": "openPrice",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 22366,
            "contract": "contracts/Storage.sol:Storage",
            "label": "buy",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 22368,
            "contract": "contracts/Storage.sol:Storage",
            "label": "leverage",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 22370,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 22372,
            "contract": "contracts/Storage.sol:Storage",
            "label": "sl",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(TradeInfo)22386_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.TradeInfo",
        "members": [
          {
            "astId": 22375,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 22377,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenPriceWETH",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 22379,
            "contract": "contracts/Storage.sol:Storage",
            "label": "openInterestWETH",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 22381,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tpLastUpdated",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 22383,
            "contract": "contracts/Storage.sol:Storage",
            "label": "slLastUpdated",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 22385,
            "contract": "contracts/Storage.sol:Storage",
            "label": "beingMarketClosed",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Trader)12622_storage": {
        "encoding": "inplace",
        "label": "struct Storage.Trader",
        "members": [
          {
            "astId": 12617,
            "contract": "contracts/Storage.sol:Storage",
            "label": "leverageUnlocked",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 12619,
            "contract": "contracts/Storage.sol:Storage",
            "label": "referral",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 12621,
            "contract": "contracts/Storage.sol:Storage",
            "label": "referralRewardsTotal",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}