{
  "address": "0x5a8C52BbCe78b50E0753aa3DDd913dd2D1cE981C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "AddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract NftInterfaceV5[5]",
          "name": "nfts",
          "type": "address[5]"
        }
      ],
      "name": "NftsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NumberUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NumberUpdatedPair",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "name": "SpreadReductionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "SupportedTokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "TradingContractAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "TradingContractRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addSupportedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trading",
          "type": "address"
        }
      ],
      "name": "addTradingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "callbacks",
      "outputs": [
        {
          "internalType": "contract PausableInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultLeverageUnlocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dev",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFeesToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFeesWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "distributeLpRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "firstEmptyOpenLimitIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "firstEmptyTradeIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGov",
      "outputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getLeverageUnlocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getOpenLimitOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Storage.OpenLimitOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenLimitOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Storage.OpenLimitOrder[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getPendingOrderIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getReferral",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSpreadReductionsArray",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govFeesToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govFeesWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_leveragedPositionSize",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_WETH",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_fullFee",
          "type": "bool"
        }
      ],
      "name": "handleDevGovFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_a",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_mint",
          "type": "bool"
        }
      ],
      "name": "handleTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "hasOpenLimitOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseNftRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseReferralRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isTradingContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkErc677",
      "outputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxGainP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPendingMarketOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSlP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTradesPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTradesPerPair",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftLastSuccess",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftSuccessTimelock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "contract NftInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openInterestWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openLimitOrderIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openLimitOrders",
      "outputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spreadReductionP",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "buy",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sl",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openLimitOrdersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openTrades",
      "outputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialPosToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionSizeWETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "buy",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sl",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openTradesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openTradesInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenPriceWETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openInterestWETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tpLastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slLastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "beingMarketClosed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairTraders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairTradersArray",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairTradersId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingMarketCloseCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingMarketOpenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingOrderIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "pendingOrderIdsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract PoolInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceAggregator",
      "outputs": [
        {
          "internalType": "contract AggregatorInterfaceV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trading",
          "type": "address"
        }
      ],
      "name": "removeTradingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reqID_pendingMarketOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct Storage.Trade",
          "name": "trade",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wantedPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slippageP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spreadReductionP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reqID_pendingNftOrder",
      "outputs": [
        {
          "internalType": "address",
          "name": "nftHolder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "enum Storage.LimitOrder",
          "name": "orderType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_callbacks",
          "type": "address"
        }
      ],
      "name": "setCallbacks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lev",
          "type": "uint256"
        }
      ],
      "name": "setDefaultLeverageUnlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        }
      ],
      "name": "setDev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newLeverage",
          "type": "uint256"
        }
      ],
      "name": "setLeverageUnlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setMaxGainP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newMaxOpenInterest",
          "type": "uint256"
        }
      ],
      "name": "setMaxOpenInterestWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxPendingMarketOrders",
          "type": "uint256"
        }
      ],
      "name": "setMaxPendingMarketOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setMaxSlP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTradesPerBlock",
          "type": "uint256"
        }
      ],
      "name": "setMaxTradesPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTradesPerPair",
          "type": "uint256"
        }
      ],
      "name": "setMaxTradesPerPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocks",
          "type": "uint256"
        }
      ],
      "name": "setNftSuccessTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "setPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "setPriceAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[5]",
          "name": "_r",
          "type": "uint256[5]"
        }
      ],
      "name": "setSpreadReductionsP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenWETHRouter",
          "type": "address"
        }
      ],
      "name": "setTokenWETHRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trading",
          "type": "address"
        }
      ],
      "name": "setTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "spreadReductionsP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Storage.OpenLimitOrder",
          "name": "o",
          "type": "tuple"
        }
      ],
      "name": "storeOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pairIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialPosToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionSizeWETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "buy",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "leverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sl",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Storage.Trade",
              "name": "trade",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wantedPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slippageP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Storage.PendingMarketOrder",
          "name": "_order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_open",
          "type": "bool"
        }
      ],
      "name": "storePendingMarketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftHolder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "enum Storage.LimitOrder",
              "name": "orderType",
              "type": "uint8"
            }
          ],
          "internalType": "struct Storage.PendingNftOrder",
          "name": "_nftOrder",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_orderId",
          "type": "uint256"
        }
      ],
      "name": "storePendingNftOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referral",
          "type": "address"
        }
      ],
      "name": "storeReferral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct Storage.Trade",
          "name": "_trade",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenPriceWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openInterestWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tpLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "beingMarketClosed",
              "type": "bool"
            }
          ],
          "internalType": "struct Storage.TradeInfo",
          "name": "_tradeInfo",
          "type": "tuple"
        }
      ],
      "name": "storeTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenWETHRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensBurned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "traders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "leverageUnlocked",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referralRewardsTotal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trading",
      "outputs": [
        {
          "internalType": "contract PausableInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_leveragedPosWETH",
          "type": "uint256"
        }
      ],
      "name": "transferLinkToAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "unregisterOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_open",
          "type": "bool"
        }
      ],
      "name": "unregisterPendingMarketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_order",
          "type": "uint256"
        }
      ],
      "name": "unregisterPendingNftOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "unregisterTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract NftInterfaceV5[5]",
          "name": "_nfts",
          "type": "address[5]"
        }
      ],
      "name": "updateNfts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Storage.OpenLimitOrder",
          "name": "_o",
          "type": "tuple"
        }
      ],
      "name": "updateOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newSl",
          "type": "uint256"
        }
      ],
      "name": "updateSl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "_newToken",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newTp",
          "type": "uint256"
        }
      ],
      "name": "updateTp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct Storage.Trade",
          "name": "_t",
          "type": "tuple"
        }
      ],
      "name": "updateTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa6f04323cd0ec56cf28e8912054d428897220ce00f4a2f7d581a77732be22172",
  "receipt": {
    "to": null,
    "from": "0xa667403454F483dE81A0363Af7FcEE563819D910",
    "contractAddress": "0x5a8C52BbCe78b50E0753aa3DDd913dd2D1cE981C",
    "transactionIndex": 2,
    "gasUsed": "4842785",
    "logsBloom": "0x
    "blockHash": "0xaf923eb13ddeacabc5e14fa3d701330258cac330c7a92a50ed7e916ed1fd5cbb",
    "transactionHash": "0xa6f04323cd0ec56cf28e8912054d428897220ce00f4a2f7d581a77732be22172",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 40795078,
        "transactionHash": "0xa6f04323cd0ec56cf28e8912054d428897220ce00f4a2f7d581a77732be22172",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a667403454f483de81a0363af7fcee563819d910",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000019cebb1f790f000000000000000000000000000000000000000000000000007f5b7051c18a9e4e00000000000000000000000000000000000000000000131c438e4d7a2d62baad0000000000000000000000000000000000000000000000007f41a196a2118f4e00000000000000000000000000000000000000000000131c43a81c354cdbc9ad",
        "logIndex": 3,
        "blockHash": "0xaf923eb13ddeacabc5e14fa3d701330258cac330c7a92a50ed7e916ed1fd5cbb"
      }
    ],
    "blockNumber": 40795078,
    "cumulativeGasUsed": "5420451",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc3e987cE33db1Ad7442aa12aE68589620FEB89c9",
    "0xa667403454F483dE81A0363Af7FcEE563819D910",
    "0xa667403454F483dE81A0363Af7FcEE563819D910"
  ],
  "numDeployments": 1,
  "solcInputHash": "be3f31a2a9daf94ca2c1fb85b33493fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract NftInterfaceV5[5]\",\"name\":\"nfts\",\"type\":\"address[5]\"}],\"name\":\"NftsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NumberUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NumberUpdatedPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"name\":\"SpreadReductionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"SupportedTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"TradingContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"TradingContractRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"addTradingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbacks\",\"outputs\":[{\"internalType\":\"contract PausableInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLeverageUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFeesToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFeesWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"distributeLpRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"firstEmptyOpenLimitIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"firstEmptyTradeIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getLeverageUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getOpenLimitOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Storage.OpenLimitOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenLimitOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Storage.OpenLimitOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getPendingOrderIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getReferral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpreadReductionsArray\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFeesToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFeesWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_leveragedPositionSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_WETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_fullFee\",\"type\":\"bool\"}],\"name\":\"handleDevGovFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_mint\",\"type\":\"bool\"}],\"name\":\"handleTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"hasOpenLimitOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseNftRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseReferralRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTradingContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkErc677\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGainP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPendingMarketOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSlP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTradesPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTradesPerPair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftLastSuccess\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftSuccessTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"contract NftInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openInterestWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrderIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrdersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTrades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTradesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTradesInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairTraders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairTradersArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairTradersId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingMarketCloseCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingMarketOpenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingOrderIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"pendingOrderIdsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract PoolInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceAggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorInterfaceV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"removeTradingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reqID_pendingMarketOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct Storage.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reqID_pendingNftOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum Storage.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_callbacks\",\"type\":\"address\"}],\"name\":\"setCallbacks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lev\",\"type\":\"uint256\"}],\"name\":\"setDefaultLeverageUnlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newLeverage\",\"type\":\"uint256\"}],\"name\":\"setLeverageUnlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxGainP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMaxOpenInterest\",\"type\":\"uint256\"}],\"name\":\"setMaxOpenInterestWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPendingMarketOrders\",\"type\":\"uint256\"}],\"name\":\"setMaxPendingMarketOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxSlP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTradesPerBlock\",\"type\":\"uint256\"}],\"name\":\"setMaxTradesPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTradesPerPair\",\"type\":\"uint256\"}],\"name\":\"setMaxTradesPerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocks\",\"type\":\"uint256\"}],\"name\":\"setNftSuccessTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"}],\"name\":\"setPriceAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_r\",\"type\":\"uint256[5]\"}],\"name\":\"setSpreadReductionsP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenWETHRouter\",\"type\":\"address\"}],\"name\":\"setTokenWETHRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"spreadReductionsP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Storage.OpenLimitOrder\",\"name\":\"o\",\"type\":\"tuple\"}],\"name\":\"storeOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct Storage.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Storage.PendingMarketOrder\",\"name\":\"_order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"storePendingMarketOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum Storage.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"internalType\":\"struct Storage.PendingNftOrder\",\"name\":\"_nftOrder\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"storePendingNftOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"}],\"name\":\"storeReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct Storage.Trade\",\"name\":\"_trade\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"internalType\":\"struct Storage.TradeInfo\",\"name\":\"_tradeInfo\",\"type\":\"tuple\"}],\"name\":\"storeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenWETHRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"traders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageUnlocked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referralRewardsTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trading\",\"outputs\":[{\"internalType\":\"contract PausableInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_leveragedPosWETH\",\"type\":\"uint256\"}],\"name\":\"transferLinkToAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"unregisterOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"unregisterPendingMarketOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_order\",\"type\":\"uint256\"}],\"name\":\"unregisterPendingNftOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unregisterTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract NftInterfaceV5[5]\",\"name\":\"_nfts\",\"type\":\"address[5]\"}],\"name\":\"updateNfts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Storage.OpenLimitOrder\",\"name\":\"_o\",\"type\":\"tuple\"}],\"name\":\"updateOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newSl\",\"type\":\"uint256\"}],\"name\":\"updateSl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"_newToken\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newTp\",\"type\":\"uint256\"}],\"name\":\"updateTp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct Storage.Trade\",\"name\":\"_t\",\"type\":\"tuple\"}],\"name\":\"updateTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Storage.sol\":\"Storage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":125},\"remappings\":[]},\"sources\":{\"contracts/Storage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"./interfaces/StorageInterface.sol\\\";\\nimport \\\"./interfaces/AggregatorInterfaceV1.sol\\\";\\nimport \\\"./interfaces/PoolInterfaceV5.sol\\\";\\nimport \\\"./interfaces/NftInterfaceV5.sol\\\";\\nimport \\\"./interfaces/PausableInterfaceV5.sol\\\";\\n\\ncontract Storage {\\n    // Constants\\n    uint public constant PRECISION = 1e10;\\n    bytes32 public constant MINTER_ROLE =\\n        0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6;\\n    TokenInterface public WETH;\\n    IOracle public oracle;\\n    TokenInterface public constant linkErc677 =\\n        TokenInterface(0xb0897686c545045aFc77CF20eC7A532E3120E0F1);\\n\\n    // Contracts (updatable)\\n    AggregatorInterfaceV1 public priceAggregator;\\n    PoolInterfaceV5 public pool;\\n    PausableInterfaceV5 public trading;\\n    PausableInterfaceV5 public callbacks;\\n    TokenInterface public token =\\n        TokenInterface(0x7075cAB6bCCA06613e2d071bd918D1a0241379E2);\\n    NftInterfaceV5[5] public nfts = [\\n        NftInterfaceV5(0xF9A4c522E327935BD1F5a338c121E14e4cc1f898),\\n        NftInterfaceV5(0x77cd42B925e1A82f41d852D6BE727CFc88fddBbC),\\n        NftInterfaceV5(0x3378AD81D09DE23725Ee9B9270635c97Ed601921),\\n        NftInterfaceV5(0x02e2c5825C1a3b69C0417706DbE1327C2Af3e6C2),\\n        NftInterfaceV5(0x2D266A94469d05C9e06D52A4D0d9C23b157767c2)\\n    ];\\n    address public vault;\\n    address public tokenWETHRouter;\\n\\n    // Trading variables\\n    uint public maxTradesPerPair = 3;\\n    uint public maxTradesPerBlock = 5;\\n    uint public maxPendingMarketOrders = 5;\\n    uint public maxGainP = 900; // %\\n    uint public maxSlP = 80; // %\\n    uint public defaultLeverageUnlocked = 50; // x\\n    uint public nftSuccessTimelock = 50; // 50 blocks\\n    uint[5] public spreadReductionsP = [15, 20, 25, 30, 35]; // %\\n\\n    // Gov & dev addresses (updatable)\\n    address public gov; //TODO need to change to our\\n    address public dev; //TODO need to change to our\\n\\n    // Gov & dev fees\\n    uint public devFeesToken; // 1e18\\n    uint public devFeesWETH; // 1e18\\n    uint public govFeesToken; // 1e18\\n    uint public govFeesWETH; // 1e18\\n\\n    // Stats\\n    uint public tokensBurned; // 1e18\\n    uint public tokensMinted; // 1e18\\n    uint public nftRewards; // 1e18\\n\\n    // Enums\\n    enum LimitOrder {\\n        TP,\\n        SL,\\n        LIQ,\\n        OPEN\\n    }\\n\\n    // Structs\\n    struct Trader {\\n        uint leverageUnlocked;\\n        address referral;\\n        uint referralRewardsTotal; // 1e18\\n    }\\n    struct Trade {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint initialPosToken; // 1e18\\n        uint positionSizeWETH; // 1e18\\n        uint openPrice; // PRECISION\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION\\n        uint sl; // PRECISION\\n    }\\n    struct TradeInfo {\\n        uint tokenId;\\n        uint tokenPriceWETH; // PRECISION\\n        uint openInterestWETH; // 1e18\\n        uint tpLastUpdated;\\n        uint slLastUpdated;\\n        bool beingMarketClosed;\\n    }\\n    struct OpenLimitOrder {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint positionSize; // 1e18 (WETH or GFARM2)\\n        uint spreadReductionP;\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION (%)\\n        uint sl; // PRECISION (%)\\n        uint minPrice; // PRECISION\\n        uint maxPrice; // PRECISION\\n        uint block;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingMarketOrder {\\n        Trade trade;\\n        uint block;\\n        uint wantedPrice; // PRECISION\\n        uint slippageP; // PRECISION (%)\\n        uint spreadReductionP;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingNftOrder {\\n        address nftHolder;\\n        uint nftId;\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        LimitOrder orderType;\\n    }\\n\\n    // Supported tokens to open trades with\\n    address[] public supportedTokens;\\n\\n    // User info mapping\\n    mapping(address => Trader) public traders;\\n\\n    // Trades mappings\\n    mapping(address => mapping(uint => mapping(uint => Trade)))\\n        public openTrades;\\n    mapping(address => mapping(uint => mapping(uint => TradeInfo)))\\n        public openTradesInfo;\\n    mapping(address => mapping(uint => uint)) public openTradesCount;\\n\\n    // Limit orders mappings\\n    mapping(address => mapping(uint => mapping(uint => uint)))\\n        public openLimitOrderIds;\\n    mapping(address => mapping(uint => uint)) public openLimitOrdersCount;\\n    OpenLimitOrder[] public openLimitOrders;\\n\\n    // Pending orders mappings\\n    mapping(uint => PendingMarketOrder) public reqID_pendingMarketOrder;\\n    mapping(uint => PendingNftOrder) public reqID_pendingNftOrder;\\n    mapping(address => uint[]) public pendingOrderIds;\\n    mapping(address => mapping(uint => uint)) public pendingMarketOpenCount;\\n    mapping(address => mapping(uint => uint)) public pendingMarketCloseCount;\\n\\n    // List of open trades & limit orders\\n    mapping(uint => address[]) public pairTraders;\\n    mapping(address => mapping(uint => uint)) public pairTradersId;\\n\\n    // Current and max open interests for each pair\\n    mapping(uint => uint[3]) public openInterestWETH; // 1e18 [long,short,max]\\n\\n    // Restrictions & Timelocks\\n    mapping(uint => uint) public tradesPerBlock;\\n    mapping(uint => uint) public nftLastSuccess;\\n\\n    // List of allowed contracts => can update storage + mint/burn tokens\\n    mapping(address => bool) public isTradingContract;\\n\\n    // Events\\n    event SupportedTokenAdded(address a);\\n    event TradingContractAdded(address a);\\n    event TradingContractRemoved(address a);\\n    event AddressUpdated(string name, address a);\\n    event NftsUpdated(NftInterfaceV5[5] nfts);\\n    event NumberUpdated(string name, uint value);\\n    event NumberUpdatedPair(string name, uint pairIndex, uint value);\\n    event SpreadReductionsUpdated(uint[5]);\\n\\n    constructor(address _WETH, address _gov, address _dev) {\\n        WETH = TokenInterface(_WETH);\\n        gov = _gov;\\n        dev = _dev;\\n    }\\n\\n    // Modifiers\\n    modifier onlyGov() {\\n        require(msg.sender == gov);\\n        _;\\n    }\\n    modifier onlyTrading() {\\n        require(\\n            isTradingContract[msg.sender]\\n            // &&\\n            //     token.hasRole(MINTER_ROLE, msg.sender)\\n        );\\n        _;\\n    }\\n\\n    // Manage addresses\\n    function setGov(address _gov) external onlyGov {\\n        require(_gov != address(0));\\n        gov = _gov;\\n        emit AddressUpdated(\\\"gov\\\", _gov);\\n    }\\n\\n    function setDev(address _dev) external onlyGov {\\n        require(_dev != address(0));\\n        dev = _dev;\\n        emit AddressUpdated(\\\"dev\\\", _dev);\\n    }\\n\\n    function updateToken(TokenInterface _newToken) external onlyGov {\\n        require(trading.isPaused() && callbacks.isPaused(), \\\"NOT_PAUSED\\\");\\n        require(address(_newToken) != address(0));\\n        token = _newToken;\\n        emit AddressUpdated(\\\"token\\\", address(_newToken));\\n    }\\n\\n    function updateNfts(NftInterfaceV5[5] memory _nfts) external onlyGov {\\n        require(address(_nfts[0]) != address(0));\\n        nfts = _nfts;\\n        emit NftsUpdated(_nfts);\\n    }\\n\\n    // Trading + callbacks contracts\\n    function addTradingContract(address _trading) external onlyGov {\\n        // require(token.hasRole(MINTER_ROLE, _trading), \\\"NOT_MINTER\\\"); /// TODO : need to have a gtoken type token of our own\\n        require(_trading != address(0));\\n        isTradingContract[_trading] = true;\\n        emit TradingContractAdded(_trading);\\n    }\\n\\n    function removeTradingContract(address _trading) external onlyGov {\\n        require(_trading != address(0));\\n        isTradingContract[_trading] = false;\\n        emit TradingContractRemoved(_trading);\\n    }\\n\\n    function addSupportedToken(address _token) external onlyGov {\\n        require(_token != address(0));\\n        supportedTokens.push(_token);\\n        emit SupportedTokenAdded(_token);\\n    }\\n\\n    function setPriceAggregator(address _aggregator) external onlyGov {\\n        require(_aggregator != address(0));\\n        priceAggregator = AggregatorInterfaceV1(_aggregator);\\n        emit AddressUpdated(\\\"priceAggregator\\\", _aggregator);\\n    }\\n\\n    function setPool(address _pool) external onlyGov {\\n        require(_pool != address(0));\\n        pool = PoolInterfaceV5(_pool);\\n        emit AddressUpdated(\\\"pool\\\", _pool);\\n    }\\n\\n    function setVault(address _vault) external onlyGov {\\n        require(_vault != address(0));\\n        vault = _vault;\\n        emit AddressUpdated(\\\"vault\\\", _vault);\\n    }\\n\\n    function setTrading(address _trading) external onlyGov {\\n        require(_trading != address(0));\\n        trading = PausableInterfaceV5(_trading);\\n        emit AddressUpdated(\\\"trading\\\", _trading);\\n    }\\n\\n    function setCallbacks(address _callbacks) external onlyGov {\\n        require(_callbacks != address(0));\\n        callbacks = PausableInterfaceV5(_callbacks);\\n        emit AddressUpdated(\\\"callbacks\\\", _callbacks);\\n    }\\n\\n    function setTokenWETHRouter(address _tokenWETHRouter) external onlyGov {\\n        require(_tokenWETHRouter != address(0));\\n        tokenWETHRouter = _tokenWETHRouter;\\n        emit AddressUpdated(\\\"tokenWETHRouter\\\", _tokenWETHRouter);\\n    }\\n\\n    // Manage trading variables\\n    function setMaxTradesPerBlock(uint _maxTradesPerBlock) external onlyGov {\\n        require(_maxTradesPerBlock > 0);\\n        maxTradesPerBlock = _maxTradesPerBlock;\\n        emit NumberUpdated(\\\"maxTradesPerBlock\\\", _maxTradesPerBlock);\\n    }\\n\\n    function setMaxTradesPerPair(uint _maxTradesPerPair) external onlyGov {\\n        require(_maxTradesPerPair > 0);\\n        maxTradesPerPair = _maxTradesPerPair;\\n        emit NumberUpdated(\\\"maxTradesPerPair\\\", _maxTradesPerPair);\\n    }\\n\\n    function setMaxPendingMarketOrders(\\n        uint _maxPendingMarketOrders\\n    ) external onlyGov {\\n        require(_maxPendingMarketOrders > 0);\\n        maxPendingMarketOrders = _maxPendingMarketOrders;\\n        emit NumberUpdated(\\\"maxPendingMarketOrders\\\", _maxPendingMarketOrders);\\n    }\\n\\n    function setMaxGainP(uint _max) external onlyGov {\\n        require(_max >= 300);\\n        maxGainP = _max;\\n        emit NumberUpdated(\\\"maxGainP\\\", _max);\\n    }\\n\\n    function setDefaultLeverageUnlocked(uint _lev) external onlyGov {\\n        require(_lev > 0);\\n        defaultLeverageUnlocked = _lev;\\n        emit NumberUpdated(\\\"defaultLeverageUnlocked\\\", _lev);\\n    }\\n\\n    function setMaxSlP(uint _max) external onlyGov {\\n        require(_max >= 50);\\n        maxSlP = _max;\\n        emit NumberUpdated(\\\"maxSlP\\\", _max);\\n    }\\n\\n    function setNftSuccessTimelock(uint _blocks) external onlyGov {\\n        nftSuccessTimelock = _blocks;\\n        emit NumberUpdated(\\\"nftSuccessTimelock\\\", _blocks);\\n    }\\n\\n    function setSpreadReductionsP(uint[5] calldata _r) external onlyGov {\\n        require(\\n            _r[0] > 0 &&\\n                _r[1] > _r[0] &&\\n                _r[2] > _r[1] &&\\n                _r[3] > _r[2] &&\\n                _r[4] > _r[3]\\n        );\\n        spreadReductionsP = _r;\\n        emit SpreadReductionsUpdated(_r);\\n    }\\n\\n    function setMaxOpenInterestWETH(\\n        uint _pairIndex,\\n        uint _newMaxOpenInterest\\n    ) external onlyGov {\\n        // Can set max open interest to 0 to pause trading on this pair only\\n        openInterestWETH[_pairIndex][2] = _newMaxOpenInterest;\\n        emit NumberUpdatedPair(\\n            \\\"maxOpenInterestWETH\\\",\\n            _pairIndex,\\n            _newMaxOpenInterest\\n        );\\n    }\\n\\n    // Manage stored trades\\n    function storeTrade(\\n        Trade memory _trade,\\n        TradeInfo memory _tradeInfo\\n    ) external onlyTrading {\\n        _trade.index = firstEmptyTradeIndex(_trade.trader, _trade.pairIndex);\\n        openTrades[_trade.trader][_trade.pairIndex][_trade.index] = _trade;\\n\\n        openTradesCount[_trade.trader][_trade.pairIndex]++;\\n        tradesPerBlock[block.number]++;\\n\\n        if (openTradesCount[_trade.trader][_trade.pairIndex] == 1) {\\n            pairTradersId[_trade.trader][_trade.pairIndex] = pairTraders[\\n                _trade.pairIndex\\n            ].length;\\n            pairTraders[_trade.pairIndex].push(_trade.trader);\\n        }\\n\\n        _tradeInfo.beingMarketClosed = false;\\n        openTradesInfo[_trade.trader][_trade.pairIndex][\\n            _trade.index\\n        ] = _tradeInfo;\\n\\n        updateOpenInterestWETH(\\n            _trade.pairIndex,\\n            _tradeInfo.openInterestWETH,\\n            true,\\n            _trade.buy\\n        );\\n    }\\n\\n    function unregisterTrade(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external onlyTrading {\\n        Trade storage t = openTrades[trader][pairIndex][index];\\n        TradeInfo storage i = openTradesInfo[trader][pairIndex][index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n\\n        updateOpenInterestWETH(pairIndex, i.openInterestWETH, false, t.buy);\\n\\n        if (openTradesCount[trader][pairIndex] == 1) {\\n            uint _pairTradersId = pairTradersId[trader][pairIndex];\\n            address[] storage p = pairTraders[pairIndex];\\n\\n            p[_pairTradersId] = p[p.length - 1];\\n            pairTradersId[p[_pairTradersId]][pairIndex] = _pairTradersId;\\n\\n            delete pairTradersId[trader][pairIndex];\\n            p.pop();\\n        }\\n\\n        delete openTrades[trader][pairIndex][index];\\n        delete openTradesInfo[trader][pairIndex][index];\\n\\n        openTradesCount[trader][pairIndex]--;\\n        tradesPerBlock[block.number]++;\\n    }\\n\\n    // Manage pending market orders\\n    function storePendingMarketOrder(\\n        PendingMarketOrder memory _order,\\n        uint _id,\\n        bool _open\\n    ) external onlyTrading {\\n        pendingOrderIds[_order.trade.trader].push(_id);\\n\\n        reqID_pendingMarketOrder[_id] = _order;\\n        reqID_pendingMarketOrder[_id].block = block.number;\\n\\n        if (_open) {\\n            pendingMarketOpenCount[_order.trade.trader][\\n                _order.trade.pairIndex\\n            ]++;\\n        } else {\\n            pendingMarketCloseCount[_order.trade.trader][\\n                _order.trade.pairIndex\\n            ]++;\\n            openTradesInfo[_order.trade.trader][_order.trade.pairIndex][\\n                _order.trade.index\\n            ].beingMarketClosed = true;\\n        }\\n    }\\n\\n    function unregisterPendingMarketOrder(\\n        uint _id,\\n        bool _open\\n    ) external onlyTrading {\\n        PendingMarketOrder memory _order = reqID_pendingMarketOrder[_id];\\n        uint[] storage orderIds = pendingOrderIds[_order.trade.trader];\\n\\n        for (uint i = 0; i < orderIds.length; i++) {\\n            if (orderIds[i] == _id) {\\n                if (_open) {\\n                    pendingMarketOpenCount[_order.trade.trader][\\n                        _order.trade.pairIndex\\n                    ]--;\\n                } else {\\n                    pendingMarketCloseCount[_order.trade.trader][\\n                        _order.trade.pairIndex\\n                    ]--;\\n                    openTradesInfo[_order.trade.trader][_order.trade.pairIndex][\\n                        _order.trade.index\\n                    ].beingMarketClosed = false;\\n                }\\n\\n                orderIds[i] = orderIds[orderIds.length - 1];\\n                orderIds.pop();\\n\\n                delete reqID_pendingMarketOrder[_id];\\n                return;\\n            }\\n        }\\n    }\\n\\n    // Manage open interest\\n    function updateOpenInterestWETH(\\n        uint _pairIndex,\\n        uint _leveragedPosWETH,\\n        bool _open,\\n        bool _long\\n    ) private {\\n        uint index = _long ? 0 : 1;\\n        uint[3] storage o = openInterestWETH[_pairIndex];\\n        o[index] = _open\\n            ? o[index] + _leveragedPosWETH\\n            : o[index] - _leveragedPosWETH;\\n    }\\n\\n    // Manage open limit orders\\n    function storeOpenLimitOrder(OpenLimitOrder memory o) external onlyTrading {\\n        o.index = firstEmptyOpenLimitIndex(o.trader, o.pairIndex);\\n        o.block = block.number;\\n        openLimitOrders.push(o);\\n        openLimitOrderIds[o.trader][o.pairIndex][o.index] =\\n            openLimitOrders.length -\\n            1;\\n        openLimitOrdersCount[o.trader][o.pairIndex]++;\\n    }\\n\\n    function updateOpenLimitOrder(\\n        OpenLimitOrder calldata _o\\n    ) external onlyTrading {\\n        if (!hasOpenLimitOrder(_o.trader, _o.pairIndex, _o.index)) {\\n            return;\\n        }\\n        OpenLimitOrder storage o = openLimitOrders[\\n            openLimitOrderIds[_o.trader][_o.pairIndex][_o.index]\\n        ];\\n        o.positionSize = _o.positionSize;\\n        o.buy = _o.buy;\\n        o.leverage = _o.leverage;\\n        o.tp = _o.tp;\\n        o.sl = _o.sl;\\n        o.minPrice = _o.minPrice;\\n        o.maxPrice = _o.maxPrice;\\n        o.block = block.number;\\n    }\\n\\n    function unregisterOpenLimitOrder(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index\\n    ) external onlyTrading {\\n        if (!hasOpenLimitOrder(_trader, _pairIndex, _index)) {\\n            return;\\n        }\\n\\n        // Copy last order to deleted order => update id of this limit order\\n        uint id = openLimitOrderIds[_trader][_pairIndex][_index];\\n        openLimitOrders[id] = openLimitOrders[openLimitOrders.length - 1];\\n        openLimitOrderIds[openLimitOrders[id].trader][\\n            openLimitOrders[id].pairIndex\\n        ][openLimitOrders[id].index] = id;\\n\\n        // Remove\\n        delete openLimitOrderIds[_trader][_pairIndex][_index];\\n        openLimitOrders.pop();\\n\\n        openLimitOrdersCount[_trader][_pairIndex]--;\\n    }\\n\\n    // Manage NFT orders\\n    function storePendingNftOrder(\\n        PendingNftOrder memory _nftOrder,\\n        uint _orderId\\n    ) external onlyTrading {\\n        reqID_pendingNftOrder[_orderId] = _nftOrder;\\n    }\\n\\n    function unregisterPendingNftOrder(uint _order) external onlyTrading {\\n        delete reqID_pendingNftOrder[_order];\\n    }\\n\\n    // Manage open trade\\n    function updateSl(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index,\\n        uint _newSl\\n    ) external onlyTrading {\\n        Trade storage t = openTrades[_trader][_pairIndex][_index];\\n        TradeInfo storage i = openTradesInfo[_trader][_pairIndex][_index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n        t.sl = _newSl;\\n        i.slLastUpdated = block.number;\\n    }\\n\\n    function updateTp(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index,\\n        uint _newTp\\n    ) external onlyTrading {\\n        Trade storage t = openTrades[_trader][_pairIndex][_index];\\n        TradeInfo storage i = openTradesInfo[_trader][_pairIndex][_index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n        t.tp = _newTp;\\n        i.tpLastUpdated = block.number;\\n    }\\n\\n    function updateTrade(Trade memory _t) external onlyTrading {\\n        // useful when partial adding/closing\\n        Trade storage t = openTrades[_t.trader][_t.pairIndex][_t.index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n        t.initialPosToken = _t.initialPosToken;\\n        t.positionSizeWETH = _t.positionSizeWETH;\\n        t.openPrice = _t.openPrice;\\n        t.leverage = _t.leverage;\\n    }\\n\\n    // Manage referrals\\n    function storeReferral(\\n        address _trader,\\n        address _referral\\n    ) external onlyTrading {\\n        Trader storage trader = traders[_trader];\\n        trader.referral = _referral != address(0) &&\\n            trader.referral == address(0) &&\\n            _referral != _trader\\n            ? _referral\\n            : trader.referral;\\n    }\\n\\n    function increaseReferralRewards(\\n        address _referral,\\n        uint _amount\\n    ) external onlyTrading {\\n        traders[_referral].referralRewardsTotal += _amount;\\n    }\\n\\n    // Manage rewards\\n    function distributeLpRewards(uint _amount) external onlyTrading {\\n        pool.increaseAccTokensPerLp(_amount);\\n    }\\n\\n    function increaseNftRewards(\\n        uint _nftId,\\n        uint _amount\\n    ) external onlyTrading {\\n        nftLastSuccess[_nftId] = block.number;\\n        nftRewards += _amount;\\n    }\\n\\n    // Unlock next leverage\\n    function setLeverageUnlocked(\\n        address _trader,\\n        uint _newLeverage\\n    ) external onlyTrading {\\n        traders[_trader].leverageUnlocked = _newLeverage;\\n    }\\n\\n    // Manage dev & gov fees\\n    function handleDevGovFees(\\n        uint _pairIndex,\\n        uint _leveragedPositionSize,\\n        bool _WETH,\\n        bool _fullFee\\n    ) external onlyTrading returns (uint fee) {\\n        fee =\\n            (_leveragedPositionSize * priceAggregator.openFeeP(_pairIndex)) /\\n            PRECISION /\\n            100;\\n        if (!_fullFee) {\\n            fee /= 2;\\n        }\\n\\n        if (_WETH) {\\n            govFeesWETH += fee;\\n            devFeesWETH += fee;\\n        } else {\\n            govFeesToken += fee;\\n            devFeesToken += fee;\\n        }\\n\\n        fee *= 2;\\n    }\\n\\n    function claimFees() external onlyGov {\\n        token.mint(dev, devFeesToken);\\n        token.mint(gov, govFeesToken);\\n\\n        tokensMinted += devFeesToken + govFeesToken;\\n\\n        WETH.transfer(gov, govFeesWETH);\\n        WETH.transfer(dev, devFeesWETH);\\n\\n        devFeesToken = 0;\\n        govFeesToken = 0;\\n        devFeesWETH = 0;\\n        govFeesWETH = 0;\\n    }\\n\\n    // Manage tokens\\n    function handleTokens(\\n        address _a,\\n        uint _amount,\\n        bool _mint\\n    ) external onlyTrading {\\n        if (_mint) {\\n            token.mint(_a, _amount);\\n            tokensMinted += _amount;\\n        } else {\\n            token.burn(_a, _amount);\\n            tokensBurned += _amount;\\n        }\\n    }\\n\\n    function transferWETH(\\n        address _from,\\n        address _to,\\n        uint _amount\\n    ) external onlyTrading {\\n        if (_from == address(this)) {\\n            WETH.transfer(_to, _amount);\\n        } else {\\n            WETH.transferFrom(_from, _to, _amount);\\n        }\\n    }\\n\\n    function mintWETH(address _to, uint _amount) external onlyTrading {\\n        WETH.mint(_to, _amount);\\n    }\\n\\n    function transferLinkToAggregator(\\n        address _from,\\n        uint _pairIndex,\\n        uint _leveragedPosWETH\\n    ) external onlyTrading {\\n        linkErc677.transferFrom(\\n            _from,\\n            address(priceAggregator),\\n            priceAggregator.linkFee(_pairIndex, _leveragedPosWETH)\\n        );\\n    }\\n\\n    // View utils functions\\n    function firstEmptyTradeIndex(\\n        address trader,\\n        uint pairIndex\\n    ) public view returns (uint index) {\\n        for (uint i = 0; i < maxTradesPerPair; i++) {\\n            if (openTrades[trader][pairIndex][i].leverage == 0) {\\n                index = i;\\n                break;\\n            }\\n        }\\n    }\\n\\n    function firstEmptyOpenLimitIndex(\\n        address trader,\\n        uint pairIndex\\n    ) public view returns (uint index) {\\n        for (uint i = 0; i < maxTradesPerPair; i++) {\\n            if (!hasOpenLimitOrder(trader, pairIndex, i)) {\\n                index = i;\\n                break;\\n            }\\n        }\\n    }\\n\\n    function hasOpenLimitOrder(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) public view returns (bool) {\\n        if (openLimitOrders.length == 0) {\\n            return false;\\n        }\\n        OpenLimitOrder storage o = openLimitOrders[\\n            openLimitOrderIds[trader][pairIndex][index]\\n        ];\\n        return\\n            o.trader == trader && o.pairIndex == pairIndex && o.index == index;\\n    }\\n\\n    // Additional getters\\n    function getReferral(address _trader) external view returns (address) {\\n        return traders[_trader].referral;\\n    }\\n\\n    function getLeverageUnlocked(address _trader) external view returns (uint) {\\n        return traders[_trader].leverageUnlocked;\\n    }\\n\\n    function pairTradersArray(\\n        uint _pairIndex\\n    ) external view returns (address[] memory) {\\n        return pairTraders[_pairIndex];\\n    }\\n\\n    function getPendingOrderIds(\\n        address _trader\\n    ) external view returns (uint[] memory) {\\n        return pendingOrderIds[_trader];\\n    }\\n\\n    function pendingOrderIdsCount(\\n        address _trader\\n    ) external view returns (uint) {\\n        return pendingOrderIds[_trader].length;\\n    }\\n\\n    function getOpenLimitOrder(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index\\n    ) external view returns (OpenLimitOrder memory) {\\n        require(hasOpenLimitOrder(_trader, _pairIndex, _index));\\n        return openLimitOrders[openLimitOrderIds[_trader][_pairIndex][_index]];\\n    }\\n\\n    function getOpenLimitOrders()\\n        external\\n        view\\n        returns (OpenLimitOrder[] memory)\\n    {\\n        return openLimitOrders;\\n    }\\n\\n    function getSupportedTokens() external view returns (address[] memory) {\\n        return supportedTokens;\\n    }\\n\\n    function getSpreadReductionsArray() external view returns (uint[5] memory) {\\n        return spreadReductionsP;\\n    }\\n\\n    function getGov() external view returns (address _gov) {\\n        return gov;\\n    }\\n\\n    function setOracle(address _oracle) external {\\n        oracle = IOracle(_oracle);\\n    }\\n}\\n\",\"keccak256\":\"0x517ef79385a80b76311b67ca9586d86de47edfacaea5c4e0973a41d5facbf1d1\",\"license\":\"MIT\"},\"contracts/interfaces/AggregatorInterfaceV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\nimport \\\"./StorageInterface.sol\\\";\\n\\ninterface AggregatorInterfaceV1 {\\n    enum OrderType {\\n        MARKET_OPEN,\\n        MARKET_CLOSE,\\n        LIMIT_OPEN,\\n        LIMIT_CLOSE\\n    }\\n\\n    function getPrice(uint, OrderType, uint) external returns (uint);\\n\\n    function tokenPriceWETH() external view returns (uint);\\n\\n    function pairMinOpenLimitSlippageP(uint) external view returns (uint);\\n\\n    function closeFeeP(uint) external view returns (uint);\\n\\n    function linkFee(uint, uint) external view returns (uint);\\n\\n    function openFeeP(uint) external view returns (uint);\\n\\n    function pairMinLeverage(uint) external view returns (uint);\\n\\n    function pairMaxLeverage(uint) external view returns (uint);\\n\\n    function pairsCount() external view returns (uint);\\n\\n    function tokenWETHReservesLp() external view returns (uint, uint);\\n\\n    function referralP(uint) external view returns (uint);\\n\\n    function nftLimitOrderFeeP(uint) external view returns (uint);\\n\\n    function mfulfill(\\n        uint256 orderId,\\n        StorageInterface.PendingMarketOrder memory o\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa0e7b95a472d54b2d2c44b5fd07e16295b7d112c35657660585aa4514ecef48f\",\"license\":\"MIT\"},\"contracts/interfaces/AggregatorInterfaceV1_4.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"./PairsStorageInterfaceV6.sol\\\";\\nimport \\\"./ChainlinkFeedInterface.sol\\\";\\nimport \\\"./StorageInterface.sol\\\";\\n\\ninterface AggregatorInterfaceV1_4 {\\n    enum OrderType {\\n        MARKET_OPEN,\\n        MARKET_CLOSE,\\n        LIMIT_OPEN,\\n        LIMIT_CLOSE\\n    }\\n\\n    function pairsStorage() external view returns (PairsStorageInterfaceV6);\\n\\n    function getPrice(uint, OrderType, uint, uint) external returns (uint);\\n\\n    function tokenPriceWETH() external returns (uint);\\n\\n    function linkFee(uint, uint) external view returns (uint);\\n\\n    function openFeeP(uint) external view returns (uint);\\n\\n    function linkPriceFeed() external view returns (ChainlinkFeedInterface);\\n\\n    function mfulfill(\\n        uint256 orderId,\\n        StorageInterface.PendingMarketOrder memory o\\n    ) external;\\n}\\n\",\"keccak256\":\"0xe828a3e9a19631acb3d710af46efcdb2b5c0e0e85e36fca06421f6d5b023051e\",\"license\":\"MIT\"},\"contracts/interfaces/ChainlinkFeedInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface ChainlinkFeedInterface {\\n    function latestRoundData()\\n        external\\n        view\\n        returns (uint80, int, uint, uint, uint80);\\n}\\n\",\"keccak256\":\"0x7e5147b0611f9d8ae4e6447c75c65f9c7274f2eba120a69abd5bcad9e0d99189\",\"license\":\"MIT\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface IOracle {\\n    function getPrice(\\n        uint256 tokenIndex\\n    ) external view returns (uint256 price, uint256 lastupdateTime);\\n}\\n\",\"keccak256\":\"0xfb20b75eff21c1c17c39a6f962490a2f70b79e8427f625c852262c39907a78a4\",\"license\":\"MIT\"},\"contracts/interfaces/IToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface IToken {\\n    function manager() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function currentEpoch() external view returns (uint);\\n\\n    function currentEpochStart() external view returns (uint);\\n\\n    function currentEpochPositiveOpenPnl() external view returns (uint);\\n\\n    function updateAccPnlPerTokenUsed(\\n        uint prevPositiveOpenPnl,\\n        uint newPositiveOpenPnl\\n    ) external returns (uint);\\n\\n    struct LockedDeposit {\\n        address owner;\\n        uint shares; // 1e18\\n        uint assetsDeposited; // 1e18\\n        uint assetsDiscount; // 1e18\\n        uint atTimestamp; // timestamp\\n        uint lockDuration; // timestamp\\n    }\\n\\n    function getLockedDeposit(\\n        uint depositId\\n    ) external view returns (LockedDeposit memory);\\n\\n    function sendAssets(uint assets, address receiver) external;\\n\\n    function receiveAssets(uint assets, address user) external;\\n\\n    function distributeReward(uint assets) external;\\n\\n    function currentBalanceWETH() external view returns (uint);\\n\\n    function tvl() external view returns (uint);\\n\\n    function marketCap() external view returns (uint);\\n\\n    function getPendingAccBlockWeightedMarketCap(\\n        uint currentBlock\\n    ) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xa203a16609a3f4479f4c276334d6731350d81ccd2e07e8e4d1e38028d702d76f\",\"license\":\"MIT\"},\"contracts/interfaces/NftInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface NftInterfaceV5 {\\n    function balanceOf(address) external view returns (uint);\\n\\n    function ownerOf(uint) external view returns (address);\\n\\n    function transferFrom(address, address, uint) external;\\n\\n    function tokenOfOwnerByIndex(address, uint) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xb2fa75a1891441870ad9e7ebaec3b828113cb231cba760d31e175233850efceb\",\"license\":\"MIT\"},\"contracts/interfaces/PairsStorageInterfaceV6.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface PairsStorageInterfaceV6 {\\n    enum FeedCalculation {\\n        DEFAULT,\\n        INVERT,\\n        COMBINE\\n    } // FEED 1, 1 / (FEED 1), (FEED 1)/(FEED 2)\\n    struct Feed {\\n        address feed1;\\n        address feed2;\\n        FeedCalculation feedCalculation;\\n        uint maxDeviationP;\\n    } // PRECISION (%)\\n\\n    function incrementCurrentOrderId() external returns (uint);\\n\\n    function updateGroupCollateral(uint, uint, bool, bool) external;\\n\\n    function pairJob(\\n        uint\\n    ) external returns (string memory, string memory, bytes32, uint);\\n\\n    function pairFeed(uint) external view returns (Feed memory);\\n\\n    function pairSpreadP(uint) external view returns (uint);\\n\\n    function pairMinLeverage(uint) external view returns (uint);\\n\\n    function pairMaxLeverage(uint) external view returns (uint);\\n\\n    function groupMaxCollateral(uint) external view returns (uint);\\n\\n    function groupCollateral(uint, bool) external view returns (uint);\\n\\n    function guaranteedSlEnabled(uint) external view returns (bool);\\n\\n    function pairOpenFeeP(uint) external view returns (uint);\\n\\n    function pairCloseFeeP(uint) external view returns (uint);\\n\\n    function pairOracleFeeP(uint) external view returns (uint);\\n\\n    function pairNftLimitOrderFeeP(uint) external view returns (uint);\\n\\n    function pairReferralFeeP(uint) external view returns (uint);\\n\\n    function pairMinLevPosWETH(uint) external view returns (uint);\\n\\n    function pairsCount() external view returns (uint);\\n}\\n\",\"keccak256\":\"0x58654c006d22c41b610ba226e895483efb9caf61604472b2e9b80c4e45259bf1\",\"license\":\"MIT\"},\"contracts/interfaces/PausableInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface PausableInterfaceV5 {\\n    function isPaused() external view returns (bool);\\n}\\n\",\"keccak256\":\"0x08a9ce91f92cec10768ce808b4eee54165807bddb606528192755ac0655d0a71\",\"license\":\"MIT\"},\"contracts/interfaces/PoolInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface PoolInterfaceV5 {\\n    function increaseAccTokensPerLp(uint) external;\\n}\\n\",\"keccak256\":\"0x3bf8f4ca95ac3186290b630dd1e83b14e171a311e01d9700d407f80d7cabac81\",\"license\":\"MIT\"},\"contracts/interfaces/StorageInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"./TokenInterface.sol\\\";\\nimport \\\"./NftInterfaceV5.sol\\\";\\nimport \\\"./IToken.sol\\\";\\nimport \\\"./AggregatorInterfaceV1_4.sol\\\";\\nimport \\\"./IOracle.sol\\\";\\n\\ninterface StorageInterface {\\n    enum LimitOrder {\\n        TP,\\n        SL,\\n        LIQ,\\n        OPEN\\n    }\\n    struct Trade {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint initialPosToken; // 1e18\\n        uint positionSizeWETH; // 1e18\\n        uint openPrice; // PRECISION\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION\\n        uint sl; // PRECISION\\n    }\\n    struct TradeInfo {\\n        uint tokenId;\\n        uint tokenPriceWETH; // PRECISION\\n        uint openInterestWETH; // 1e18\\n        uint tpLastUpdated;\\n        uint slLastUpdated;\\n        bool beingMarketClosed;\\n    }\\n    struct OpenLimitOrder {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint positionSize; // 1e18 (WETH or GFARM2)\\n        uint spreadReductionP;\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION (%)\\n        uint sl; // PRECISION (%)\\n        uint minPrice; // PRECISION\\n        uint maxPrice; // PRECISION\\n        uint block;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingMarketOrder {\\n        Trade trade;\\n        uint block;\\n        uint wantedPrice; // PRECISION\\n        uint slippageP; // PRECISION (%)\\n        uint spreadReductionP;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingNftOrder {\\n        address nftHolder;\\n        uint nftId;\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        LimitOrder orderType;\\n    }\\n\\n    function PRECISION() external pure returns (uint);\\n\\n    function gov() external view returns (address);\\n\\n    function dev() external view returns (address);\\n\\n    function WETH() external view returns (TokenInterface);\\n\\n    function token() external view returns (TokenInterface);\\n\\n    function linkErc677() external view returns (TokenInterface);\\n\\n    function priceAggregator() external view returns (AggregatorInterfaceV1_4);\\n\\n    function vault() external view returns (IToken);\\n\\n    function trading() external view returns (address);\\n\\n    function callbacks() external view returns (address);\\n\\n    function handleTokens(address, uint, bool) external;\\n\\n    function transferWETH(address, address, uint) external;\\n\\n    function transferLinkToAggregator(address, uint, uint) external;\\n\\n    function unregisterTrade(address, uint, uint) external;\\n\\n    function unregisterPendingMarketOrder(uint, bool) external;\\n\\n    function unregisterOpenLimitOrder(address, uint, uint) external;\\n\\n    function hasOpenLimitOrder(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (bool);\\n\\n    function storePendingMarketOrder(\\n        PendingMarketOrder memory,\\n        uint,\\n        bool\\n    ) external;\\n\\n    function openTrades(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (Trade memory);\\n\\n    function openTradesInfo(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (TradeInfo memory);\\n\\n    function updateSl(address, uint, uint, uint) external;\\n\\n    function updateTp(address, uint, uint, uint) external;\\n\\n    function getOpenLimitOrder(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (OpenLimitOrder memory);\\n\\n    function spreadReductionsP(uint) external view returns (uint);\\n\\n    function storeOpenLimitOrder(OpenLimitOrder memory) external;\\n\\n    function reqID_pendingMarketOrder(\\n        uint\\n    ) external view returns (PendingMarketOrder memory);\\n\\n    function storePendingNftOrder(PendingNftOrder memory, uint) external;\\n\\n    function updateOpenLimitOrder(OpenLimitOrder calldata) external;\\n\\n    function firstEmptyTradeIndex(address, uint) external view returns (uint);\\n\\n    function firstEmptyOpenLimitIndex(\\n        address,\\n        uint\\n    ) external view returns (uint);\\n\\n    function increaseNftRewards(uint, uint) external;\\n\\n    function nftSuccessTimelock() external view returns (uint);\\n\\n    function reqID_pendingNftOrder(\\n        uint\\n    ) external view returns (PendingNftOrder memory);\\n\\n    function updateTrade(Trade memory) external;\\n\\n    function nftLastSuccess(uint) external view returns (uint);\\n\\n    function unregisterPendingNftOrder(uint) external;\\n\\n    function handleDevGovFees(uint, uint, bool, bool) external returns (uint);\\n\\n    function distributeLpRewards(uint) external;\\n\\n    function storeTrade(Trade memory, TradeInfo memory) external;\\n\\n    function openLimitOrdersCount(address, uint) external view returns (uint);\\n\\n    function openTradesCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketOpenCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketCloseCount(\\n        address,\\n        uint\\n    ) external view returns (uint);\\n\\n    function maxTradesPerPair() external view returns (uint);\\n\\n    function pendingOrderIdsCount(address) external view returns (uint);\\n\\n    function maxPendingMarketOrders() external view returns (uint);\\n\\n    function openInterestWETH(uint, uint) external view returns (uint);\\n\\n    function getPendingOrderIds(address) external view returns (uint[] memory);\\n\\n    function nfts(uint) external view returns (NftInterfaceV5);\\n\\n    function fakeBlockNumber() external view returns (uint); // Testing\\n\\n    function getGov() external view returns (address); // checking\\n\\n    function mintWETH(address _to, uint _amount) external;\\n\\n    function oracle() external returns (IOracle);\\n}\\n\",\"keccak256\":\"0xfc18f7e6a179bb1f82916b2b8e1a33946209b9079bb9996ec8ffd80e827f60b7\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface TokenInterface {\\n    function burn(address, uint256) external;\\n\\n    function mint(address, uint256) external;\\n\\n    function transfer(address, uint256) external returns (bool);\\n\\n    function transferFrom(address, address, uint256) external returns (bool);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function hasRole(bytes32, address) external view returns (bool);\\n\\n    function approve(address, uint256) external returns (bool);\\n\\n    function allowance(address, address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe17da6c44e61e84ecbc9653dffeb3c4bf6ed43743256f1eaf1743b7903843dae\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x600680546001600160a01b031916737075cab6bcca06613e2d071bd918d1a0241379e217905561012060405273f9a4c522e327935bd1f5a338c121e14e4cc1f89860809081527377cd42b925e1a82f41d852d6be727cfc88fddbbc60a052733378ad81d09de23725ee9b9270635c97ed60192160c0527302e2c5825c1a3b69c0417706dbe1327c2af3e6c260e052732d266a94469d05c9e06d52a4d0d9c23b157767c261010052620000b69060079060056200018b565b506003600e556005600f818155601082905561038460115560506012556032601381905560149081556040805160a0810182529283526020830191909152601990820152601e606082015260236080820152620001179160159190620001e8565b503480156200012557600080fd5b50604051620050aa380380620050aa833981016040819052620001489162000252565b600080546001600160a01b039485166001600160a01b031991821617909155601a805493851693821693909317909255601b80549190931691161790556200029c565b8260058101928215620001d6579160200282015b82811115620001d657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200019f565b50620001e49291506200021e565b5090565b8260058101928215620001d6579160200282015b82811115620001d6578251829060ff16905591602001919060010190620001fc565b5b80821115620001e457600081556001016200021f565b80516001600160a01b03811681146200024d57600080fd5b919050565b6000806000606084860312156200026857600080fd5b620002738462000235565b9250620002836020850162000235565b9150620002936040850162000235565b90509250925092565b614dfe80620002ac6000396000f3fe608060405234801561001057600080fd5b50600436106105b35760003560e01c806391cca3db116102f1578063d294f09311610193578063ec44acf2116100ef578063f823e2ae1161009d578063f823e2ae14611139578063f8d24b481461114c578063fbfa77cf14611155578063fc0c546a14611168578063fdb594131461117b578063fe0fc8d614611184578063fece4eac1461119757600080fd5b8063ec44acf214611094578063ecf56a1f146110a7578063eda00d54146110ba578063ee92a4ff146110eb578063f013d278146110f4578063f65d9dbe14611107578063f7b3c6fd1461111057600080fd5b8063dc2123ff1161014c578063dc2123ff14611019578063dcdf339a1461102c578063e212991a1461103f578063e3cbe3a714611052578063e3f04eba14611065578063e765540314611078578063e7873b581461108b57600080fd5b8063d294f09314610fa9578063d3b5fe7014610fb1578063d3c7c2c714610fc4578063d477f05f14610fcc578063d4bda90814610fdf578063d539139314610ff257600080fd5b8063ad5c46481161024d578063c122fea6116101fb578063c122fea614610f2e578063c311ab3114610f37578063c625562614610f4a578063c76faf7814610f5d578063cab9458014610f70578063cfad57a214610f83578063cfbacc1414610f9657600080fd5b8063ad5c464814610dc5578063b4b0f56714610dd8578063b66e6b0514610deb578063b767608a14610ebd578063b7682d5414610ed0578063b8878a2c14610efb578063bcc9f1d314610f1b57600080fd5b80639d1a1073116102aa5780639d1a107314610c7b578063a2ab2dee14610c8e578063a354418114610c9f578063a3a80ffe14610cb2578063a553906c14610d86578063aa3b7d7714610d99578063aaf5eb6814610db957600080fd5b806391cca3db14610b4a57806392a88fa214610b5d578063959509e414610bb857806397e7995a14610bc157806399794d3514610bec5780639c8912f114610c5057600080fd5b80635a9125511161045a578063796d82d9116103b6578063878679e611610364578063878679e614610a5a5780638a0bd70214610a6d5780638a238ae514610a825780638bbb644c14610a955780638bf7f5f914610a9e5780638c8ff1d514610ab157806390d112b914610b3757600080fd5b8063796d82d9146109cc5780637ad3def2146109d55780637adbf973146109e85780637dc0d1d014610a185780637fdb96f314610a2b5780638049fde714610a3e578063817fa1a414610a4757600080fd5b80636817031b116104135780636817031b1461091b57806368ca199d1461092e5780636d69fcaf146109575780636d81d9811461096a5780636de9f32b1461099d5780637395d79e146109a657806377a9fdcf146109b957600080fd5b80635a912551146108a35780635ad9f993146108ac5780635b621e32146108b55780635c76ac9e146108c85780635fbfe8cc146108e85780636690a8061461090857600080fd5b8063292c1617116105145780634415b369116104c25780634415b369146107f75780634437152a1461082257806344d44f5a146108355780635070e8371461084857806352e5398f1461085b5780635378143e1461087b57806356a6796f1461088e57600080fd5b8063292c1617146106f45780632d1f941a146107075780633078fff51461071057806332149592146107235780633b0f0f2f146107a25780633dae10a0146107d157806343b8fab5146107e457600080fd5b8063145ed21c11610571578063145ed21c1461064957806316f0115b1461065c5780631c8636b41461066f578063201d8bdb146106a857806321f7a30b146106bb578063265aa621146106ce57806328b1f887146106e157600080fd5b8062b12783146105b857806306aef7de146105e8578063099fa934146105fd5780630eee3e4a1461061057806312d43a511461062357806313b36ff614610636575b600080fd5b6005546105cb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6105fb6105f6366004614331565b6111b2565b005b6105fb61060b3660046143b8565b611225565b6105fb61061e3660046143d1565b61128d565b601a546105cb906001600160a01b031681565b6105fb6106443660046143b8565b611321565b6105fb610657366004614403565b61138c565b6003546105cb906001600160a01b031681565b61069a61067d366004614420565b602760209081526000928352604080842090915290825290205481565b6040519081526020016105df565b6105fb6106b63660046143b8565b61141c565b6105fb6106c9366004614420565b611484565b6105cb6106dc3660046143b8565b6114d4565b6105fb6106ef366004614420565b6114f4565b61069a610702366004614420565b61152c565b61069a601d5481565b6002546105cb906001600160a01b031681565b6107366107313660046143b8565b611590565b604080516001600160a01b03909e168e5260208e019c909c529a8c019990995260608b019790975260808a019590955292151560a089015260c088019190915260e08701526101008601526101208501526101408401526101608301526101808201526101a0016105df565b6105cb6107b0366004614403565b6001600160a01b039081166000908152602460205260409020600101541690565b61069a6107df3660046143b8565b611617565b6105fb6107f23660046143b8565b61162e565b61069a610805366004614420565b603160209081526000928352604080842090915290825290205481565b6105fb610830366004614403565b6116a6565b61069a610843366004614420565b61172b565b6105fb610856366004614403565b611762565b61069a6108693660046143b8565b60336020526000908152604090205481565b6105fb610889366004614465565b6117f2565b610896611916565b6040516105df91906144a7565b61069a60125481565b61069a60225481565b6105fb6108c3366004614403565b611952565b6108db6108d6366004614403565b6119cd565b6040516105df91906144d8565b6108fb6108f63660046143b8565b611a39565b6040516105df919061451c565b6105fb61091636600461455d565b611aa4565b6105fb610929366004614403565b611bd1565b61069a61093c366004614403565b6001600160a01b031660009081526024602052604090205490565b6105fb610965366004614403565b611c57565b61098d610978366004614403565b60356020526000908152604090205460ff1681565b60405190151581526020016105df565b61069a60215481565b6105fb6109b43660046143d1565b611cff565b61069a6109c73660046143d1565b611d3e565b61069a600f5481565b6105fb6109e3366004614403565b611d63565b6105fb6109f6366004614403565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546105cb906001600160a01b031681565b6105fb610a39366004614592565b611f0f565b61069a60105481565b6105fb610a553660046145cd565b611f98565b600d546105cb906001600160a01b031681565b610a75612050565b6040516105df91906146f2565b6105fb610a90366004614735565b61213f565b61069a60135481565b6105fb610aac3660046143b8565b6121de565b610b08610abf36600461455d565b6026602090815260009384526040808520825292845282842090528252902080546001820154600283015460038401546004850154600590950154939492939192909160ff1686565b6040805196875260208701959095529385019290925260608401526080830152151560a082015260c0016105df565b6105fb610b4536600461455d565b612250565b601b546105cb906001600160a01b031681565b610b95610b6b366004614403565b60246020526000908152604090208054600182015460029092015490916001600160a01b03169083565b604080519384526001600160a01b039092166020840152908201526060016105df565b61069a601f5481565b61069a610bcf366004614420565b602960209081526000928352604080842090915290825290205481565b610c3e610bfa3660046143b8565b602c602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695939490921692909160ff1686565b6040516105df9695949392919061478c565b61069a610c5e366004614420565b602e60209081526000928352604080842090915290825290205481565b6105fb610c893660046147e8565b612558565b601a546001600160a01b03166105cb565b6105fb610cad366004614592565b612607565b610d30610cc036600461455d565b602560209081526000938452604080852082529284528284209052825290208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b03909816989697959694959394929360ff9092169290918a565b604080516001600160a01b03909b168b5260208b0199909952978901969096526060880194909452608087019290925260a0860152151560c085015260e0840152610100830152610120820152610140016105df565b6105fb610d94366004614403565b612690565b61069a610da73660046143b8565b60346020526000908152604090205481565b61069a6402540be40081565b6000546105cb906001600160a01b031681565b6105fb610de636600461455d565b612718565b610eab610df93660046143b8565b602b6020908152600091825260409182902082516101408101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460ff16151560c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154600b830154600c840154600d850154600e90950154939492939192909186565b6040516105df96959493929190614821565b6105fb610ecb3660046148c7565b612a11565b61069a610ede366004614420565b602f60209081526000928352604080842090915290825290205481565b610f0e610f0936600461455d565b612b2d565b6040516105df91906148e0565b61069a610f29366004614420565b612cb1565b61069a60115481565b6105fb610f45366004614988565b612ce2565b6105cb610f583660046143b8565b612f40565b6105fb610f6b366004614a18565b612f6a565b6105fb610f7e366004614aaa565b61313a565b6105fb610f91366004614403565b61342a565b61069a610fa4366004614acf565b6134ae565b6105fb6135f5565b6105fb610fbf366004614b19565b613811565b6108fb613b14565b6105fb610fda366004614403565b613b75565b6105fb610fed366004614bcc565b613bf9565b61069a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6105fb6110273660046143b8565b613c83565b61098d61103a36600461455d565b613cf4565b6105fb61104d3660046143b8565b613d90565b6105cb6110603660046143d1565b613df6565b6105fb6110733660046143b8565b613e2e565b6105fb611086366004614420565b613ea4565b61069a60205481565b6004546105cb906001600160a01b031681565b6105fb6110b53660046143b8565b613f28565b61069a6110c836600461455d565b602860209081526000938452604080852082529284528284209052825290205481565b61069a601c5481565b6105fb611102366004614be9565b613f9f565b61069a600e5481565b61069a61111e366004614403565b6001600160a01b03166000908152602d602052604090205490565b6105fb611147366004614403565b614049565b61069a60145481565b600c546105cb906001600160a01b031681565b6006546105cb906001600160a01b031681565b61069a601e5481565b6105fb611192366004614403565b6140c7565b6105cb73b0897686c545045afc77cf20ec7a532e3120e0f181565b601a546001600160a01b031633146111c957600080fd5b80516001600160a01b03166111dd57600080fd5b6111ea60078260056141dc565b507f89a3bfeda71ede5f8735aa09127c97cd56aa3803356c52f7c30caf418238b4648160405161121a9190614c21565b60405180910390a150565b601a546001600160a01b0316331461123c57600080fd5b603281101561124a57600080fd5b6012819055604080518181526006918101919091526506d6178536c560d41b606082015260208101829052600080516020614d898339815191529060800161121a565b601a546001600160a01b031633146112a457600080fd5b6000828152603260205260409020819060020155604080516060808252601390820152720dac2f09ee0cadc92dce8cae4cae6e8ae8aa89606b1b6080820152602081018490529081018290527f957cd67ea49f3e1ee953cdd23a1ba1f11d973e842411220d5c24ef0e24e1c9569060a00160405180910390a15050565b601a546001600160a01b0316331461133857600080fd5b61012c81101561134757600080fd5b6011819055604080518181526008918101919091526706d61784761696e560c41b606082015260208101829052600080516020614d898339815191529060800161121a565b601a546001600160a01b031633146113a357600080fd5b6001600160a01b0381166113b657600080fd5b600d80546001600160a01b0319166001600160a01b03831690811790915560408051818152600f918101919091526e3a37b5b2b72ba2aa242937baba32b960891b60608201526020810191909152600080516020614da98339815191529060800161121a565b3360009081526035602052604090205460ff1661143857600080fd5b6000908152602c6020526040812080546001600160a01b03199081168255600182018390556002820180549091169055600381018290556004810191909155600501805460ff19169055565b3360009081526035602052604090205460ff166114a057600080fd5b6001600160a01b038216600090815260246020526040812060020180548392906114cb908490614c68565b90915550505050565b600781600581106114e457600080fd5b01546001600160a01b0316905081565b3360009081526035602052604090205460ff1661151057600080fd5b6001600160a01b03909116600090815260246020526040902055565b6000805b600e54811015611589576001600160a01b03841660009081526025602090815260408083208684528252808320848452909152812060070154900361157757809150611589565b8061158181614c7b565b915050611530565b5092915050565b602a81815481106115a057600080fd5b60009182526020909120600d9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b8c0154600c909c01546001600160a01b03909b169c50989a97999698959760ff90951696939592949193909291908d565b6015816005811061162757600080fd5b0154905081565b601a546001600160a01b0316331461164557600080fd5b6000811161165257600080fd5b60138190556040805181815260179181019190915276191959985d5b1d13195d995c9859d9555b9b1bd8dad959604a1b606082015260208101829052600080516020614d898339815191529060800161121a565b601a546001600160a01b031633146116bd57600080fd5b6001600160a01b0381166116d057600080fd5b600380546001600160a01b0319166001600160a01b03831690811790915560408051818152600491810191909152631c1bdbdb60e21b60608201526020810191909152600080516020614da98339815191529060800161121a565b6000805b600e5481101561158957611744848483613cf4565b61175057809150611589565b8061175a81614c7b565b91505061172f565b601a546001600160a01b0316331461177957600080fd5b6001600160a01b03811661178c57600080fd5b600280546001600160a01b0319166001600160a01b03831690811790915560408051818152600f918101919091526e383934b1b2a0b3b3b932b3b0ba37b960891b60608201526020810191909152600080516020614da98339815191529060800161121a565b3360009081526035602052604090205460ff1661180e57600080fd5b8015611895576006546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906118469086908690600401614c94565b600060405180830381600087803b15801561186057600080fd5b505af1158015611874573d6000803e3d6000fd5b50505050816021600082825461188a9190614c68565b909155506119119050565b600654604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906118c79086908690600401614c94565b600060405180830381600087803b1580156118e157600080fd5b505af11580156118f5573d6000803e3d6000fd5b50505050816020600082825461190b9190614c68565b90915550505b505050565b61191e614234565b6040805160a08101918290529060159060059082845b815481526020019060010190808311611934575b5050505050905090565b601a546001600160a01b0316331461196957600080fd5b6001600160a01b03811661197c57600080fd5b6001600160a01b038116600081815260356020908152604091829020805460ff1916905590519182527ff9cf924d7d98e6e0a27ec523cd7214b0bbdfaba197018b33b41a702f5238190e910161121a565b6001600160a01b0381166000908152602d6020908152604091829020805483518184028101840190945280845260609392830182828015611a2d57602002820191906000526020600020905b815481526020019060010190808311611a19575b50505050509050919050565b600081815260306020908152604091829020805483518184028101840190945280845260609392830182828015611a2d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a7b5750505050509050919050565b3360009081526035602052604090205460ff16611ac057600080fd5b60025460405163b9e0336f60e01b8152600481018490526024810183905273b0897686c545045afc77cf20ec7a532e3120e0f1916323b872dd9186916001600160a01b031690819063b9e0336f90604401602060405180830381865afa158015611b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b529190614cad565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b6020604051808303816000875af1158015611ba7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bcb9190614cc6565b50505050565b601a546001600160a01b03163314611be857600080fd5b6001600160a01b038116611bfb57600080fd5b600c80546001600160a01b0319166001600160a01b03831690811790915560408051818152600591810191909152641d985d5b1d60da1b60608201526020810191909152600080516020614da98339815191529060800161121a565b601a546001600160a01b03163314611c6e57600080fd5b6001600160a01b038116611c8157600080fd5b602380546001810182556000919091527fd57b2b5166478fd4318d2acc6cc2c704584312bdd8781b32d5d06abda57f42300180546001600160a01b0319166001600160a01b0383169081179091556040519081527fd1be2e90bd3d24839d9dd94ad871068e1f9688b02fa43f2a62c9975dfa9de2d79060200161121a565b3360009081526035602052604090205460ff16611d1b57600080fd5b6000828152603460205260408120439055602280548392906114cb908490614c68565b60326020528160005260406000208160038110611d5a57600080fd5b01549150829050565b601a546001600160a01b03163314611d7a57600080fd5b60048054604080516358c3de9360e11b815290516001600160a01b039092169263b187bd269282820192602092908290030181865afa158015611dc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de59190614cc6565b8015611e635750600560009054906101000a90046001600160a01b03166001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e639190614cc6565b611ea05760405162461bcd60e51b815260206004820152600a6024820152691393d517d4105554d15160b21b604482015260640160405180910390fd5b6001600160a01b038116611eb357600080fd5b600680546001600160a01b0319166001600160a01b03831690811790915560408051818152600591810191909152643a37b5b2b760d91b60608201526020810191909152600080516020614da98339815191529060800161121a565b3360009081526035602052604090205460ff16611f2b57600080fd5b6001600160a01b03841660008181526025602090815260408083208784528252808320868452825280832093835260268252808320878452825280832086845290915281206007830154909103611f83575050611bcb565b60089091018290554360039091015550505050565b3360009081526035602052604090205460ff16611fb457600080fd5b6000818152602c6020908152604091829020845181546001600160a01b03199081166001600160a01b03928316178355928601516001808401919091559386015160028301805490941691161790915560608401516003808301919091556080850151600483015560a085015160058301805487959293919260ff1990911691849081111561204557612045614776565b021790555050505050565b6060602a805480602002602001604051908101604052809291908181526020016000905b82821015612136576000848152602090819020604080516101a081018252600d860290920180546001600160a01b03168352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460ff16151560a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610120840152600a810154610140840152600b810154610160840152600c01546101808301529083529092019101612074565b50505050905090565b3360009081526035602052604090205460ff1661215b57600080fd5b306001600160a01b0384160361219d5760005460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611b889085908590600401614c94565b6000546040516323b872dd60e01b81526001600160a01b038581166004830152848116602483015260448201849052909116906323b872dd90606401611b88565b601a546001600160a01b031633146121f557600080fd5b6000811161220257600080fd5b600f81905560408051818152601191810191909152706d6178547261646573506572426c6f636b60781b606082015260208101829052600080516020614d898339815191529060800161121a565b3360009081526035602052604090205460ff1661226c57600080fd5b6001600160a01b038316600081815260256020908152604080832086845282528083208584528252808320938352602682528083208684528252808320858452909152812060078301549091036122c4575050505050565b600281015460068301546122df91869160009060ff16614151565b6001600160a01b038516600090815260276020908152604080832087845290915290205460010361244c576001600160a01b038516600090815260316020908152604080832087845282528083205460309092529091208054819061234690600190614ce3565b8154811061235657612356614c0b565b9060005260206000200160009054906101000a90046001600160a01b031681838154811061238657612386614c0b565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081603160008385815481106123cb576123cb614c0b565b60009182526020808320909101546001600160a01b03908116845283820194909452604092830182208b8352815282822094909455918a1682526031835280822089835290925290812055805481908061242757612427614cf6565b600082815260209020810160001990810180546001600160a01b031916905501905550505b6001600160a01b03851660008181526025602090815260408083208884528252808320878452825280832080546001600160a01b03191681556001808201859055600280830186905560038084018790556004808501889055600580860189905560068601805460ff19908116909155600787018a9055600887018a90556009909601899055898952602688528689208e8a5288528689208d8a5288528689208981559485018990559284018890559083018790558201869055018054909116905592825260278152828220878352905290812080549161252c83614d0c565b909155505043600090815260336020526040812080549161254c83614c7b565b91905055505050505050565b3360009081526035602052604090205460ff1661257457600080fd5b6001600160a01b038083166000908152602460205260409020908216158015906125a9575060018101546001600160a01b0316155b80156125c75750826001600160a01b0316826001600160a01b031614155b6125de5760018101546001600160a01b03166125e0565b815b60019190910180546001600160a01b0319166001600160a01b039092169190911790555050565b3360009081526035602052604090205460ff1661262357600080fd5b6001600160a01b0384166000818152602560209081526040808320878452825280832086845282528083209383526026825280832087845282528083208684529091528120600783015490910361267b575050611bcb565b60099091018290554360049091015550505050565b601a546001600160a01b031633146126a757600080fd5b6001600160a01b0381166126ba57600080fd5b600480546001600160a01b0319166001600160a01b038316908117909155604080518181526007918101919091526674726164696e6760c81b60608201526020810191909152600080516020614da98339815191529060800161121a565b3360009081526035602052604090205460ff1661273457600080fd5b61273f838383613cf4565b15611911576001600160a01b03831660009081526028602090815260408083208584528252808320848452909152902054602a805461278090600190614ce3565b8154811061279057612790614c0b565b90600052602060002090600d0201602a82815481106127b1576127b1614c0b565b6000918252602082208354600d9092020180546001600160a01b0319166001600160a01b0390921691909117815560018084015490820155600280840154908201556003808401549082015560048084015490820155600580840154908201805460ff909216151560ff1990921691909117905560068084015490820155600780840154908201556008808401549082015560098084015490820155600a8084015490820155600b8084015490820155600c92830154920191909155602a8054839260289290918490811061288857612888614c0b565b60009182526020808320600d909202909101546001600160a01b031683528201929092526040018120602a8054919291859081106128c8576128c8614c0b565b90600052602060002090600d02016001015481526020019081526020016000206000602a84815481106128fd576128fd614c0b565b600091825260208083206002600d90930201919091015483528281019390935260409182018120939093556001600160a01b0387168352602882528083208684528252808320858452909152812055602a80548061295d5761295d614cf6565b60008281526020808220600d6000199094019384020180546001600160a01b03191681556001810183905560028101839055600381018390556004810183905560058101805460ff1916905560068101839055600781018390556008810183905560098101839055600a8101839055600b8101839055600c01829055919092556001600160a01b03861682526029815260408083208684529091528120805491612a0683614d0c565b919050555050505050565b3360009081526035602052604090205460ff16612a2d57600080fd5b612a4c612a3d6020830183614403565b82602001358360400135613cf4565b15612b2a576000602a602882612a656020860186614403565b6001600160a01b0316815260208082019290925260409081016000908120868401358252835281812086830135825290925290205481548110612aaa57612aaa614c0b565b90600052602060002090600d02019050816060013581600301819055508160a0016020810190612ada9190614d23565b60058201805460ff191691151591909117905560c0820135600682015560e0820135600782015561010082013560088201556101208201356009820155610140820135600a82015543600b909101555b50565b612ba3604051806101a0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b612bae848484613cf4565b612bb757600080fd5b6001600160a01b03841660009081526028602090815260408083208684528252808320858452909152902054602a80549091908110612bf857612bf8614c0b565b6000918252602091829020604080516101a081018252600d90930290910180546001600160a01b031683526001810154938301939093526002830154908201526003820154606082015260048201546080820152600582015460ff16151560a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c9091015461018082015290505b9392505050565b602d6020528160005260406000208181548110612ccd57600080fd5b90600052602060002001600091509150505481565b3360009081526035602052604090205460ff16612cfe57600080fd5b612d108260000151836020015161152c565b604083810191825283516001600160a01b0390811660009081526025602090815283822081880180518452908252848320865184528252848320885181546001600160a01b031916951694851781558151600182015595516002870155606088015160038701556080880151600487015560a0880151600587015560c088015160068701805460ff191691151591909117905560e08801516007870155610100880151600887015561012088015160099096019590955591815260278252828120935181529290528120805491612de683614c7b565b9091555050436000908152603360205260408120805491612e0683614c7b565b909155505081516001600160a01b03166000908152602760209081526040808320828601518452909152902054600103612ea657602082810180516000908152603080845260408083205487516001600160a01b039081168552603187528285208651865287528285209190915593518352908452812085518154600181018355918352939091200180546001600160a01b031916929091169190911790555b600060a0820181815283516001600160a01b031682526026602090815260408084208287018051865290835281852082880151865283529381902085518155918501516001808401919091559085015160028301819055606086015160038401556080860151600484015592516005909201805460ff191692151592909217909155915160c0850151612f3c9391929190614151565b5050565b60238181548110612f5057600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526035602052604090205460ff16612f8657600080fd5b8251516001600160a01b039081166000908152602d6020908152604080832080546001808201835591855283852001879055868452602b8352928190208751805182546001600160a01b031916961695909517815591840151928201929092558282015160028201556060808401516003830155608080850151600484015560a080860151600585015560c086015160068501805460ff191691151591909117905560e08601516007850155610100860151600885015561012090950151600984015592870151600b830155860151600c82015590850151600d82015590840151600e82015543600a9091015580156130b8578251516001600160a01b03166000908152602e602090815260408083208651830151845290915281208054916130ae83614c7b565b9190505550505050565b8251516001600160a01b03166000908152602f602090815260408083208651830151845290915281208054916130ed83614c7b565b90915550508251516001600160a01b03166000908152602660209081526040808320865183015184528252808320865182015184529091529020600501805460ff19166001179055505050565b3360009081526035602052604090205460ff1661315657600080fd5b6000828152602b6020908152604080832081516102008101835281546001600160a01b031660c08201818152600184015460e08401526002840154610100840152600384015461012084015260048401546101408401526005840154610160840152600684015460ff16151561018084015260078401546101a084015260088401546101c084015260098401546101e08401528252600a83015482860152600b83015482850152600c8301546060830152600d8301546080830152600e9092015460a0820152908452602d909252822090915b8154811015613423578482828154811061324557613245614c0b565b90600052602060002001540361341157831561329a578251516001600160a01b03166000908152602e6020908152604080832086518301518452909152812080549161329083614d0c565b9190505550613315565b8251516001600160a01b03166000908152602f602090815260408083208651830151845290915281208054916132cf83614d0c565b90915550508251516001600160a01b03166000908152602660209081526040808320865183015184528252808320865182015184529091529020600501805460ff191690555b8154829061332590600190614ce3565b8154811061333557613335614c0b565b906000526020600020015482828154811061335257613352614c0b565b90600052602060002001819055508180548061337057613370614cf6565b600082815260208082208301600019908101839055909201909255868252602b90526040812080546001600160a01b0319168155600181018290556002810182905560038101829055600481018290556005810182905560068101805460ff19169055600781018290556008810182905560098101829055600a8101829055600b8101829055600c8101829055600d8101829055600e015550612f3c915050565b8061341b81614c7b565b915050613229565b5050505050565b601a546001600160a01b0316331461344157600080fd5b6001600160a01b03811661345457600080fd5b601a80546001600160a01b0319166001600160a01b038316908117909155604080518181526003918101919091526233b7bb60e91b60608201526020810191909152600080516020614da98339815191529060800161121a565b3360009081526035602052604081205460ff166134ca57600080fd5b600254604051630710f2ff60e51b8152600481018790526064916402540be400916001600160a01b039091169063e21e5fe090602401602060405180830381865afa15801561351d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135419190614cad565b61354b9087614d40565b6135559190614d57565b61355f9190614d57565b90508161357457613571600282614d57565b90505b82156135b05780601f600082825461358c9190614c68565b9250508190555080601d60008282546135a59190614c68565b909155506135e19050565b80601e60008282546135c29190614c68565b9250508190555080601c60008282546135db9190614c68565b90915550505b6135ec600282614d40565b95945050505050565b601a546001600160a01b0316331461360c57600080fd5b600654601b54601c546040516340c10f1960e01b81526001600160a01b03938416936340c10f199361364393911691600401614c94565b600060405180830381600087803b15801561365d57600080fd5b505af1158015613671573d6000803e3d6000fd5b5050600654601a54601e546040516340c10f1960e01b81526001600160a01b0393841695506340c10f1994506136ad9390921691600401614c94565b600060405180830381600087803b1580156136c757600080fd5b505af11580156136db573d6000803e3d6000fd5b50505050601e54601c546136ef9190614c68565b602160008282546137009190614c68565b9091555050600054601a54601f5460405163a9059cbb60e01b81526001600160a01b039384169363a9059cbb9361373c93911691600401614c94565b6020604051808303816000875af115801561375b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377f9190614cc6565b50600054601b54601d5460405163a9059cbb60e01b81526001600160a01b039384169363a9059cbb936137b793911691600401614c94565b6020604051808303816000875af11580156137d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137fa9190614cc6565b506000601c819055601e819055601d819055601f55565b3360009081526035602052604090205460ff1661382d57600080fd5b61383f8160000151826020015161172b565b60408201908152436101608301908152602a805460018082018355600083905285517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d2600d90930292830180546001600160a01b0319166001600160a01b0390921691909117905560208601517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d383015593517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d482015560608501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d582015560808501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d682015560a08501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d78201805460ff191691151591909117905560c08501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d882015560e08501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d98201556101008501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545da8201556101208501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545db8201556101408501517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545dc82015591517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545dd8301556101808401517fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545de9092019190915554613aae9190614ce3565b81516001600160a01b03908116600090815260286020908152604080832082870180518552908352818420828801518552835281842095909555855190931682526029815282822093518252929092528120805491613b0c83614c7b565b919050555050565b6060602380548060200260200160405190810160405280929190818152602001828054801561194857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613b4e575050505050905090565b601a546001600160a01b03163314613b8c57600080fd5b6001600160a01b038116613b9f57600080fd5b601b80546001600160a01b0319166001600160a01b03831690811790915560408051818152600391810191909152623232bb60e91b60608201526020810191909152600080516020614da98339815191529060800161121a565b3360009081526035602052604090205460ff16613c1557600080fd5b80516001600160a01b03166000908152602560209081526040808320828501518452825280832081850151845290915281206007810154909103613c57575050565b606082015160038201556080820151600482015560a0820151600582015560e082015160079091015550565b601a546001600160a01b03163314613c9a57600080fd5b60008111613ca757600080fd5b600e819055604080518181526010918101919091526f36b0bc2a3930b232b9a832b92830b4b960811b606082015260208101829052600080516020614d898339815191529060800161121a565b602a546000908103613d0857506000612caa565b6001600160a01b03841660009081526028602090815260408083208684528252808320858452909152812054602a80549091908110613d4957613d49614c0b565b60009182526020909120600d9091020180549091506001600160a01b038681169116148015613d7b5750838160010154145b80156135ec5750600201549091149392505050565b601a546001600160a01b03163314613da757600080fd5b601481905560408051818152601291810191909152716e66745375636365737354696d656c6f636b60701b606082015260208101829052600080516020614d898339815191529060800161121a565b60306020528160005260406000208181548110613e1257600080fd5b6000918252602090912001546001600160a01b03169150829050565b3360009081526035602052604090205460ff16613e4a57600080fd5b600354604051633104b73f60e21b8152600481018390526001600160a01b039091169063c412dcfc90602401600060405180830381600087803b158015613e9057600080fd5b505af1158015613423573d6000803e3d6000fd5b3360009081526035602052604090205460ff16613ec057600080fd5b6000546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990613ef29085908590600401614c94565b600060405180830381600087803b158015613f0c57600080fd5b505af1158015613f20573d6000803e3d6000fd5b505050505050565b601a546001600160a01b03163314613f3f57600080fd5b60008111613f4c57600080fd5b601081905560408051818152601691810191909152756d617850656e64696e674d61726b65744f726465727360501b606082015260208101829052600080516020614d898339815191529060800161121a565b601a546001600160a01b03163314613fb657600080fd5b803515801590613fca575080356020820135115b8015613fdd575060208101356040820135115b8015613ff0575060408101356060820135115b8015614003575060608101356080820135115b61400c57600080fd5b6140196015826005614252565b507fdaae5e047a75b6f38ad4e279cdefe910fc35d5a99a91b8303bd948c0a999372a8160405161121a9190614d79565b601a546001600160a01b0316331461406057600080fd5b6001600160a01b03811661407357600080fd5b6001600160a01b038116600081815260356020908152604091829020805460ff1916600117905590519182527fb692fa98cbec9bd705572b4c7e0927e3f7698e9fe526dcef6f40f3d4d4980ca3910161121a565b601a546001600160a01b031633146140de57600080fd5b6001600160a01b0381166140f157600080fd5b600580546001600160a01b0319166001600160a01b038316908117909155604080518181526009918101919091526863616c6c6261636b7360b81b60608201526020810191909152600080516020614da98339815191529060800161121a565b60008161415f576001614162565b60005b600086815260326020526040902060ff919091169150836141a1578481836003811061419057614190614c0b565b015461419c9190614ce3565b6141c0565b848183600381106141b4576141b4614c0b565b01546141c09190614c68565b8183600381106141d2576141d2614c0b565b0155505050505050565b8260058101928215614224579160200282015b8281111561422457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906141ef565b50614230929150614280565b5090565b6040518060a001604052806005906020820280368337509192915050565b8260058101928215614224579160200282015b82811115614224578235825591602001919060010190614265565b5b808211156142305760008155600101614281565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156142ce576142ce614295565b60405290565b604051610140810167ffffffffffffffff811182821017156142ce576142ce614295565b6040516101a0810167ffffffffffffffff811182821017156142ce576142ce614295565b6001600160a01b0381168114612b2a57600080fd5b600060a0828403121561434357600080fd5b82601f83011261435257600080fd5b60405160a0810181811067ffffffffffffffff8211171561437557614375614295565b6040528060a084018581111561438a57600080fd5b845b818110156143ad57803561439f8161431c565b83526020928301920161438c565b509195945050505050565b6000602082840312156143ca57600080fd5b5035919050565b600080604083850312156143e457600080fd5b50508035926020909101359150565b80356143fe8161431c565b919050565b60006020828403121561441557600080fd5b8135612caa8161431c565b6000806040838503121561443357600080fd5b823561443e8161431c565b946020939093013593505050565b8015158114612b2a57600080fd5b80356143fe8161444c565b60008060006060848603121561447a57600080fd5b83356144858161431c565b925060208401359150604084013561449c8161444c565b809150509250925092565b60a08101818360005b60058110156144cf5781518352602092830192909101906001016144b0565b50505092915050565b6020808252825182820181905260009190848201906040850190845b81811015614510578351835292840192918401916001016144f4565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156145105783516001600160a01b031683529284019291840191600101614538565b60008060006060848603121561457257600080fd5b833561457d8161431c565b95602085013595506040909401359392505050565b600080600080608085870312156145a857600080fd5b84356145b38161431c565b966020860135965060408601359560600135945092505050565b60008082840360e08112156145e157600080fd5b60c08112156145ef57600080fd5b506145f86142ab565b83356146038161431c565b815260208481013590820152604084013561461d8161431c565b80604083015250606084013560608201526080840135608082015260a08401356004811061464a57600080fd5b60a08201529460c0939093013593505050565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a08101516146a560a084018215159052565b5060c0818101519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018090810151910152565b6020808252825182820181905260009190848201906040850190845b818110156145105761472183855161465d565b928401926101a0929092019160010161470e565b60008060006060848603121561474a57600080fd5b83356147558161431c565b925060208401356147658161431c565b929592945050506040919091013590565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0387811682526020820187905285166040820152606081018490526080810183905260c08101600483106147d757634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b600080604083850312156147fb57600080fd5b82356148068161431c565b915060208301356148168161431c565b809150509250929050565b86516001600160a01b031681526101e081016020880151602083015260408801516040830152606088015160608301526080880151608083015260a088015160a083015260c088015161487860c084018215159052565b5060e08881015190830152610100808901519083015261012097880151978201979097526101408101959095526101608501939093526101808401919091526101a08301526101c09091015290565b60006101a082840312156148da57600080fd5b50919050565b6101a081016148ef828461465d565b92915050565b6000610140828403121561490857600080fd5b6149106142d4565b905061491b826143f3565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015261495b60c0830161445a565b60c082015260e082013560e082015261010080830135818301525061012080830135818301525092915050565b60008082840361020081121561499d57600080fd5b6149a785856148f5565b925060c061013f19820112156149bc57600080fd5b506149c56142ab565b6101408401358152610160840135602082015261018084013560408201526101a084013560608201526101c084013560808201526101e0840135614a088161444c565b60a0820152919491935090915050565b6000806000838503610220811215614a2f57600080fd5b6101e080821215614a3f57600080fd5b614a476142ab565b9150614a5387876148f5565b82526101408601356020830152610160860135604083015261018086013560608301526101a086013560808301526101c086013560a08301529093508401359150614aa1610200850161445a565b90509250925092565b60008060408385031215614abd57600080fd5b8235915060208301356148168161444c565b60008060008060808587031215614ae557600080fd5b84359350602085013592506040850135614afe8161444c565b91506060850135614b0e8161444c565b939692955090935050565b60006101a08284031215614b2c57600080fd5b614b346142f8565b614b3d836143f3565b815260208301356020820152604083013560408201526060830135606082015260808301356080820152614b7360a0840161445a565b60a082015260c0838101359082015260e080840135908201526101008084013590820152610120808401359082015261014080840135908201526101608084013590820152610180928301359281019290925250919050565b60006101408284031215614bdf57600080fd5b612caa83836148f5565b600060a08284031215614bfb57600080fd5b8260a0830111156148da57600080fd5b634e487b7160e01b600052603260045260246000fd5b60a08101818360005b60058110156144cf5781516001600160a01b0316835260209283019290910190600101614c2a565b634e487b7160e01b600052601160045260246000fd5b808201808211156148ef576148ef614c52565b600060018201614c8d57614c8d614c52565b5060010190565b6001600160a01b03929092168252602082015260400190565b600060208284031215614cbf57600080fd5b5051919050565b600060208284031215614cd857600080fd5b8151612caa8161444c565b818103818111156148ef576148ef614c52565b634e487b7160e01b600052603160045260246000fd5b600081614d1b57614d1b614c52565b506000190190565b600060208284031215614d3557600080fd5b8135612caa8161444c565b80820281158282048414176148ef576148ef614c52565b600082614d7457634e487b7160e01b600052601260045260246000fd5b500490565b60a0818101908383379291505056fe8cf3e35f6221b16e1670a3413180c9484bf5aa71787905909fa82a6a2662e9ab943e9d45a11aaae5d87503e3bc248665d9807856e5cf2bdb4a988bee44422781a264697066735822122091c29e3dd60d28aaf97445d6f28dd651e6bb9cf804ca537f7ec3569e8838782b64736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14046,
        "contract": "contracts/Storage.sol:Storage",
        "label": "WETH",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(TokenInterface)23508"
      },
      {
        "astId": 14049,
        "contract": "contracts/Storage.sol:Storage",
        "label": "oracle",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IOracle)22196"
      },
      {
        "astId": 14058,
        "contract": "contracts/Storage.sol:Storage",
        "label": "priceAggregator",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorInterfaceV1)21480"
      },
      {
        "astId": 14061,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pool",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(PoolInterfaceV5)22885"
      },
      {
        "astId": 14064,
        "contract": "contracts/Storage.sol:Storage",
        "label": "trading",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(PausableInterfaceV5)22877"
      },
      {
        "astId": 14067,
        "contract": "contracts/Storage.sol:Storage",
        "label": "callbacks",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(PausableInterfaceV5)22877"
      },
      {
        "astId": 14073,
        "contract": "contracts/Storage.sol:Storage",
        "label": "token",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(TokenInterface)23508"
      },
      {
        "astId": 14094,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nfts",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_contract(NftInterfaceV5)22491)5_storage"
      },
      {
        "astId": 14096,
        "contract": "contracts/Storage.sol:Storage",
        "label": "vault",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 14098,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tokenWETHRouter",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 14101,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxTradesPerPair",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 14104,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxTradesPerBlock",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 14107,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxPendingMarketOrders",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 14110,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxGainP",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 14113,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxSlP",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 14116,
        "contract": "contracts/Storage.sol:Storage",
        "label": "defaultLeverageUnlocked",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 14119,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nftSuccessTimelock",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 14129,
        "contract": "contracts/Storage.sol:Storage",
        "label": "spreadReductionsP",
        "offset": 0,
        "slot": "21",
        "type": "t_array(t_uint256)5_storage"
      },
      {
        "astId": 14131,
        "contract": "contracts/Storage.sol:Storage",
        "label": "gov",
        "offset": 0,
        "slot": "26",
        "type": "t_address"
      },
      {
        "astId": 14133,
        "contract": "contracts/Storage.sol:Storage",
        "label": "dev",
        "offset": 0,
        "slot": "27",
        "type": "t_address"
      },
      {
        "astId": 14135,
        "contract": "contracts/Storage.sol:Storage",
        "label": "devFeesToken",
        "offset": 0,
        "slot": "28",
        "type": "t_uint256"
      },
      {
        "astId": 14137,
        "contract": "contracts/Storage.sol:Storage",
        "label": "devFeesWETH",
        "offset": 0,
        "slot": "29",
        "type": "t_uint256"
      },
      {
        "astId": 14139,
        "contract": "contracts/Storage.sol:Storage",
        "label": "govFeesToken",
        "offset": 0,
        "slot": "30",
        "type": "t_uint256"
      },
      {
        "astId": 14141,
        "contract": "contracts/Storage.sol:Storage",
        "label": "govFeesWETH",
        "offset": 0,
        "slot": "31",
        "type": "t_uint256"
      },
      {
        "astId": 14143,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tokensBurned",
        "offset": 0,
        "slot": "32",
        "type": "t_uint256"
      },
      {
        "astId": 14145,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tokensMinted",
        "offset": 0,
        "slot": "33",
        "type": "t_uint256"
      },
      {
        "astId": 14147,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nftRewards",
        "offset": 0,
        "slot": "34",
        "type": "t_uint256"
      },
      {
        "astId": 14251,
        "contract": "contracts/Storage.sol:Storage",
        "label": "supportedTokens",
        "offset": 0,
        "slot": "35",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 14256,
        "contract": "contracts/Storage.sol:Storage",
        "label": "traders",
        "offset": 0,
        "slot": "36",
        "type": "t_mapping(t_address,t_struct(Trader)14159_storage)"
      },
      {
        "astId": 14265,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openTrades",
        "offset": 0,
        "slot": "37",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)14180_storage)))"
      },
      {
        "astId": 14274,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openTradesInfo",
        "offset": 0,
        "slot": "38",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)14193_storage)))"
      },
      {
        "astId": 14280,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openTradesCount",
        "offset": 0,
        "slot": "39",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 14288,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openLimitOrderIds",
        "offset": 0,
        "slot": "40",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))"
      },
      {
        "astId": 14294,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openLimitOrdersCount",
        "offset": 0,
        "slot": "41",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 14298,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openLimitOrders",
        "offset": 0,
        "slot": "42",
        "type": "t_array(t_struct(OpenLimitOrder)14220_storage)dyn_storage"
      },
      {
        "astId": 14303,
        "contract": "contracts/Storage.sol:Storage",
        "label": "reqID_pendingMarketOrder",
        "offset": 0,
        "slot": "43",
        "type": "t_mapping(t_uint256,t_struct(PendingMarketOrder)14234_storage)"
      },
      {
        "astId": 14308,
        "contract": "contracts/Storage.sol:Storage",
        "label": "reqID_pendingNftOrder",
        "offset": 0,
        "slot": "44",
        "type": "t_mapping(t_uint256,t_struct(PendingNftOrder)14248_storage)"
      },
      {
        "astId": 14313,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pendingOrderIds",
        "offset": 0,
        "slot": "45",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 14319,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pendingMarketOpenCount",
        "offset": 0,
        "slot": "46",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 14325,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pendingMarketCloseCount",
        "offset": 0,
        "slot": "47",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 14330,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pairTraders",
        "offset": 0,
        "slot": "48",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 14336,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pairTradersId",
        "offset": 0,
        "slot": "49",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 14342,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openInterestWETH",
        "offset": 0,
        "slot": "50",
        "type": "t_mapping(t_uint256,t_array(t_uint256)3_storage)"
      },
      {
        "astId": 14346,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tradesPerBlock",
        "offset": 0,
        "slot": "51",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 14350,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nftLastSuccess",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 14354,
        "contract": "contracts/Storage.sol:Storage",
        "label": "isTradingContract",
        "offset": 0,
        "slot": "53",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(NftInterfaceV5)22491)5_storage": {
        "base": "t_contract(NftInterfaceV5)22491",
        "encoding": "inplace",
        "label": "contract NftInterfaceV5[5]",
        "numberOfBytes": "160"
      },
      "t_array(t_struct(OpenLimitOrder)14220_storage)dyn_storage": {
        "base": "t_struct(OpenLimitOrder)14220_storage",
        "encoding": "dynamic_array",
        "label": "struct Storage.OpenLimitOrder[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)3_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[3]",
        "numberOfBytes": "96"
      },
      "t_array(t_uint256)5_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[5]",
        "numberOfBytes": "160"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorInterfaceV1)21480": {
        "encoding": "inplace",
        "label": "contract AggregatorInterfaceV1",
        "numberOfBytes": "20"
      },
      "t_contract(IOracle)22196": {
        "encoding": "inplace",
        "label": "contract IOracle",
        "numberOfBytes": "20"
      },
      "t_contract(NftInterfaceV5)22491": {
        "encoding": "inplace",
        "label": "contract NftInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_contract(PausableInterfaceV5)22877": {
        "encoding": "inplace",
        "label": "contract PausableInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_contract(PoolInterfaceV5)22885": {
        "encoding": "inplace",
        "label": "contract PoolInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_contract(TokenInterface)23508": {
        "encoding": "inplace",
        "label": "contract TokenInterface",
        "numberOfBytes": "20"
      },
      "t_enum(LimitOrder)14152": {
        "encoding": "inplace",
        "label": "enum Storage.LimitOrder",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)14180_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct Storage.Trade)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)14180_storage))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)14193_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct Storage.TradeInfo)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)14193_storage))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Trader)14159_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Storage.Trader)",
        "numberOfBytes": "32",
        "value": "t_struct(Trader)14159_storage"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_uint256)3_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[3])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)3_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)14180_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct Storage.Trade))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Trade)14180_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)14193_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct Storage.TradeInfo))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(TradeInfo)14193_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(PendingMarketOrder)14234_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Storage.PendingMarketOrder)",
        "numberOfBytes": "32",
        "value": "t_struct(PendingMarketOrder)14234_storage"
      },
      "t_mapping(t_uint256,t_struct(PendingNftOrder)14248_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Storage.PendingNftOrder)",
        "numberOfBytes": "32",
        "value": "t_struct(PendingNftOrder)14248_storage"
      },
      "t_mapping(t_uint256,t_struct(Trade)14180_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Storage.Trade)",
        "numberOfBytes": "32",
        "value": "t_struct(Trade)14180_storage"
      },
      "t_mapping(t_uint256,t_struct(TradeInfo)14193_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Storage.TradeInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(TradeInfo)14193_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(OpenLimitOrder)14220_storage": {
        "encoding": "inplace",
        "label": "struct Storage.OpenLimitOrder",
        "members": [
          {
            "astId": 14195,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trader",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 14197,
            "contract": "contracts/Storage.sol:Storage",
            "label": "pairIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 14199,
            "contract": "contracts/Storage.sol:Storage",
            "label": "index",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 14201,
            "contract": "contracts/Storage.sol:Storage",
            "label": "positionSize",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 14203,
            "contract": "contracts/Storage.sol:Storage",
            "label": "spreadReductionP",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 14205,
            "contract": "contracts/Storage.sol:Storage",
            "label": "buy",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 14207,
            "contract": "contracts/Storage.sol:Storage",
            "label": "leverage",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 14209,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 14211,
            "contract": "contracts/Storage.sol:Storage",
            "label": "sl",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 14213,
            "contract": "contracts/Storage.sol:Storage",
            "label": "minPrice",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 14215,
            "contract": "contracts/Storage.sol:Storage",
            "label": "maxPrice",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 14217,
            "contract": "contracts/Storage.sol:Storage",
            "label": "block",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 14219,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenId",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(PendingMarketOrder)14234_storage": {
        "encoding": "inplace",
        "label": "struct Storage.PendingMarketOrder",
        "members": [
          {
            "astId": 14223,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trade",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Trade)14180_storage"
          },
          {
            "astId": 14225,
            "contract": "contracts/Storage.sol:Storage",
            "label": "block",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 14227,
            "contract": "contracts/Storage.sol:Storage",
            "label": "wantedPrice",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 14229,
            "contract": "contracts/Storage.sol:Storage",
            "label": "slippageP",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256"
          },
          {
            "astId": 14231,
            "contract": "contracts/Storage.sol:Storage",
            "label": "spreadReductionP",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256"
          },
          {
            "astId": 14233,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenId",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "480"
      },
      "t_struct(PendingNftOrder)14248_storage": {
        "encoding": "inplace",
        "label": "struct Storage.PendingNftOrder",
        "members": [
          {
            "astId": 14236,
            "contract": "contracts/Storage.sol:Storage",
            "label": "nftHolder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 14238,
            "contract": "contracts/Storage.sol:Storage",
            "label": "nftId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 14240,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trader",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 14242,
            "contract": "contracts/Storage.sol:Storage",
            "label": "pairIndex",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 14244,
            "contract": "contracts/Storage.sol:Storage",
            "label": "index",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 14247,
            "contract": "contracts/Storage.sol:Storage",
            "label": "orderType",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(LimitOrder)14152"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Trade)14180_storage": {
        "encoding": "inplace",
        "label": "struct Storage.Trade",
        "members": [
          {
            "astId": 14161,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trader",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 14163,
            "contract": "contracts/Storage.sol:Storage",
            "label": "pairIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 14165,
            "contract": "contracts/Storage.sol:Storage",
            "label": "index",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 14167,
            "contract": "contracts/Storage.sol:Storage",
            "label": "initialPosToken",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 14169,
            "contract": "contracts/Storage.sol:Storage",
            "label": "positionSizeWETH",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 14171,
            "contract": "contracts/Storage.sol:Storage",
            "label": "openPrice",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 14173,
            "contract": "contracts/Storage.sol:Storage",
            "label": "buy",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 14175,
            "contract": "contracts/Storage.sol:Storage",
            "label": "leverage",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 14177,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 14179,
            "contract": "contracts/Storage.sol:Storage",
            "label": "sl",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(TradeInfo)14193_storage": {
        "encoding": "inplace",
        "label": "struct Storage.TradeInfo",
        "members": [
          {
            "astId": 14182,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 14184,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenPriceWETH",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 14186,
            "contract": "contracts/Storage.sol:Storage",
            "label": "openInterestWETH",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 14188,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tpLastUpdated",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 14190,
            "contract": "contracts/Storage.sol:Storage",
            "label": "slLastUpdated",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 14192,
            "contract": "contracts/Storage.sol:Storage",
            "label": "beingMarketClosed",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Trader)14159_storage": {
        "encoding": "inplace",
        "label": "struct Storage.Trader",
        "members": [
          {
            "astId": 14154,
            "contract": "contracts/Storage.sol:Storage",
            "label": "leverageUnlocked",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 14156,
            "contract": "contracts/Storage.sol:Storage",
            "label": "referral",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 14158,
            "contract": "contracts/Storage.sol:Storage",
            "label": "referralRewardsTotal",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}