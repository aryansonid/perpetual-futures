{
  "address": "0xDeaC1c7401df64DF6A6a641EAfF4d8e44370A4e1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "AddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract NftInterfaceV5[5]",
          "name": "nfts",
          "type": "address[5]"
        }
      ],
      "name": "NftsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NumberUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NumberUpdatedPair",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "openingInterestShort",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "openingInterestLong",
          "type": "uint256"
        }
      ],
      "name": "OpenningInterestUpated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "name": "SpreadReductionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "SupportedTokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "indexed": true,
          "internalType": "struct StorageInterface.Trade",
          "name": "t",
          "type": "tuple"
        }
      ],
      "name": "TradeClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "indexed": true,
          "internalType": "struct StorageInterface.Trade",
          "name": "t",
          "type": "tuple"
        }
      ],
      "name": "TradeOpen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "TradingContractAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "TradingContractRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addSupportedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trading",
          "type": "address"
        }
      ],
      "name": "addTradingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "callbacks",
      "outputs": [
        {
          "internalType": "contract PausableInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultLeverageUnlocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dev",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFeesToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devFeesWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "distributeLpRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "firstEmptyOpenLimitIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "firstEmptyTradeIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGov",
      "outputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getLeverageUnlocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLiquidatableTrades",
      "outputs": [
        {
          "internalType": "uint256[100]",
          "name": "_orderTypes",
          "type": "uint256[100]"
        },
        {
          "internalType": "address[100]",
          "name": "traderaddreses",
          "type": "address[100]"
        },
        {
          "internalType": "uint256[100]",
          "name": "pairIndexs",
          "type": "uint256[100]"
        },
        {
          "internalType": "uint256[100]",
          "name": "indexs",
          "type": "uint256[100]"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getOpenLimitOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.OpenLimitOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenLimitOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.OpenLimitOrder[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOpenTrades",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.Trade",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOpenTradesInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenPriceWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openInterestWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tpLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "beingMarketClosed",
              "type": "bool"
            }
          ],
          "internalType": "struct StorageInterface.TradeInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "getPendingMarketOrder",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pairIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialPosToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionSizeWETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "buy",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "leverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sl",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StorageInterface.Trade",
              "name": "trade",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wantedPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slippageP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.PendingMarketOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "getPendingNftOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftHolder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "enum StorageInterface.LimitOrder",
              "name": "orderType",
              "type": "uint8"
            }
          ],
          "internalType": "struct StorageInterface.PendingNftOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getPendingOrderIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "getReferral",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSpreadReductionsArray",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govFeesToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govFeesWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_leveragedPositionSize",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_WETH",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_fullFee",
          "type": "bool"
        }
      ],
      "name": "handleDevGovFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_a",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_mint",
          "type": "bool"
        }
      ],
      "name": "handleTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "hasOpenLimitOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseNftRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseReferralRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_WETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isTradingContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkErc677",
      "outputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxGainP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPendingMarketOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSlP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTradesPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTradesPerPair",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftLastSuccess",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftSuccessTimelock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "contract NftInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openInterestWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openLimitOrderIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openLimitOrders",
      "outputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spreadReductionP",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "buy",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sl",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openLimitOrdersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openTrades",
      "outputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialPosToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "positionSizeWETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "buy",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sl",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openTradesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openTradesInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenPriceWETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openInterestWETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tpLastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slLastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "beingMarketClosed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairTraders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairTradersArray",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairTradersId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pairs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingMarketCloseCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingMarketOpenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pendingOrderIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        }
      ],
      "name": "pendingOrderIdsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract PoolInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceAggregator",
      "outputs": [
        {
          "internalType": "contract AggregatorInterfaceV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trading",
          "type": "address"
        }
      ],
      "name": "removeTradingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reqID_pendingMarketOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.Trade",
          "name": "trade",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wantedPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slippageP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spreadReductionP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reqID_pendingNftOrder",
      "outputs": [
        {
          "internalType": "address",
          "name": "nftHolder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "enum StorageInterface.LimitOrder",
          "name": "orderType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_callbacks",
          "type": "address"
        }
      ],
      "name": "setCallbacks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lev",
          "type": "uint256"
        }
      ],
      "name": "setDefaultLeverageUnlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dev",
          "type": "address"
        }
      ],
      "name": "setDev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newLeverage",
          "type": "uint256"
        }
      ],
      "name": "setLeverageUnlocked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setMaxGainP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newMaxOpenInterest",
          "type": "uint256"
        }
      ],
      "name": "setMaxOpenInterestWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxPendingMarketOrders",
          "type": "uint256"
        }
      ],
      "name": "setMaxPendingMarketOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setMaxSlP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTradesPerBlock",
          "type": "uint256"
        }
      ],
      "name": "setMaxTradesPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTradesPerPair",
          "type": "uint256"
        }
      ],
      "name": "setMaxTradesPerPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocks",
          "type": "uint256"
        }
      ],
      "name": "setNftSuccessTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairs",
          "type": "uint256"
        }
      ],
      "name": "setPairs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "setPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "setPriceAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[5]",
          "name": "_r",
          "type": "uint256[5]"
        }
      ],
      "name": "setSpreadReductionsP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenWETHRouter",
          "type": "address"
        }
      ],
      "name": "setTokenWETHRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trading",
          "type": "address"
        }
      ],
      "name": "setTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "spreadReductionsP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.OpenLimitOrder",
          "name": "o",
          "type": "tuple"
        }
      ],
      "name": "storeOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pairIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialPosToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionSizeWETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "buy",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "leverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sl",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StorageInterface.Trade",
              "name": "trade",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wantedPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slippageP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.PendingMarketOrder",
          "name": "_order",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_open",
          "type": "bool"
        }
      ],
      "name": "storePendingMarketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "nftHolder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "enum StorageInterface.LimitOrder",
              "name": "orderType",
              "type": "uint8"
            }
          ],
          "internalType": "struct StorageInterface.PendingNftOrder",
          "name": "_nftOrder",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_orderId",
          "type": "uint256"
        }
      ],
      "name": "storePendingNftOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referral",
          "type": "address"
        }
      ],
      "name": "storeReferral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.Trade",
          "name": "_trade",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenPriceWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openInterestWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tpLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slLastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "beingMarketClosed",
              "type": "bool"
            }
          ],
          "internalType": "struct StorageInterface.TradeInfo",
          "name": "_tradeInfo",
          "type": "tuple"
        }
      ],
      "name": "storeTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenWETHRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensBurned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "traders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "leverageUnlocked",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "referralRewardsTotal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradesPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trading",
      "outputs": [
        {
          "internalType": "contract PausableInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_leveragedPosWETH",
          "type": "uint256"
        }
      ],
      "name": "transferLinkToAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "unregisterOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_open",
          "type": "bool"
        }
      ],
      "name": "unregisterPendingMarketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_order",
          "type": "uint256"
        }
      ],
      "name": "unregisterPendingNftOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "unregisterTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract NftInterfaceV5[5]",
          "name": "_nfts",
          "type": "address[5]"
        }
      ],
      "name": "updateNfts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.OpenLimitOrder",
          "name": "_o",
          "type": "tuple"
        }
      ],
      "name": "updateOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newSl",
          "type": "uint256"
        }
      ],
      "name": "updateSl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TokenInterface",
          "name": "_newToken",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newTp",
          "type": "uint256"
        }
      ],
      "name": "updateTp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeWETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterface.Trade",
          "name": "_t",
          "type": "tuple"
        }
      ],
      "name": "updateTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf1b8b1bcc62f5fc5d4fb8bf5a52c8a2f08cba2e24b200b2489bc2e68d3f83583",
  "receipt": {
    "to": null,
    "from": "0xa667403454F483dE81A0363Af7FcEE563819D910",
    "contractAddress": "0xDeaC1c7401df64DF6A6a641EAfF4d8e44370A4e1",
    "transactionIndex": 14,
    "gasUsed": "5755867",
    "logsBloom": "0x
    "blockHash": "0x51209c64fdb9942abbc5ed639c91bd1012d48adc71aa7eb32a478bccecc0b1b7",
    "transactionHash": "0xf1b8b1bcc62f5fc5d4fb8bf5a52c8a2f08cba2e24b200b2489bc2e68d3f83583",
    "logs": [
      {
        "transactionIndex": 14,
        "blockNumber": 43280593,
        "transactionHash": "0xf1b8b1bcc62f5fc5d4fb8bf5a52c8a2f08cba2e24b200b2489bc2e68d3f83583",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a667403454f483de81a0363af7fcee563819d910",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x000000000000000000000000000000000000000000000000002e7af645d24e440000000000000000000000000000000000000000000000002624cfb0076cbcf6000000000000000000000000000000000000000000000426988643636293249900000000000000000000000000000000000000000000000025f654b9c19a6eb200000000000000000000000000000000000000000000042698b4be59a86572dd",
        "logIndex": 62,
        "blockHash": "0x51209c64fdb9942abbc5ed639c91bd1012d48adc71aa7eb32a478bccecc0b1b7"
      }
    ],
    "blockNumber": 43280593,
    "cumulativeGasUsed": "9877174",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "77db9ff83738765fb3c209f02149997c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract NftInterfaceV5[5]\",\"name\":\"nfts\",\"type\":\"address[5]\"}],\"name\":\"NftsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NumberUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NumberUpdatedPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"openingInterestShort\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"openingInterestLong\",\"type\":\"uint256\"}],\"name\":\"OpenningInterestUpated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"name\":\"SpreadReductionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"SupportedTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"indexed\":true,\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"t\",\"type\":\"tuple\"}],\"name\":\"TradeClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"indexed\":true,\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"t\",\"type\":\"tuple\"}],\"name\":\"TradeOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"TradingContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"TradingContractRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"addTradingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbacks\",\"outputs\":[{\"internalType\":\"contract PausableInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLeverageUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFeesToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFeesWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"distributeLpRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"firstEmptyOpenLimitIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"firstEmptyTradeIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getLeverageUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidatableTrades\",\"outputs\":[{\"internalType\":\"uint256[100]\",\"name\":\"_orderTypes\",\"type\":\"uint256[100]\"},{\"internalType\":\"address[100]\",\"name\":\"traderaddreses\",\"type\":\"address[100]\"},{\"internalType\":\"uint256[100]\",\"name\":\"pairIndexs\",\"type\":\"uint256[100]\"},{\"internalType\":\"uint256[100]\",\"name\":\"indexs\",\"type\":\"uint256[100]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getOpenLimitOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.OpenLimitOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenLimitOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.OpenLimitOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOpenTrades\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOpenTradesInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"internalType\":\"struct StorageInterface.TradeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getPendingMarketOrder\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.PendingMarketOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"getPendingNftOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum StorageInterface.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"internalType\":\"struct StorageInterface.PendingNftOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getPendingOrderIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getReferral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpreadReductionsArray\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFeesToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFeesWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_leveragedPositionSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_WETH\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_fullFee\",\"type\":\"bool\"}],\"name\":\"handleDevGovFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_mint\",\"type\":\"bool\"}],\"name\":\"handleTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"hasOpenLimitOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseNftRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseReferralRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTradingContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkErc677\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGainP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPendingMarketOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSlP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTradesPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTradesPerPair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftLastSuccess\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftSuccessTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"contract NftInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openInterestWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrderIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrdersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTrades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTradesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTradesInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairTraders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairTradersArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairTradersId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingMarketCloseCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingMarketOpenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingOrderIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"pendingOrderIdsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract PoolInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceAggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorInterfaceV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"removeTradingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reqID_pendingMarketOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reqID_pendingNftOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum StorageInterface.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_callbacks\",\"type\":\"address\"}],\"name\":\"setCallbacks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lev\",\"type\":\"uint256\"}],\"name\":\"setDefaultLeverageUnlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newLeverage\",\"type\":\"uint256\"}],\"name\":\"setLeverageUnlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxGainP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMaxOpenInterest\",\"type\":\"uint256\"}],\"name\":\"setMaxOpenInterestWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPendingMarketOrders\",\"type\":\"uint256\"}],\"name\":\"setMaxPendingMarketOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxSlP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTradesPerBlock\",\"type\":\"uint256\"}],\"name\":\"setMaxTradesPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTradesPerPair\",\"type\":\"uint256\"}],\"name\":\"setMaxTradesPerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocks\",\"type\":\"uint256\"}],\"name\":\"setNftSuccessTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairs\",\"type\":\"uint256\"}],\"name\":\"setPairs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"}],\"name\":\"setPriceAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_r\",\"type\":\"uint256[5]\"}],\"name\":\"setSpreadReductionsP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenWETHRouter\",\"type\":\"address\"}],\"name\":\"setTokenWETHRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"spreadReductionsP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.OpenLimitOrder\",\"name\":\"o\",\"type\":\"tuple\"}],\"name\":\"storeOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.PendingMarketOrder\",\"name\":\"_order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"storePendingMarketOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum StorageInterface.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"internalType\":\"struct StorageInterface.PendingNftOrder\",\"name\":\"_nftOrder\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"storePendingNftOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"}],\"name\":\"storeReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"_trade\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"internalType\":\"struct StorageInterface.TradeInfo\",\"name\":\"_tradeInfo\",\"type\":\"tuple\"}],\"name\":\"storeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenWETHRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"traders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageUnlocked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referralRewardsTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trading\",\"outputs\":[{\"internalType\":\"contract PausableInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_leveragedPosWETH\",\"type\":\"uint256\"}],\"name\":\"transferLinkToAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"unregisterOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"unregisterPendingMarketOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_order\",\"type\":\"uint256\"}],\"name\":\"unregisterPendingNftOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unregisterTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract NftInterfaceV5[5]\",\"name\":\"_nfts\",\"type\":\"address[5]\"}],\"name\":\"updateNfts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.OpenLimitOrder\",\"name\":\"_o\",\"type\":\"tuple\"}],\"name\":\"updateOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newSl\",\"type\":\"uint256\"}],\"name\":\"updateSl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"_newToken\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newTp\",\"type\":\"uint256\"}],\"name\":\"updateTp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeWETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterface.Trade\",\"name\":\"_t\",\"type\":\"tuple\"}],\"name\":\"updateTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Storage.sol\":\"Storage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":125},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"contracts/Storage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"./interfaces/StorageInterface.sol\\\";\\nimport \\\"./interfaces/AggregatorInterfaceV1.sol\\\";\\nimport \\\"./interfaces/PoolInterfaceV5.sol\\\";\\nimport \\\"./interfaces/NftInterfaceV5.sol\\\";\\nimport \\\"./interfaces/PausableInterfaceV5.sol\\\";\\n\\ncontract Storage is StorageInterface, Initializable {\\n    // Constants\\n    uint public constant PRECISION = 1e10;\\n    bytes32 public constant MINTER_ROLE =\\n        0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6;\\n    TokenInterface public WETH;\\n    IOracle public oracle;\\n    TokenInterface public constant linkErc677 =\\n        TokenInterface(0xb0897686c545045aFc77CF20eC7A532E3120E0F1);\\n\\n    // Contracts (updatable)\\n    AggregatorInterfaceV1 public priceAggregator;\\n    PoolInterfaceV5 public pool;\\n    PausableInterfaceV5 public trading;\\n    PausableInterfaceV5 public callbacks;\\n    TokenInterface public token =\\n        TokenInterface(0x7075cAB6bCCA06613e2d071bd918D1a0241379E2);\\n    NftInterfaceV5[5] public nfts = [\\n        NftInterfaceV5(0xF9A4c522E327935BD1F5a338c121E14e4cc1f898),\\n        NftInterfaceV5(0x77cd42B925e1A82f41d852D6BE727CFc88fddBbC),\\n        NftInterfaceV5(0x3378AD81D09DE23725Ee9B9270635c97Ed601921),\\n        NftInterfaceV5(0x02e2c5825C1a3b69C0417706DbE1327C2Af3e6C2),\\n        NftInterfaceV5(0x2D266A94469d05C9e06D52A4D0d9C23b157767c2)\\n    ];\\n    address public vault;\\n    address public tokenWETHRouter;\\n\\n    // Trading variables\\n    uint public maxTradesPerPair = 3;\\n    uint public maxTradesPerBlock = 5;\\n    uint public maxPendingMarketOrders = 5;\\n    uint public maxGainP = 900; // %\\n    uint public maxSlP = 80; // %\\n    uint public defaultLeverageUnlocked = 50; // x\\n    uint public nftSuccessTimelock = 50; // 50 blocks\\n    uint[5] public spreadReductionsP = [15, 20, 25, 30, 35]; // %\\n\\n    // Gov & dev addresses (updatable)\\n    address public gov; //TODO need to change to our\\n    address public dev; //TODO need to change to our\\n\\n    // Gov & dev fees\\n    uint public devFeesToken; // 1e18\\n    uint public devFeesWETH; // 1e18\\n    uint public govFeesToken; // 1e18\\n    uint public govFeesWETH; // 1e18\\n\\n    // Stats\\n    uint public tokensBurned; // 1e18\\n    uint public tokensMinted; // 1e18\\n    uint public nftRewards; // 1e18\\n\\n    uint public pairs = 2;\\n\\n    // Enums\\n    // enum LimitOrder {\\n    //     TP,\\n    //     SL,\\n    //     LIQ,\\n    //     OPEN\\n    // }\\n\\n    // Structs\\n    struct Trader {\\n        uint leverageUnlocked;\\n        address referral;\\n        uint referralRewardsTotal; // 1e18\\n    }\\n    // struct Trade {\\n    //     address trader;\\n    //     uint pairIndex;\\n    //     uint index;\\n    //     uint initialPosToken; // 1e18\\n    //     uint positionSizeWETH; // 1e18\\n    //     uint openPrice; // PRECISION\\n    //     bool buy;\\n    //     uint leverage;\\n    //     uint tp; // PRECISION\\n    //     uint sl; // PRECISION\\n    // }\\n    // struct TradeInfo {\\n    //     uint tokenId;\\n    //     uint tokenPriceWETH; // PRECISION\\n    //     uint openInterestWETH; // 1e18\\n    //     uint tpLastUpdated;\\n    //     uint slLastUpdated;\\n    //     bool beingMarketClosed;\\n    // }\\n    // struct OpenLimitOrder {\\n    //     address trader;\\n    //     uint pairIndex;\\n    //     uint index;\\n    //     uint positionSize; // 1e18 (WETH or GFARM2)\\n    //     uint spreadReductionP;\\n    //     bool buy;\\n    //     uint leverage;\\n    //     uint tp; // PRECISION (%)\\n    //     uint sl; // PRECISION (%)\\n    //     uint minPrice; // PRECISION\\n    //     uint maxPrice; // PRECISION\\n    //     uint block;\\n    //     uint tokenId; // index in supportedTokens\\n    // }\\n    // struct PendingMarketOrder {\\n    //     Trade trade;\\n    //     uint block;\\n    //     uint wantedPrice; // PRECISION\\n    //     uint slippageP; // PRECISION (%)\\n    //     uint spreadReductionP;\\n    //     uint tokenId; // index in supportedTokens\\n    // }\\n    // struct PendingNftOrder {\\n    //     address nftHolder;\\n    //     uint nftId;\\n    //     address trader;\\n    //     uint pairIndex;\\n    //     uint index;\\n    //     LimitOrder orderType;\\n    // }\\n\\n    // Supported tokens to open trades with\\n    address[] public supportedTokens;\\n\\n    // User info mapping\\n    mapping(address => Trader) public traders;\\n\\n    // Trades mappings\\n    mapping(address => mapping(uint => mapping(uint => Trade)))\\n        public openTrades;\\n    mapping(address => mapping(uint => mapping(uint => TradeInfo)))\\n        public openTradesInfo;\\n    mapping(address => mapping(uint => uint)) public openTradesCount;\\n\\n    // Limit orders mappings\\n    mapping(address => mapping(uint => mapping(uint => uint)))\\n        public openLimitOrderIds;\\n    mapping(address => mapping(uint => uint)) public openLimitOrdersCount;\\n    OpenLimitOrder[] public openLimitOrders;\\n\\n    // Pending orders mappings\\n    mapping(uint => PendingMarketOrder) public reqID_pendingMarketOrder;\\n    mapping(uint => PendingNftOrder) public reqID_pendingNftOrder;\\n    mapping(address => uint[]) public pendingOrderIds;\\n    mapping(address => mapping(uint => uint)) public pendingMarketOpenCount;\\n    mapping(address => mapping(uint => uint)) public pendingMarketCloseCount;\\n\\n    // List of open trades & limit orders\\n    mapping(uint => address[]) public pairTraders;\\n    mapping(address => mapping(uint => uint)) public pairTradersId;\\n\\n    // Current and max open interests for each pair\\n    mapping(uint => uint[3]) public openInterestWETH; // 1e18 [long,short,max]\\n\\n    // Restrictions & Timelocks\\n    mapping(uint => uint) public tradesPerBlock;\\n    mapping(uint => uint) public nftLastSuccess;\\n\\n    // List of allowed contracts => can update storage + mint/burn tokens\\n    mapping(address => bool) public isTradingContract;\\n\\n    // Events\\n    event SupportedTokenAdded(address a);\\n    event TradingContractAdded(address a);\\n    event TradingContractRemoved(address a);\\n    event AddressUpdated(string name, address a);\\n    event NftsUpdated(NftInterfaceV5[5] nfts);\\n    event NumberUpdated(string name, uint value);\\n    event NumberUpdatedPair(string name, uint pairIndex, uint value);\\n    event SpreadReductionsUpdated(uint[5]);\\n\\n    function initialize(\\n        address _WETH,\\n        address _gov,\\n        address _dev\\n    ) external initializer {\\n        WETH = TokenInterface(_WETH);\\n        gov = _gov;\\n        dev = _dev;\\n        token = TokenInterface(0x7075cAB6bCCA06613e2d071bd918D1a0241379E2);\\n        nfts = [\\n            NftInterfaceV5(0xF9A4c522E327935BD1F5a338c121E14e4cc1f898),\\n            NftInterfaceV5(0x77cd42B925e1A82f41d852D6BE727CFc88fddBbC),\\n            NftInterfaceV5(0x3378AD81D09DE23725Ee9B9270635c97Ed601921),\\n            NftInterfaceV5(0x02e2c5825C1a3b69C0417706DbE1327C2Af3e6C2),\\n            NftInterfaceV5(0x2D266A94469d05C9e06D52A4D0d9C23b157767c2)\\n        ];\\n        maxTradesPerPair = 3;\\n        maxTradesPerBlock = 5;\\n        maxPendingMarketOrders = 5;\\n        maxGainP = 900; // %\\n        maxSlP = 80; // %\\n        defaultLeverageUnlocked = 50; // x\\n        nftSuccessTimelock = 50; // 50 blocks\\n        spreadReductionsP = [15, 20, 25, 30, 35];\\n    }\\n\\n    // Modifiers\\n    modifier onlyGov() {\\n        require(msg.sender == gov);\\n        _;\\n    }\\n    modifier onlyTrading() {\\n        require(\\n            isTradingContract[msg.sender],\\n            // &&\\n            //     token.hasRole(MINTER_ROLE, msg.sender)\\n            \\\"here here\\\"\\n        );\\n        _;\\n    }\\n\\n    // Manage addresses\\n    function setGov(address _gov) external onlyGov {\\n        require(_gov != address(0));\\n        gov = _gov;\\n        emit AddressUpdated(\\\"gov\\\", _gov);\\n    }\\n\\n    function setDev(address _dev) external onlyGov {\\n        require(_dev != address(0));\\n        dev = _dev;\\n        emit AddressUpdated(\\\"dev\\\", _dev);\\n    }\\n\\n    function updateToken(TokenInterface _newToken) external onlyGov {\\n        require(trading.isPaused() && callbacks.isPaused(), \\\"NOT_PAUSED\\\");\\n        require(address(_newToken) != address(0));\\n        token = _newToken;\\n        emit AddressUpdated(\\\"token\\\", address(_newToken));\\n    }\\n\\n    function updateNfts(NftInterfaceV5[5] memory _nfts) external onlyGov {\\n        require(address(_nfts[0]) != address(0));\\n        nfts = _nfts;\\n        emit NftsUpdated(_nfts);\\n    }\\n\\n    // Trading + callbacks contracts\\n    function addTradingContract(address _trading) external onlyGov {\\n        // require(token.hasRole(MINTER_ROLE, _trading), \\\"NOT_MINTER\\\"); /// TODO : need to have a gtoken type token of our own\\n        require(_trading != address(0));\\n        isTradingContract[_trading] = true;\\n        emit TradingContractAdded(_trading);\\n    }\\n\\n    function removeTradingContract(address _trading) external onlyGov {\\n        require(_trading != address(0));\\n        isTradingContract[_trading] = false;\\n        emit TradingContractRemoved(_trading);\\n    }\\n\\n    function addSupportedToken(address _token) external onlyGov {\\n        require(_token != address(0));\\n        supportedTokens.push(_token);\\n        emit SupportedTokenAdded(_token);\\n    }\\n\\n    function setPriceAggregator(address _aggregator) external onlyGov {\\n        require(_aggregator != address(0));\\n        priceAggregator = AggregatorInterfaceV1(_aggregator);\\n        emit AddressUpdated(\\\"priceAggregator\\\", _aggregator);\\n    }\\n\\n    function setPool(address _pool) external onlyGov {\\n        require(_pool != address(0));\\n        pool = PoolInterfaceV5(_pool);\\n        emit AddressUpdated(\\\"pool\\\", _pool);\\n    }\\n\\n    function setVault(address _vault) external onlyGov {\\n        require(_vault != address(0));\\n        vault = _vault;\\n        emit AddressUpdated(\\\"vault\\\", _vault);\\n    }\\n\\n    function setTrading(address _trading) external onlyGov {\\n        require(_trading != address(0));\\n        trading = PausableInterfaceV5(_trading);\\n        emit AddressUpdated(\\\"trading\\\", _trading);\\n    }\\n\\n    function setCallbacks(address _callbacks) external onlyGov {\\n        require(_callbacks != address(0));\\n        callbacks = PausableInterfaceV5(_callbacks);\\n        emit AddressUpdated(\\\"callbacks\\\", _callbacks);\\n    }\\n\\n    function setTokenWETHRouter(address _tokenWETHRouter) external onlyGov {\\n        require(_tokenWETHRouter != address(0));\\n        tokenWETHRouter = _tokenWETHRouter;\\n        emit AddressUpdated(\\\"tokenWETHRouter\\\", _tokenWETHRouter);\\n    }\\n\\n    // Manage trading variables\\n    function setMaxTradesPerBlock(uint _maxTradesPerBlock) external onlyGov {\\n        require(_maxTradesPerBlock > 0);\\n        maxTradesPerBlock = _maxTradesPerBlock;\\n        emit NumberUpdated(\\\"maxTradesPerBlock\\\", _maxTradesPerBlock);\\n    }\\n\\n    function setMaxTradesPerPair(uint _maxTradesPerPair) external onlyGov {\\n        require(_maxTradesPerPair > 0);\\n        maxTradesPerPair = _maxTradesPerPair;\\n        emit NumberUpdated(\\\"maxTradesPerPair\\\", _maxTradesPerPair);\\n    }\\n\\n    function setMaxPendingMarketOrders(\\n        uint _maxPendingMarketOrders\\n    ) external onlyGov {\\n        require(_maxPendingMarketOrders > 0);\\n        maxPendingMarketOrders = _maxPendingMarketOrders;\\n        emit NumberUpdated(\\\"maxPendingMarketOrders\\\", _maxPendingMarketOrders);\\n    }\\n\\n    function setMaxGainP(uint _max) external onlyGov {\\n        require(_max >= 300);\\n        maxGainP = _max;\\n        emit NumberUpdated(\\\"maxGainP\\\", _max);\\n    }\\n\\n    function setDefaultLeverageUnlocked(uint _lev) external onlyGov {\\n        require(_lev > 0);\\n        defaultLeverageUnlocked = _lev;\\n        emit NumberUpdated(\\\"defaultLeverageUnlocked\\\", _lev);\\n    }\\n\\n    function setMaxSlP(uint _max) external onlyGov {\\n        require(_max >= 50);\\n        maxSlP = _max;\\n        emit NumberUpdated(\\\"maxSlP\\\", _max);\\n    }\\n\\n    function setNftSuccessTimelock(uint _blocks) external onlyGov {\\n        nftSuccessTimelock = _blocks;\\n        emit NumberUpdated(\\\"nftSuccessTimelock\\\", _blocks);\\n    }\\n\\n    function setSpreadReductionsP(uint[5] calldata _r) external onlyGov {\\n        require(\\n            _r[0] > 0 &&\\n                _r[1] > _r[0] &&\\n                _r[2] > _r[1] &&\\n                _r[3] > _r[2] &&\\n                _r[4] > _r[3]\\n        );\\n        spreadReductionsP = _r;\\n        emit SpreadReductionsUpdated(_r);\\n    }\\n\\n    function setMaxOpenInterestWETH(\\n        uint _pairIndex,\\n        uint _newMaxOpenInterest\\n    ) external onlyGov {\\n        // Can set max open interest to 0 to pause trading on this pair only\\n        openInterestWETH[_pairIndex][2] = _newMaxOpenInterest;\\n        emit NumberUpdatedPair(\\n            \\\"maxOpenInterestWETH\\\",\\n            _pairIndex,\\n            _newMaxOpenInterest\\n        );\\n    }\\n\\n    // Manage stored trades\\n    function storeTrade(\\n        Trade memory _trade,\\n        TradeInfo memory _tradeInfo\\n    ) external onlyTrading {\\n        _trade.index = firstEmptyTradeIndex(_trade.trader, _trade.pairIndex);\\n        openTrades[_trade.trader][_trade.pairIndex][_trade.index] = _trade;\\n\\n        openTradesCount[_trade.trader][_trade.pairIndex]++;\\n        tradesPerBlock[block.number]++;\\n\\n        if (openTradesCount[_trade.trader][_trade.pairIndex] == 1) {\\n            pairTradersId[_trade.trader][_trade.pairIndex] = pairTraders[\\n                _trade.pairIndex\\n            ].length;\\n            pairTraders[_trade.pairIndex].push(_trade.trader);\\n        }\\n\\n        _tradeInfo.beingMarketClosed = false;\\n        openTradesInfo[_trade.trader][_trade.pairIndex][\\n            _trade.index\\n        ] = _tradeInfo;\\n\\n        updateOpenInterestWETH(\\n            _trade.pairIndex,\\n            _tradeInfo.openInterestWETH,\\n            true,\\n            _trade.buy\\n        );\\n\\n        emit TradeOpen(_trade);\\n    }\\n\\n    function unregisterTrade(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external onlyTrading {\\n        Trade storage t = openTrades[trader][pairIndex][index];\\n        TradeInfo storage i = openTradesInfo[trader][pairIndex][index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n\\n        updateOpenInterestWETH(pairIndex, i.openInterestWETH, false, t.buy);\\n\\n        if (openTradesCount[trader][pairIndex] == 1) {\\n            uint _pairTradersId = pairTradersId[trader][pairIndex];\\n            address[] storage p = pairTraders[pairIndex];\\n\\n            p[_pairTradersId] = p[p.length - 1];\\n            pairTradersId[p[_pairTradersId]][pairIndex] = _pairTradersId;\\n\\n            delete pairTradersId[trader][pairIndex];\\n            p.pop();\\n        }\\n\\n        delete openTrades[trader][pairIndex][index];\\n        delete openTradesInfo[trader][pairIndex][index];\\n\\n        openTradesCount[trader][pairIndex]--;\\n        tradesPerBlock[block.number]++;\\n\\n        emit TradeClose(t);\\n    }\\n\\n    // Manage pending market orders\\n    function storePendingMarketOrder(\\n        PendingMarketOrder memory _order,\\n        uint _id,\\n        bool _open\\n    ) external onlyTrading {\\n        pendingOrderIds[_order.trade.trader].push(_id);\\n\\n        reqID_pendingMarketOrder[_id] = _order;\\n        reqID_pendingMarketOrder[_id].block = block.number;\\n\\n        if (_open) {\\n            pendingMarketOpenCount[_order.trade.trader][\\n                _order.trade.pairIndex\\n            ]++;\\n        } else {\\n            pendingMarketCloseCount[_order.trade.trader][\\n                _order.trade.pairIndex\\n            ]++;\\n            openTradesInfo[_order.trade.trader][_order.trade.pairIndex][\\n                _order.trade.index\\n            ].beingMarketClosed = true;\\n        }\\n    }\\n\\n    function unregisterPendingMarketOrder(\\n        uint _id,\\n        bool _open\\n    ) external onlyTrading {\\n        PendingMarketOrder memory _order = reqID_pendingMarketOrder[_id];\\n        uint[] storage orderIds = pendingOrderIds[_order.trade.trader];\\n\\n        for (uint i = 0; i < orderIds.length; i++) {\\n            if (orderIds[i] == _id) {\\n                if (_open) {\\n                    pendingMarketOpenCount[_order.trade.trader][\\n                        _order.trade.pairIndex\\n                    ]--;\\n                } else {\\n                    pendingMarketCloseCount[_order.trade.trader][\\n                        _order.trade.pairIndex\\n                    ]--;\\n                    openTradesInfo[_order.trade.trader][_order.trade.pairIndex][\\n                        _order.trade.index\\n                    ].beingMarketClosed = false;\\n                }\\n\\n                orderIds[i] = orderIds[orderIds.length - 1];\\n                orderIds.pop();\\n\\n                delete reqID_pendingMarketOrder[_id];\\n                return;\\n            }\\n        }\\n    }\\n\\n    // Manage open interest\\n    function updateOpenInterestWETH(\\n        uint _pairIndex,\\n        uint _leveragedPosWETH,\\n        bool _open,\\n        bool _long\\n    ) private {\\n        uint index = _long ? 0 : 1;\\n        uint[3] storage o = openInterestWETH[_pairIndex];\\n        o[index] = _open\\n            ? o[index] + _leveragedPosWETH\\n            : o[index] - _leveragedPosWETH;\\n        emit OpenningInterestUpated(_pairIndex, o[1], o[0]);\\n    }\\n\\n    // Manage open limit orders\\n    function storeOpenLimitOrder(OpenLimitOrder memory o) external onlyTrading {\\n        o.index = firstEmptyOpenLimitIndex(o.trader, o.pairIndex);\\n        o.block = block.number;\\n        openLimitOrders.push(o);\\n        openLimitOrderIds[o.trader][o.pairIndex][o.index] =\\n            openLimitOrders.length -\\n            1;\\n        openLimitOrdersCount[o.trader][o.pairIndex]++;\\n    }\\n\\n    function updateOpenLimitOrder(\\n        OpenLimitOrder calldata _o\\n    ) external onlyTrading {\\n        if (!hasOpenLimitOrder(_o.trader, _o.pairIndex, _o.index)) {\\n            return;\\n        }\\n        OpenLimitOrder storage o = openLimitOrders[\\n            openLimitOrderIds[_o.trader][_o.pairIndex][_o.index]\\n        ];\\n        o.positionSize = _o.positionSize;\\n        o.buy = _o.buy;\\n        o.leverage = _o.leverage;\\n        o.tp = _o.tp;\\n        o.sl = _o.sl;\\n        o.minPrice = _o.minPrice;\\n        o.maxPrice = _o.maxPrice;\\n        o.block = block.number;\\n    }\\n\\n    function unregisterOpenLimitOrder(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index\\n    ) external onlyTrading {\\n        if (!hasOpenLimitOrder(_trader, _pairIndex, _index)) {\\n            return;\\n        }\\n\\n        // Copy last order to deleted order => update id of this limit order\\n        uint id = openLimitOrderIds[_trader][_pairIndex][_index];\\n        openLimitOrders[id] = openLimitOrders[openLimitOrders.length - 1];\\n        openLimitOrderIds[openLimitOrders[id].trader][\\n            openLimitOrders[id].pairIndex\\n        ][openLimitOrders[id].index] = id;\\n\\n        // Remove\\n        delete openLimitOrderIds[_trader][_pairIndex][_index];\\n        openLimitOrders.pop();\\n\\n        openLimitOrdersCount[_trader][_pairIndex]--;\\n    }\\n\\n    // Manage NFT orders\\n    function storePendingNftOrder(\\n        PendingNftOrder memory _nftOrder,\\n        uint _orderId\\n    ) external onlyTrading {\\n        reqID_pendingNftOrder[_orderId] = _nftOrder;\\n    }\\n\\n    function unregisterPendingNftOrder(uint _order) external onlyTrading {\\n        delete reqID_pendingNftOrder[_order];\\n    }\\n\\n    // Manage open trade\\n    function updateSl(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index,\\n        uint _newSl\\n    ) external onlyTrading {\\n        Trade storage t = openTrades[_trader][_pairIndex][_index];\\n        TradeInfo storage i = openTradesInfo[_trader][_pairIndex][_index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n        t.sl = _newSl;\\n        i.slLastUpdated = block.number;\\n    }\\n\\n    function updateTp(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index,\\n        uint _newTp\\n    ) external onlyTrading {\\n        Trade storage t = openTrades[_trader][_pairIndex][_index];\\n        TradeInfo storage i = openTradesInfo[_trader][_pairIndex][_index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n        t.tp = _newTp;\\n        i.tpLastUpdated = block.number;\\n    }\\n\\n    function updateTrade(Trade memory _t) external onlyTrading {\\n        // useful when partial adding/closing\\n        Trade storage t = openTrades[_t.trader][_t.pairIndex][_t.index];\\n        if (t.leverage == 0) {\\n            return;\\n        }\\n        t.initialPosToken = _t.initialPosToken;\\n        t.positionSizeWETH = _t.positionSizeWETH;\\n        t.openPrice = _t.openPrice;\\n        t.leverage = _t.leverage;\\n    }\\n\\n    // Manage referrals\\n    function storeReferral(\\n        address _trader,\\n        address _referral\\n    ) external onlyTrading {\\n        Trader storage trader = traders[_trader];\\n        trader.referral = _referral != address(0) &&\\n            trader.referral == address(0) &&\\n            _referral != _trader\\n            ? _referral\\n            : trader.referral;\\n    }\\n\\n    function increaseReferralRewards(\\n        address _referral,\\n        uint _amount\\n    ) external onlyTrading {\\n        traders[_referral].referralRewardsTotal += _amount;\\n    }\\n\\n    // Manage rewards\\n    function distributeLpRewards(uint _amount) external onlyTrading {\\n        pool.increaseAccTokensPerLp(_amount);\\n    }\\n\\n    function increaseNftRewards(\\n        uint _nftId,\\n        uint _amount\\n    ) external onlyTrading {\\n        nftLastSuccess[_nftId] = block.number;\\n        nftRewards += _amount;\\n    }\\n\\n    // Unlock next leverage\\n    function setLeverageUnlocked(\\n        address _trader,\\n        uint _newLeverage\\n    ) external onlyTrading {\\n        traders[_trader].leverageUnlocked = _newLeverage;\\n    }\\n\\n    // Manage dev & gov fees\\n    function handleDevGovFees(\\n        uint _pairIndex,\\n        uint _leveragedPositionSize,\\n        bool _WETH,\\n        bool _fullFee\\n    ) external onlyTrading returns (uint fee) {\\n        fee =\\n            (_leveragedPositionSize * priceAggregator.openFeeP(_pairIndex)) /\\n            PRECISION /\\n            100;\\n        if (!_fullFee) {\\n            fee /= 2;\\n        }\\n\\n        if (_WETH) {\\n            govFeesWETH += fee;\\n            devFeesWETH += fee;\\n        } else {\\n            govFeesToken += fee;\\n            devFeesToken += fee;\\n        }\\n\\n        fee *= 2;\\n    }\\n\\n    function claimFees() external onlyGov {\\n        token.mint(dev, devFeesToken);\\n        token.mint(gov, govFeesToken);\\n\\n        tokensMinted += devFeesToken + govFeesToken;\\n\\n        WETH.transfer(gov, govFeesWETH);\\n        WETH.transfer(dev, devFeesWETH);\\n\\n        devFeesToken = 0;\\n        govFeesToken = 0;\\n        devFeesWETH = 0;\\n        govFeesWETH = 0;\\n    }\\n\\n    // Manage tokens\\n    function handleTokens(\\n        address _a,\\n        uint _amount,\\n        bool _mint\\n    ) external onlyTrading {\\n        if (_mint) {\\n            token.mint(_a, _amount);\\n            tokensMinted += _amount;\\n        } else {\\n            token.burn(_a, _amount);\\n            tokensBurned += _amount;\\n        }\\n    }\\n\\n    function transferWETH(\\n        address _from,\\n        address _to,\\n        uint _amount\\n    ) external onlyTrading {\\n        if (_from == address(this)) {\\n            WETH.transfer(_to, _amount);\\n        } else {\\n            WETH.transferFrom(_from, _to, _amount);\\n        }\\n    }\\n\\n    function mintWETH(address _to, uint _amount) external onlyTrading {\\n        WETH.mint(_to, _amount);\\n    }\\n\\n    function transferLinkToAggregator(\\n        address _from,\\n        uint _pairIndex,\\n        uint _leveragedPosWETH\\n    ) external onlyTrading {\\n        linkErc677.transferFrom(\\n            _from,\\n            address(priceAggregator),\\n            priceAggregator.linkFee(_pairIndex, _leveragedPosWETH)\\n        );\\n    }\\n\\n    // View utils functions\\n    function firstEmptyTradeIndex(\\n        address trader,\\n        uint pairIndex\\n    ) public view returns (uint index) {\\n        for (uint i = 0; i < maxTradesPerPair; i++) {\\n            if (openTrades[trader][pairIndex][i].leverage == 0) {\\n                index = i;\\n                break;\\n            }\\n        }\\n    }\\n\\n    function firstEmptyOpenLimitIndex(\\n        address trader,\\n        uint pairIndex\\n    ) public view returns (uint index) {\\n        for (uint i = 0; i < maxTradesPerPair; i++) {\\n            if (!hasOpenLimitOrder(trader, pairIndex, i)) {\\n                index = i;\\n                break;\\n            }\\n        }\\n    }\\n\\n    function hasOpenLimitOrder(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) public view returns (bool) {\\n        if (openLimitOrders.length == 0) {\\n            return false;\\n        }\\n        OpenLimitOrder storage o = openLimitOrders[\\n            openLimitOrderIds[trader][pairIndex][index]\\n        ];\\n        return\\n            o.trader == trader && o.pairIndex == pairIndex && o.index == index;\\n    }\\n\\n    // Additional getters\\n    function getReferral(address _trader) external view returns (address) {\\n        return traders[_trader].referral;\\n    }\\n\\n    function getLeverageUnlocked(address _trader) external view returns (uint) {\\n        return traders[_trader].leverageUnlocked;\\n    }\\n\\n    function pairTradersArray(\\n        uint _pairIndex\\n    ) external view returns (address[] memory) {\\n        return pairTraders[_pairIndex];\\n    }\\n\\n    function getPendingOrderIds(\\n        address _trader\\n    ) external view returns (uint[] memory) {\\n        return pendingOrderIds[_trader];\\n    }\\n\\n    function pendingOrderIdsCount(\\n        address _trader\\n    ) external view returns (uint) {\\n        return pendingOrderIds[_trader].length;\\n    }\\n\\n    function getOpenLimitOrder(\\n        address _trader,\\n        uint _pairIndex,\\n        uint _index\\n    ) external view returns (OpenLimitOrder memory) {\\n        require(hasOpenLimitOrder(_trader, _pairIndex, _index));\\n        return openLimitOrders[openLimitOrderIds[_trader][_pairIndex][_index]];\\n    }\\n\\n    function getOpenLimitOrders()\\n        external\\n        view\\n        returns (OpenLimitOrder[] memory)\\n    {\\n        return openLimitOrders;\\n    }\\n\\n    function getSupportedTokens() external view returns (address[] memory) {\\n        return supportedTokens;\\n    }\\n\\n    function getSpreadReductionsArray() external view returns (uint[5] memory) {\\n        return spreadReductionsP;\\n    }\\n\\n    function getGov() external view returns (address _gov) {\\n        return gov;\\n    }\\n\\n    function setOracle(address _oracle) external {\\n        oracle = IOracle(_oracle);\\n    }\\n\\n    function getOpenTrades(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external view returns (Trade memory) {\\n        return openTrades[trader][pairIndex][index];\\n    }\\n\\n    function getOpenTradesInfo(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external view returns (TradeInfo memory) {\\n        return openTradesInfo[trader][pairIndex][index];\\n    }\\n\\n    function getPendingMarketOrder(\\n        uint orderId\\n    ) external view returns (PendingMarketOrder memory) {\\n        return reqID_pendingMarketOrder[orderId];\\n    }\\n\\n    function getPendingNftOrder(\\n        uint orderId\\n    ) external view returns (PendingNftOrder memory) {\\n        return reqID_pendingNftOrder[orderId];\\n    }\\n\\n    function setPairs(uint256 _pairs) external {\\n        pairs = _pairs;\\n    }\\n\\n    function getLiquidatableTrades()\\n        external\\n        view\\n        returns (\\n            uint[100] memory _orderTypes,\\n            address[100] memory traderaddreses,\\n            uint[100] memory pairIndexs,\\n            uint[100] memory indexs,\\n            uint256 index\\n        )\\n    {\\n        for (uint256 i; i < pairs; i++) {\\n            address[] memory traders = pairTraders[i];\\n            for (uint j; j < traders.length; j++) {\\n                uint256 numOfTrades = openTradesCount[traders[j]][i];\\n                uint k;\\n                while (numOfTrades != 0) {\\n                    Trade memory t = openTrades[traders[j]][i][k];\\n                    (bool liquidated, ) = trading.isTradeLiquidatablePure(t);\\n                    if (liquidated) {\\n                        traderaddreses[index] = t.trader;\\n                        _orderTypes[index] = 2;\\n                        pairIndexs[index] = t.pairIndex;\\n                        indexs[index] = t.index;\\n                        index++;\\n                    }\\n                    (bool parLiquidated, ) = trading.isTradeParLiquidatablePure(\\n                        t\\n                    );\\n                    if (parLiquidated && !liquidated) {\\n                        traderaddreses[index] = t.trader;\\n                        _orderTypes[index] = 4;\\n                        pairIndexs[index] = t.pairIndex;\\n                        indexs[index] = t.index;\\n                        index++;\\n                    }\\n                    if (index == 99) break;\\n                    numOfTrades--;\\n                    k++;\\n                }\\n                if (index == 99) break;\\n            }\\n            if (index == 99) break;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x90e8fa7b64195285626e0f5627145ab614689b9247e21c4c7cb8597f00727255\",\"license\":\"MIT\"},\"contracts/interfaces/AggregatorInterfaceV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\nimport \\\"./StorageInterface.sol\\\";\\n\\ninterface AggregatorInterfaceV1 {\\n    enum OrderType {\\n        MARKET_OPEN,\\n        MARKET_CLOSE,\\n        LIMIT_OPEN,\\n        LIMIT_CLOSE\\n    }\\n\\n    function getPrice(uint, OrderType, uint) external returns (uint);\\n\\n    function tokenPriceWETH() external view returns (uint);\\n\\n    function pairMinOpenLimitSlippageP(uint) external view returns (uint);\\n\\n    function closeFeeP(uint) external view returns (uint);\\n\\n    function linkFee(uint, uint) external view returns (uint);\\n\\n    function openFeeP(uint) external view returns (uint);\\n\\n    function pairMinLeverage(uint) external view returns (uint);\\n\\n    function pairMaxLeverage(uint) external view returns (uint);\\n\\n    function pairsCount() external view returns (uint);\\n\\n    function tokenWETHReservesLp() external view returns (uint, uint);\\n\\n    function referralP(uint) external view returns (uint);\\n\\n    function nftLimitOrderFeeP(uint) external view returns (uint);\\n\\n    function marketOrderfulfill(\\n        uint256 orderId,\\n        StorageInterface.PendingMarketOrder memory o\\n    ) external;\\n\\n    function nftOrderfulfill(\\n        uint256 orderId,\\n        StorageInterface.PendingNftOrder memory o\\n    ) external;\\n}\\n\",\"keccak256\":\"0xd37be0934daaf172a910376e79b670d554a3b28f738fd8c8ec98b59e8d86b5f5\",\"license\":\"MIT\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\ninterface IOracle {\\n    function getPrice(\\n        uint256 tokenIndex\\n    ) external view returns (uint256 price, uint256 lastupdateTime);\\n\\n    function getFundingFee(\\n        uint256 tokenIndex\\n    ) external view returns (uint256 fee);\\n}\\n\",\"keccak256\":\"0x4d3908114968a30bdbfae459ab2b3e842053fa0f08490ad50744cc3df3c1f439\",\"license\":\"MIT\"},\"contracts/interfaces/IToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\ninterface IToken {\\n    function manager() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function currentEpoch() external view returns (uint);\\n\\n    function currentEpochStart() external view returns (uint);\\n\\n    function currentEpochPositiveOpenPnl() external view returns (uint);\\n\\n    function updateAccPnlPerTokenUsed(\\n        uint prevPositiveOpenPnl,\\n        uint newPositiveOpenPnl\\n    ) external returns (uint);\\n\\n    struct LockedDeposit {\\n        address owner;\\n        uint shares; // 1e18\\n        uint assetsDeposited; // 1e18\\n        uint assetsDiscount; // 1e18\\n        uint atTimestamp; // timestamp\\n        uint lockDuration; // timestamp\\n    }\\n\\n    function getLockedDeposit(\\n        uint depositId\\n    ) external view returns (LockedDeposit memory);\\n\\n    function sendAssets(uint assets, address receiver) external;\\n\\n    function receiveAssets(uint assets, address user) external;\\n\\n    function distributeReward(uint assets) external;\\n\\n    function currentBalanceWETH() external view returns (uint);\\n\\n    function tvl() external view returns (uint);\\n\\n    function marketCap() external view returns (uint);\\n\\n    function getPendingAccBlockWeightedMarketCap(\\n        uint currentBlock\\n    ) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x4cf9781a0df06a546607997f12d5d984942657e9eb908229ef5f7f6d5b2bd385\",\"license\":\"MIT\"},\"contracts/interfaces/NftInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\ninterface NftInterfaceV5 {\\n    function balanceOf(address) external view returns (uint);\\n\\n    function ownerOf(uint) external view returns (address);\\n\\n    function transferFrom(address, address, uint) external;\\n\\n    function tokenOfOwnerByIndex(address, uint) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xbd69c374c647aab1dce1c1b73e891823446281e9de4c7aea1c019d6979e2b5b0\",\"license\":\"MIT\"},\"contracts/interfaces/PausableInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\nimport {StorageInterface} from \\\"./StorageInterface.sol\\\";\\n\\ninterface PausableInterfaceV5 {\\n    function isPaused() external view returns (bool);\\n\\n    function isTradeParLiquidatablePure(\\n        StorageInterface.Trade memory t\\n    ) external view returns (bool, bool);\\n\\n    function isTradeLiquidatablePure(\\n        StorageInterface.Trade memory t\\n    ) external view returns (bool, bool);\\n\\n    function executeNftOrders(\\n        uint[100] memory _orderTypes,\\n        address[100] memory traders,\\n        uint[100] memory pairIndexs,\\n        uint[100] memory indexs,\\n        uint256 index\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa6bf8e846845320adbb09de252116c3f677d6e8e8e965efbee3c872fbdfaa8d6\",\"license\":\"MIT\"},\"contracts/interfaces/PoolInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\ninterface PoolInterfaceV5 {\\n    function increaseAccTokensPerLp(uint) external;\\n}\\n\",\"keccak256\":\"0x0ac90b66ca3eb22f6df4f0a4db277a57c6498fd6376ac0a6a40a7d5d49b2627b\",\"license\":\"MIT\"},\"contracts/interfaces/StorageInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\nimport \\\"./TokenInterface.sol\\\";\\nimport \\\"./NftInterfaceV5.sol\\\";\\nimport \\\"./IToken.sol\\\";\\nimport \\\"./AggregatorInterfaceV1.sol\\\";\\nimport \\\"./IOracle.sol\\\";\\nimport \\\"./PausableInterfaceV5.sol\\\";\\n\\ninterface StorageInterface {\\n    enum LimitOrder {\\n        TP,\\n        SL,\\n        LIQ,\\n        OPEN,\\n        PAR_LIQ\\n    }\\n    struct Trade {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint initialPosToken; // 1e18\\n        uint positionSizeWETH; // 1e18\\n        uint openPrice; // PRECISION\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION\\n        uint sl; // PRECISION\\n    }\\n    struct TradeInfo {\\n        uint tokenId;\\n        uint tokenPriceWETH; // PRECISION\\n        uint openInterestWETH; // 1e18\\n        uint tpLastUpdated;\\n        uint slLastUpdated;\\n        bool beingMarketClosed;\\n    }\\n    struct OpenLimitOrder {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint positionSize; // 1e18 (WETH or GFARM2)\\n        uint spreadReductionP;\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION (%)\\n        uint sl; // PRECISION (%)\\n        uint minPrice; // PRECISION\\n        uint maxPrice; // PRECISION\\n        uint block;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingMarketOrder {\\n        Trade trade;\\n        uint block;\\n        uint wantedPrice; // PRECISION\\n        uint slippageP; // PRECISION (%)\\n        uint spreadReductionP;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingNftOrder {\\n        address nftHolder;\\n        uint nftId;\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        LimitOrder orderType;\\n    }\\n\\n    event OpenningInterestUpated(\\n        uint256 indexed pairIndex,\\n        uint256 indexed openingInterestShort,\\n        uint256 indexed openingInterestLong\\n    );\\n\\n    event TradeOpen(Trade indexed t);\\n\\n    event TradeClose(Trade indexed t);\\n\\n    function PRECISION() external pure returns (uint);\\n\\n    function gov() external view returns (address);\\n\\n    function dev() external view returns (address);\\n\\n    function WETH() external view returns (TokenInterface);\\n\\n    function token() external view returns (TokenInterface);\\n\\n    function linkErc677() external view returns (TokenInterface);\\n\\n    function priceAggregator() external view returns (AggregatorInterfaceV1);\\n\\n    function vault() external view returns (address);\\n\\n    function trading() external view returns (PausableInterfaceV5);\\n\\n    function callbacks() external view returns (PausableInterfaceV5);\\n\\n    function handleTokens(address, uint, bool) external;\\n\\n    function transferWETH(address, address, uint) external;\\n\\n    function transferLinkToAggregator(address, uint, uint) external;\\n\\n    function unregisterTrade(address, uint, uint) external;\\n\\n    function unregisterPendingMarketOrder(uint, bool) external;\\n\\n    function unregisterOpenLimitOrder(address, uint, uint) external;\\n\\n    function hasOpenLimitOrder(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (bool);\\n\\n    function storePendingMarketOrder(\\n        PendingMarketOrder memory,\\n        uint,\\n        bool\\n    ) external;\\n\\n    function getOpenTrades(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (Trade memory);\\n\\n    function getOpenTradesInfo(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (TradeInfo memory);\\n\\n    function updateSl(address, uint, uint, uint) external;\\n\\n    function updateTp(address, uint, uint, uint) external;\\n\\n    function getOpenLimitOrder(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (OpenLimitOrder memory);\\n\\n    function spreadReductionsP(uint) external view returns (uint);\\n\\n    function storeOpenLimitOrder(OpenLimitOrder memory) external;\\n\\n    function getPendingMarketOrder(\\n        uint\\n    ) external view returns (PendingMarketOrder memory);\\n\\n    function storePendingNftOrder(PendingNftOrder memory, uint) external;\\n\\n    function updateOpenLimitOrder(OpenLimitOrder calldata) external;\\n\\n    function firstEmptyTradeIndex(address, uint) external view returns (uint);\\n\\n    function firstEmptyOpenLimitIndex(\\n        address,\\n        uint\\n    ) external view returns (uint);\\n\\n    function increaseNftRewards(uint, uint) external;\\n\\n    function nftSuccessTimelock() external view returns (uint);\\n\\n    function getPendingNftOrder(\\n        uint\\n    ) external view returns (PendingNftOrder memory);\\n\\n    function updateTrade(Trade memory) external;\\n\\n    function nftLastSuccess(uint) external view returns (uint);\\n\\n    function unregisterPendingNftOrder(uint) external;\\n\\n    function handleDevGovFees(uint, uint, bool, bool) external returns (uint);\\n\\n    function distributeLpRewards(uint) external;\\n\\n    function storeTrade(Trade memory, TradeInfo memory) external;\\n\\n    function openLimitOrdersCount(address, uint) external view returns (uint);\\n\\n    function openTradesCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketOpenCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketCloseCount(\\n        address,\\n        uint\\n    ) external view returns (uint);\\n\\n    function maxSlP() external view returns (uint);\\n\\n    function maxTradesPerPair() external view returns (uint);\\n\\n    function pendingOrderIdsCount(address) external view returns (uint);\\n\\n    function maxPendingMarketOrders() external view returns (uint);\\n\\n    function openInterestWETH(uint, uint) external view returns (uint);\\n\\n    function getPendingOrderIds(address) external view returns (uint[] memory);\\n\\n    function nfts(uint) external view returns (NftInterfaceV5);\\n\\n    // function fakeBlockNumber() external view returns (uint); // Testing\\n\\n    function getGov() external view returns (address); // checking\\n\\n    function mintWETH(address _to, uint _amount) external;\\n\\n    function oracle() external view returns (IOracle);\\n\\n    function getLiquidatableTrades()\\n        external\\n        view\\n        returns (\\n            uint[100] memory _orderTypes,\\n            address[100] memory traders,\\n            uint[100] memory pairIndexs,\\n            uint[100] memory indexs,\\n            uint256 index\\n        );\\n}\\n\",\"keccak256\":\"0x81e49fd166d6e22a4f7b811ccfc4c04183d38631f5ef6a7d08b0ee56750f4b5b\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\ninterface TokenInterface {\\n    function burn(address, uint256) external;\\n\\n    function mint(address, uint256) external;\\n\\n    function transfer(address, uint256) external returns (bool);\\n\\n    function transferFrom(address, address, uint256) external returns (bool);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function hasRole(bytes32, address) external view returns (bool);\\n\\n    function approve(address, uint256) external returns (bool);\\n\\n    function allowance(address, address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5b6f3ec1152b61791df030a08f58bb579f7e689138bb45b62925c8e07f986710\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x600680546001600160a01b031916737075cab6bcca06613e2d071bd918d1a0241379e217905561012060405273f9a4c522e327935bd1f5a338c121e14e4cc1f89860809081527377cd42b925e1a82f41d852d6be727cfc88fddbbc60a052733378ad81d09de23725ee9b9270635c97ed60192160c0527302e2c5825c1a3b69c0417706dbe1327c2af3e6c260e052732d266a94469d05c9e06d52a4d0d9c23b157767c261010052620000b690600790600562000131565b506003600e556005600f818155601082905561038460115560506012556032601381905560149081556040805160a0810182529283526020830191909152601990820152601e6060820152602360808201526200011791601591906200018e565b5060026023553480156200012a57600080fd5b50620001db565b82600581019282156200017c579160200282015b828111156200017c57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000145565b506200018a929150620001c4565b5090565b82600581019282156200017c579160200282015b828111156200017c578251829060ff16905591602001919060010190620001a2565b5b808211156200018a5760008155600101620001c5565b615f5a80620001eb6000396000f3fe608060405234801561001057600080fd5b506004361061060b5760003560e01c806390d112b91161031d578063d294f093116101a9578063ecf56a1f116100fa578063f823e2ae116100a8578063f823e2ae14611297578063f8d24b48146112aa578063fbfa77cf146112b3578063fc0c546a146112c6578063fdb59413146112d9578063fe0fc8d6146112e2578063fece4eac146112f5578063ffb0a4a01461131057600080fd5b8063ecf56a1f146111a4578063eda00d54146111b7578063ee51f636146111e8578063ee92a4ff14611249578063f013d27814611252578063f65d9dbe14611265578063f7b3c6fd1461126e57600080fd5b8063dcdf339a11610157578063dcdf339a14611129578063e212991a1461113c578063e3cbe3a71461114f578063e3f04eba14611162578063e765540314611175578063e7873b5814611188578063ec44acf21461119157600080fd5b8063d294f093146110a6578063d3b5fe70146110ae578063d3c7c2c7146110c1578063d477f05f146110c9578063d4bda908146110dc578063d5391393146110ef578063dc2123ff1461111657600080fd5b8063ad5c46481161026e578063c0c53b8b1161021c578063c0c53b8b14611018578063c122fea61461102b578063c311ab3114611034578063c625562614611047578063c76faf781461105a578063cab945801461106d578063cfad57a214611080578063cfbacc141461109357600080fd5b8063ad5c464814610ea9578063b4b0f56714610ec2578063b66e6b0514610ed5578063b767608a14610fa7578063b7682d5414610fba578063b8878a2c14610fe5578063bcc9f1d31461100557600080fd5b80639d1a1073116102cb5780639d1a107314610d5f578063a2ab2dee14610d72578063a354418114610d83578063a3a80ffe14610d96578063a553906c14610e6a578063aa3b7d7714610e7d578063aaf5eb6814610e9d57600080fd5b806390d112b914610c1b57806391cca3db14610c2e57806392a88fa214610c41578063959509e414610c9c57806397e7995a14610ca557806399794d3514610cd05780639c8912f114610d3457600080fd5b80635378143e1161049c57806377a9fdcf116103ed5780638049fde71161039b5780638049fde714610b22578063817fa1a414610b2b578063878679e614610b3e5780638a0bd70214610b515780638a238ae514610b665780638bbb644c14610b795780638bf7f5f914610b825780638c8ff1d514610b9557600080fd5b806377a9fdcf14610a7d578063796d82d914610a905780637ad3def214610a995780637adbf97314610aac5780637dc0d1d014610adc5780637f0584ed14610aef5780637fdb96f314610b0f57600080fd5b80636690a8061161044a5780636690a806146109cc5780636817031b146109df57806368ca199d146109f25780636d69fcaf14610a1b5780636d81d98114610a2e5780636de9f32b14610a615780637395d79e14610a6a57600080fd5b80635378143e1461093f57806356a6796f146109525780635a912551146109675780635ad9f993146109705780635b621e32146109795780635c76ac9e1461098c5780635fbfe8cc146109ac57600080fd5b8063265aa621116105615780633b0f0f2f1161050f5780633b0f0f2f146108665780633dae10a01461089557806343b8fab5146108a85780634415b369146108bb5780634437152a146108e657806344d44f5a146108f95780635070e8371461090c57806352e5398f1461091f57600080fd5b8063265aa6211461077257806328b1f88714610785578063292c1617146107985780632a0a1cb0146107ab5780632d1f941a146107cb5780633078fff5146107d457806332149592146107e757600080fd5b8063145ed21c116105be578063145ed21c146106ba57806316f0115b146106cd5780631c8636b4146106e0578063201d8bdb1461071957806321f7a30b1461072c578063255566e41461073f57806325615d271461075f57600080fd5b8062b127831461061057806306aef7de14610640578063099fa934146106555780630a769d71146106685780630eee3e4a1461068157806312d43a511461069457806313b36ff6146106a7575b600080fd5b600554610623906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61065361064e366004615191565b611319565b005b610653610663366004615218565b61138c565b6106706113f4565b604051610637959493929190615254565b61065361068f3660046152c4565b61182f565b601a54610623906001600160a01b031681565b6106536106b5366004615218565b6118c3565b6106536106c83660046152f6565b61192e565b600354610623906001600160a01b031681565b61070b6106ee366004615313565b602860209081526000928352604080842090915290825290205481565b604051908152602001610637565b610653610727366004615218565b6119be565b61065361073a366004615313565b611a42565b61075261074d366004615218565b611aa5565b6040516106379190615377565b61065361076d366004615218565b602355565b610623610780366004615218565b611b70565b610653610793366004615313565b611b90565b61070b6107a6366004615313565b611bdb565b6107be6107b93660046153c9565b611c35565b6040516106379190615472565b61070b601d5481565b600254610623906001600160a01b031681565b6107fa6107f5366004615218565b611ce7565b604080516001600160a01b03909e168e5260208e019c909c529a8c019990995260608b019790975260808a019590955292151560a089015260c088019190915260e08701526101008601526101208501526101408401526101608301526101808201526101a001610637565b6106236108743660046152f6565b6001600160a01b039081166000908152602560205260409020600101541690565b61070b6108a3366004615218565b611d6e565b6106536108b6366004615218565b611d85565b61070b6108c9366004615313565b603260209081526000928352604080842090915290825290205481565b6106536108f43660046152f6565b611dfd565b61070b610907366004615313565b611e82565b61065361091a3660046152f6565b611eaf565b61070b61092d366004615218565b60346020526000908152604090205481565b61065361094d3660046154a0565b611f3f565b61095a612076565b60405161063791906154e2565b61070b60125481565b61070b60225481565b6106536109873660046152f6565b6120b2565b61099f61099a3660046152f6565b61212d565b6040516106379190615513565b6109bf6109ba366004615218565b612199565b6040516106379190615557565b6106536109da3660046153c9565b612204565b6106536109ed3660046152f6565b612344565b61070b610a003660046152f6565b6001600160a01b031660009081526025602052604090205490565b610653610a293660046152f6565b6123ca565b610a51610a3c3660046152f6565b60366020526000908152604090205460ff1681565b6040519015158152602001610637565b61070b60215481565b610653610a783660046152c4565b612472565b61070b610a8b3660046152c4565b6124c4565b61070b600f5481565b610653610aa73660046152f6565b6124e9565b610653610aba3660046152f6565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600154610623906001600160a01b031681565b610b02610afd366004615218565b612691565b6040516106379190615598565b610653610b1d3660046155e8565b61276a565b61070b60105481565b610653610b39366004615623565b612806565b600d54610623906001600160a01b031681565b610b596128d1565b6040516106379190615748565b610653610b7436600461578b565b6129c0565b61070b60135481565b610653610b90366004615218565b612a7e565b610bec610ba33660046153c9565b6027602090815260009384526040808520825292845282842090528252902080546001820154600283015460038401546004850154600590950154939492939192909160ff1686565b6040805196875260208701959095529385019290925260608401526080830152151560a082015260c001610637565b610653610c293660046153c9565b612af0565b601b54610623906001600160a01b031681565b610c79610c4f3660046152f6565b60256020526000908152604090208054600182015460029092015490916001600160a01b03169083565b604080519384526001600160a01b03909216602084015290820152606001610637565b61070b601f5481565b61070b610cb3366004615313565b602a60209081526000928352604080842090915290825290205481565b610d22610cde366004615218565b602d602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695939490921692909160ff1686565b604051610637969594939291906157cc565b61070b610d42366004615313565b602f60209081526000928352604080842090915290825290205481565b610653610d6d366004615811565b612e49565b601a546001600160a01b0316610623565b610653610d913660046155e8565b612f0b565b610e14610da43660046153c9565b602660209081526000938452604080852082529284528284209052825290208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b03909816989697959694959394929360ff9092169290918a565b604080516001600160a01b03909b168b5260208b0199909952978901969096526060880194909452608087019290925260a0860152151560c085015260e084015261010083015261012082015261014001610637565b610653610e783660046152f6565b612fa7565b61070b610e8b366004615218565b60356020526000908152604090205481565b61070b6402540be40081565b600054610623906201000090046001600160a01b031681565b610653610ed03660046153c9565b61302f565b610f95610ee3366004615218565b602c6020908152600091825260409182902082516101408101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460ff16151560c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154600b830154600c840154600d850154600e90950154939492939192909186565b6040516106379695949392919061584a565b610653610fb5366004615886565b61333b565b61070b610fc8366004615313565b603060209081526000928352604080842090915290825290205481565b610ff8610ff33660046153c9565b61346a565b604051610637919061589f565b61070b611013366004615313565b6135ed565b6106536110263660046158ae565b61361e565b61070b60115481565b610653611042366004615981565b613892565b610623611055366004615218565b613b41565b610653611068366004615a11565b613b6b565b61065361107b366004615aa3565b613d4e565b61065361108e3660046152f6565b614048565b61070b6110a1366004615ac8565b6140cc565b610653614226565b6106536110bc366004615b12565b61444e565b6109bf614764565b6106536110d73660046152f6565b6147c5565b6106536110ea366004615bc5565b614849565b61070b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610653611124366004615218565b6148e6565b610a516111373660046153c9565b614957565b61065361114a366004615218565b6149f3565b61062361115d3660046152c4565b614a59565b610653611170366004615218565b614a91565b610653611183366004615313565b614b1a565b61070b60205481565b600454610623906001600160a01b031681565b6106536111b2366004615218565b614bb6565b61070b6111c53660046153c9565b602960209081526000938452604080852082529284528284209052825290205481565b6111fb6111f63660046153c9565b614c2d565b6040516106379190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b61070b601c5481565b610653611260366004615be2565b614ce1565b61070b600e5481565b61070b61127c3660046152f6565b6001600160a01b03166000908152602e602052604090205490565b6106536112a53660046152f6565b614d8b565b61070b60145481565b600c54610623906001600160a01b031681565b600654610623906001600160a01b031681565b61070b601e5481565b6106536112f03660046152f6565b614e09565b61062373b0897686c545045afc77cf20ec7a532e3120e0f181565b61070b60235481565b601a546001600160a01b0316331461133057600080fd5b80516001600160a01b031661134457600080fd5b6113516007826005614f50565b507f89a3bfeda71ede5f8735aa09127c97cd56aa3803356c52f7c30caf418238b464816040516113819190615c1a565b60405180910390a150565b601a546001600160a01b031633146113a357600080fd5b60328110156113b157600080fd5b6012819055604080518181526006918101919091526506d6178536c560d41b606082015260208101829052600080516020615ee583398151915290608001611381565b6113fc614fa8565b611404614fa8565b61140c614fa8565b611414614fa8565b6000805b6023548110156118275760008181526031602090815260408083208054825181850281018501909352808352919290919083018282801561148257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611464575b5050505050905060005b815181101561180f576000602860008484815181106114ad576114ad615c04565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085815260200190815260200160002054905060005b81156117f65760006026600086868151811061150a5761150a615c04565b6020908102919091018101516001600160a01b03908116835282820193909352604091820160009081208a825282528281208682528252828120835161014081018552815486168152600182015493810193909352600281015483850152600381015460608401526004808201546080850152600582015460a0850152600682015460ff16151560c0850152600782015460e0850152600882015461010085015260099091015461012084015280549351631ad6f65d60e21b815292955090939290921691636b5bd974916115e191869101615472565b6040805180830381865afa1580156115fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116219190615c4b565b50905080156116b45781518b896064811061163e5761163e615c04565b6001600160a01b03909216602092909202015260028c896064811061166557611665615c04565b60200201818152505081602001518a896064811061168557611685615c04565b602002015260408201518989606481106116a1576116a1615c04565b6020020152876116b081615c90565b9850505b600480546040516340b6159760e01b81526000926001600160a01b03909216916340b61597916116e691879101615472565b6040805180830381865afa158015611702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117269190615c4b565b509050808015611734575081155b156117c35782518c8a6064811061174d5761174d615c04565b6001600160a01b03909216602092909202015260048d8a6064811061177457611774615c04565b60200201818152505082602001518b8a6064811061179457611794615c04565b602002015260408301518a8a606481106117b0576117b0615c04565b6020020152886117bf81615c90565b9950505b886063036117d3575050506117f6565b846117dd81615ca9565b95505083806117eb90615c90565b9450505050506114ec565b8560630361180557505061180f565b505060010161148c565b508260630361181e5750611827565b50600101611418565b509091929394565b601a546001600160a01b0316331461184657600080fd5b6000828152603360205260409020819060020155604080516060808252601390820152720dac2f09ee0cadc92dce8cae4cae6e8ae8aa89606b1b6080820152602081018490529081018290527f957cd67ea49f3e1ee953cdd23a1ba1f11d973e842411220d5c24ef0e24e1c9569060a00160405180910390a15050565b601a546001600160a01b031633146118da57600080fd5b61012c8110156118e957600080fd5b6011819055604080518181526008918101919091526706d61784761696e560c41b606082015260208101829052600080516020615ee583398151915290608001611381565b601a546001600160a01b0316331461194557600080fd5b6001600160a01b03811661195857600080fd5b600d80546001600160a01b0319166001600160a01b03831690811790915560408051818152600f918101919091526e3a37b5b2b72ba2aa242937baba32b960891b60608201526020810191909152600080516020615f0583398151915290608001611381565b3360009081526036602052604090205460ff166119f65760405162461bcd60e51b81526004016119ed90615cc0565b60405180910390fd5b6000908152602d6020526040812080546001600160a01b03199081168255600182018390556002820180549091169055600381018290556004810191909155600501805460ff19169055565b3360009081526036602052604090205460ff16611a715760405162461bcd60e51b81526004016119ed90615cc0565b6001600160a01b03821660009081526025602052604081206002018054839290611a9c908490615ce3565b90915550505050565b611adb6040805160c08101825260008082526020820181905291810182905260608101829052608081018290529060a082015290565b6000828152602d6020908152604091829020825160c08101845281546001600160a01b039081168252600183015493820193909352600282015490921692820192909252600382015460608201526004808301546080830152600583015491929160a084019160ff90911690811115611b5657611b5661533f565b6004811115611b6757611b6761533f565b90525092915050565b60078160058110611b8057600080fd5b01546001600160a01b0316905081565b3360009081526036602052604090205460ff16611bbf5760405162461bcd60e51b81526004016119ed90615cc0565b6001600160a01b03909116600090815260256020526040902055565b6000805b600e54811015611c2e576001600160a01b038416600090815260266020908152604080832086845282528083208484529091528120600701549003611c2657809150611c2e565b600101611bdf565b5092915050565b611c3d614fc7565b506001600160a01b0380841660009081526026602090815260408083208684528252808320858452825291829020825161014081018452815490941684526001810154918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460ff16151560c0830152600781015460e08301526008810154610100830152600901546101208201525b9392505050565b602b8181548110611cf757600080fd5b60009182526020909120600d9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b8c0154600c909c01546001600160a01b03909b169c50989a97999698959760ff90951696939592949193909291908d565b60158160058110611d7e57600080fd5b0154905081565b601a546001600160a01b03163314611d9c57600080fd5b60008111611da957600080fd5b60138190556040805181815260179181019190915276191959985d5b1d13195d995c9859d9555b9b1bd8dad959604a1b606082015260208101829052600080516020615ee583398151915290608001611381565b601a546001600160a01b03163314611e1457600080fd5b6001600160a01b038116611e2757600080fd5b600380546001600160a01b0319166001600160a01b03831690811790915560408051818152600491810191909152631c1bdbdb60e21b60608201526020810191909152600080516020615f0583398151915290608001611381565b6000805b600e54811015611c2e57611e9b848483614957565b611ea757809150611c2e565b600101611e86565b601a546001600160a01b03163314611ec657600080fd5b6001600160a01b038116611ed957600080fd5b600280546001600160a01b0319166001600160a01b03831690811790915560408051818152600f918101919091526e383934b1b2a0b3b3b932b3b0ba37b960891b60608201526020810191909152600080516020615f0583398151915290608001611381565b3360009081526036602052604090205460ff16611f6e5760405162461bcd60e51b81526004016119ed90615cc0565b8015611ff5576006546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990611fa69086908690600401615cf6565b600060405180830381600087803b158015611fc057600080fd5b505af1158015611fd4573d6000803e3d6000fd5b505050508160216000828254611fea9190615ce3565b909155506120719050565b600654604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906120279086908690600401615cf6565b600060405180830381600087803b15801561204157600080fd5b505af1158015612055573d6000803e3d6000fd5b50505050816020600082825461206b9190615ce3565b90915550505b505050565b61207e615025565b6040805160a08101918290529060159060059082845b815481526020019060010190808311612094575b5050505050905090565b601a546001600160a01b031633146120c957600080fd5b6001600160a01b0381166120dc57600080fd5b6001600160a01b038116600081815260366020908152604091829020805460ff1916905590519182527ff9cf924d7d98e6e0a27ec523cd7214b0bbdfaba197018b33b41a702f5238190e9101611381565b6001600160a01b0381166000908152602e602090815260409182902080548351818402810184019094528084526060939283018282801561218d57602002820191906000526020600020905b815481526020019060010190808311612179575b50505050509050919050565b60008181526031602090815260409182902080548351818402810184019094528084526060939283018282801561218d57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116121db5750505050509050919050565b3360009081526036602052604090205460ff166122335760405162461bcd60e51b81526004016119ed90615cc0565b60025460405163b9e0336f60e01b8152600481018490526024810183905273b0897686c545045afc77cf20ec7a532e3120e0f1916323b872dd9186916001600160a01b031690819063b9e0336f90604401602060405180830381865afa1580156122a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122c59190615d0f565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b6020604051808303816000875af115801561231a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061233e9190615d28565b50505050565b601a546001600160a01b0316331461235b57600080fd5b6001600160a01b03811661236e57600080fd5b600c80546001600160a01b0319166001600160a01b03831690811790915560408051818152600591810191909152641d985d5b1d60da1b60608201526020810191909152600080516020615f0583398151915290608001611381565b601a546001600160a01b031633146123e157600080fd5b6001600160a01b0381166123f457600080fd5b602480546001810182556000919091527f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec40180546001600160a01b0319166001600160a01b0383169081179091556040519081527fd1be2e90bd3d24839d9dd94ad871068e1f9688b02fa43f2a62c9975dfa9de2d790602001611381565b3360009081526036602052604090205460ff166124a15760405162461bcd60e51b81526004016119ed90615cc0565b600082815260356020526040812043905560228054839290611a9c908490615ce3565b603360205281600052604060002081600381106124e057600080fd5b01549150829050565b601a546001600160a01b0316331461250057600080fd5b60048054604080516358c3de9360e11b815290516001600160a01b039092169263b187bd269282820192602092908290030181865afa158015612547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061256b9190615d28565b80156125e95750600560009054906101000a90046001600160a01b03166001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e99190615d28565b6126225760405162461bcd60e51b815260206004820152600a6024820152691393d517d4105554d15160b21b60448201526064016119ed565b6001600160a01b03811661263557600080fd5b600680546001600160a01b0319166001600160a01b03831690811790915560408051818152600591810191909152643a37b5b2b760d91b60608201526020810191909152600080516020615f0583398151915290608001611381565b612699615043565b506000908152602c602090815260409182902082516102008101845281546001600160a01b031660c08201908152600183015460e08301526002830154610100830152600383015461012083015260048301546101408301526005830154610160830152600683015460ff16151561018083015260078301546101a083015260088301546101c083015260098301546101e08301528152600a82015492810192909252600b81015492820192909252600c8201546060820152600d8201546080820152600e9091015460a082015290565b3360009081526036602052604090205460ff166127995760405162461bcd60e51b81526004016119ed90615cc0565b6001600160a01b038416600081815260266020908152604080832087845282528083208684528252808320938352602782528083208784528252808320868452909152812060078301549091036127f157505061233e565b60089091018290554360039091015550505050565b3360009081526036602052604090205460ff166128355760405162461bcd60e51b81526004016119ed90615cc0565b6000818152602d6020908152604091829020845181546001600160a01b03199081166001600160a01b03928316178355928601516001808401919091559386015160028301805490941691161790915560608401516003820155608084015160048083019190915560a085015160058301805487959293919260ff199091169184908111156128c6576128c661533f565b021790555050505050565b6060602b805480602002602001604051908101604052809291908181526020016000905b828210156129b7576000848152602090819020604080516101a081018252600d860290920180546001600160a01b03168352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460ff16151560a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610120840152600a810154610140840152600b810154610160840152600c015461018083015290835290920191016128f5565b50505050905090565b3360009081526036602052604090205460ff166129ef5760405162461bcd60e51b81526004016119ed90615cc0565b306001600160a01b03841603612a365760005460405163a9059cbb60e01b8152620100009091046001600160a01b03169063a9059cbb906122fb9085908590600401615cf6565b6000546040516323b872dd60e01b81526001600160a01b03858116600483015284811660248301526044820184905262010000909204909116906323b872dd906064016122fb565b601a546001600160a01b03163314612a9557600080fd5b60008111612aa257600080fd5b600f81905560408051818152601191810191909152706d6178547261646573506572426c6f636b60781b606082015260208101829052600080516020615ee583398151915290608001611381565b3360009081526036602052604090205460ff16612b1f5760405162461bcd60e51b81526004016119ed90615cc0565b6001600160a01b03831660008181526026602090815260408083208684528252808320858452825280832093835260278252808320868452825280832085845290915281206007830154909103612b77575050505050565b60028101546006830154612b9291869160009060ff16614e93565b6001600160a01b0385166000908152602860209081526040808320878452909152902054600103612cff576001600160a01b0385166000908152603260209081526040808320878452825280832054603190925290912080548190612bf990600190615d45565b81548110612c0957612c09615c04565b9060005260206000200160009054906101000a90046001600160a01b0316818381548110612c3957612c39615c04565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160326000838581548110612c7e57612c7e615c04565b60009182526020808320909101546001600160a01b03908116845283820194909452604092830182208b8352815282822094909455918a16825260328352808220898352909252908120558054819080612cda57612cda615d58565b600082815260209020810160001990810180546001600160a01b031916905501905550505b6001600160a01b03851660008181526026602090815260408083208884528252808320878452825280832080546001600160a01b03191681556001808201859055600280830186905560038084018790556004808501889055600580860189905560068601805460ff19908116909155600787018a9055600887018a90556009909601899055898952602788528689208e8a5288528689208d8a52885286892089815594850189905592840188905590830187905582018690550180549091169055928252602881528282208783529052908120805491612ddf83615ca9565b9091555050436000908152603460205260408120805491612dff83615c90565b919050555081604051612e129190615d6e565b604051908190038120907f27da8e9ce15b7acef76d7ad1c9eeaa7a11d169ef774cc7a05d2aa1778c286e6e90600090a25050505050565b3360009081526036602052604090205460ff16612e785760405162461bcd60e51b81526004016119ed90615cc0565b6001600160a01b03808316600090815260256020526040902090821615801590612ead575060018101546001600160a01b0316155b8015612ecb5750826001600160a01b0316826001600160a01b031614155b612ee25760018101546001600160a01b0316612ee4565b815b60019190910180546001600160a01b0319166001600160a01b039092169190911790555050565b3360009081526036602052604090205460ff16612f3a5760405162461bcd60e51b81526004016119ed90615cc0565b6001600160a01b03841660008181526026602090815260408083208784528252808320868452825280832093835260278252808320878452825280832086845290915281206007830154909103612f9257505061233e565b60099091018290554360049091015550505050565b601a546001600160a01b03163314612fbe57600080fd5b6001600160a01b038116612fd157600080fd5b600480546001600160a01b0319166001600160a01b038316908117909155604080518181526007918101919091526674726164696e6760c81b60608201526020810191909152600080516020615f0583398151915290608001611381565b3360009081526036602052604090205460ff1661305e5760405162461bcd60e51b81526004016119ed90615cc0565b613069838383614957565b15612071576001600160a01b03831660009081526029602090815260408083208584528252808320848452909152902054602b80546130aa90600190615d45565b815481106130ba576130ba615c04565b90600052602060002090600d0201602b82815481106130db576130db615c04565b6000918252602082208354600d9092020180546001600160a01b0319166001600160a01b0390921691909117815560018084015490820155600280840154908201556003808401549082015560048084015490820155600580840154908201805460ff909216151560ff1990921691909117905560068084015490820155600780840154908201556008808401549082015560098084015490820155600a8084015490820155600b8084015490820155600c92830154920191909155602b805483926029929091849081106131b2576131b2615c04565b60009182526020808320600d909202909101546001600160a01b031683528201929092526040018120602b8054919291859081106131f2576131f2615c04565b90600052602060002090600d02016001015481526020019081526020016000206000602b848154811061322757613227615c04565b600091825260208083206002600d90930201919091015483528281019390935260409182018120939093556001600160a01b0387168352602982528083208684528252808320858452909152812055602b80548061328757613287615d58565b60008281526020808220600d6000199094019384020180546001600160a01b03191681556001810183905560028101839055600381018390556004810183905560058101805460ff1916905560068101839055600781018390556008810183905560098101839055600a8101839055600b8101839055600c01829055919092556001600160a01b0386168252602a81526040808320868452909152812080549161333083615ca9565b919050555050505050565b3360009081526036602052604090205460ff1661336a5760405162461bcd60e51b81526004016119ed90615cc0565b61338961337a60208301836152f6565b82602001358360400135614957565b15613467576000602b6029826133a260208601866152f6565b6001600160a01b03168152602080820192909252604090810160009081208684013582528352818120868301358252909252902054815481106133e7576133e7615c04565b90600052602060002090600d02019050816060013581600301819055508160a00160208101906134179190615dec565b60058201805460ff191691151591909117905560c0820135600682015560e0820135600782015561010082013560088201556101208201356009820155610140820135600a82015543600b909101555b50565b6134e0604051806101a0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6134eb848484614957565b6134f457600080fd5b6001600160a01b03841660009081526029602090815260408083208684528252808320858452909152902054602b8054909190811061353557613535615c04565b6000918252602091829020604080516101a081018252600d90930290910180546001600160a01b031683526001810154938301939093526002830154908201526003820154606082015260048201546080820152600582015460ff16151560a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c9091015461018082015290509392505050565b602e602052816000526040600020818154811061360957600080fd5b90600052602060002001600091509150505481565b600054610100900460ff161580801561363e5750600054600160ff909116105b806136585750303b158015613658575060005460ff166001145b6136bb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016119ed565b6000805460ff1916600117905580156136de576000805461ff0019166101001790555b600080546001600160a01b03808716620100000262010000600160b01b031990921691909117909155601a80548583166001600160a01b031991821617909155601b80549285169282169290921790915560068054909116737075cab6bcca06613e2d071bd918d1a0241379e21790556040805160a08101825273f9a4c522e327935bd1f5a338c121e14e4cc1f89881527377cd42b925e1a82f41d852d6be727cfc88fddbbc6020820152733378ad81d09de23725ee9b9270635c97ed601921918101919091527302e2c5825c1a3b69c0417706dbe1327c2af3e6c26060820152732d266a94469d05c9e06d52a4d0d9c23b157767c260808201526137e7906007906005614f50565b506003600e556005600f818155601082905561038460115560506012556032601381905560149081556040805160a0810182529283526020830191909152601990820152601e606082015260236080820152613846916015919061507f565b50801561233e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b3360009081526036602052604090205460ff166138c15760405162461bcd60e51b81526004016119ed90615cc0565b6138d382600001518360200151611bdb565b604083810191825283516001600160a01b0390811660009081526026602090815283822081880180518452908252848320865184528252848320885181546001600160a01b031916951694851781558151600182015595516002870155606088015160038701556080880151600487015560a0880151600587015560c088015160068701805460ff191691151591909117905560e088015160078701556101008801516008870155610120880151600990960195909555918152602882528281209351815292905281208054916139a983615c90565b90915550504360009081526034602052604081208054916139c983615c90565b909155505081516001600160a01b03166000908152602860209081526040808320828601518452909152902054600103613a6957602082810180516000908152603180845260408083205487516001600160a01b039081168552603287528285208651865287528285209190915593518352908452812085518154600181018355918352939091200180546001600160a01b031916929091169190911790555b600060a0820181815283516001600160a01b031682526027602090815260408084208287018051865290835281852082880151865283529381902085518155918501516001808401919091559085015160028301819055606086015160038401556080860151600484015592516005909201805460ff191692151592909217909155915160c0850151613aff9391929190614e93565b81604051613b0d9190615e09565b604051908190038120907f58afb50c04302a400c4c6a6987d5992be730e9ea9e499ce4f610996a40f9fe1990600090a25050565b60248181548110613b5157600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526036602052604090205460ff16613b9a5760405162461bcd60e51b81526004016119ed90615cc0565b8251516001600160a01b039081166000908152602e6020908152604080832080546001808201835591855283852001879055868452602c8352928190208751805182546001600160a01b031916961695909517815591840151928201929092558282015160028201556060808401516003830155608080850151600484015560a080860151600585015560c086015160068501805460ff191691151591909117905560e08601516007850155610100860151600885015561012090950151600984015592870151600b830155860151600c82015590850151600d82015590840151600e82015543600a909101558015613ccc578251516001600160a01b03166000908152602f60209081526040808320865183015184529091528120805491613cc283615c90565b9190505550505050565b8251516001600160a01b03166000908152603060209081526040808320865183015184529091528120805491613d0183615c90565b90915550508251516001600160a01b03166000908152602760209081526040808320865183015184528252808320865182015184529091529020600501805460ff19166001179055505050565b3360009081526036602052604090205460ff16613d7d5760405162461bcd60e51b81526004016119ed90615cc0565b6000828152602c6020908152604080832081516102008101835281546001600160a01b031660c08201818152600184015460e08401526002840154610100840152600384015461012084015260048401546101408401526005840154610160840152600684015460ff16151561018084015260078401546101a084015260088401546101c084015260098401546101e08401528252600a83015482860152600b83015482850152600c8301546060830152600d8301546080830152600e9092015460a0820152908452602e909252822090915b81548110156140405784828281548110613e6c57613e6c615c04565b906000526020600020015403614038578315613ec1578251516001600160a01b03166000908152602f60209081526040808320865183015184529091528120805491613eb783615ca9565b9190505550613f3c565b8251516001600160a01b03166000908152603060209081526040808320865183015184529091528120805491613ef683615ca9565b90915550508251516001600160a01b03166000908152602760209081526040808320865183015184528252808320865182015184529091529020600501805460ff191690555b81548290613f4c90600190615d45565b81548110613f5c57613f5c615c04565b9060005260206000200154828281548110613f7957613f79615c04565b906000526020600020018190555081805480613f9757613f97615d58565b600082815260208082208301600019908101839055909201909255868252602c90526040812080546001600160a01b0319168155600181018290556002810182905560038101829055600481018290556005810182905560068101805460ff19169055600781018290556008810182905560098101829055600a8101829055600b8101829055600c8101829055600d8101829055600e015550614044915050565b600101613e50565b5050505b5050565b601a546001600160a01b0316331461405f57600080fd5b6001600160a01b03811661407257600080fd5b601a80546001600160a01b0319166001600160a01b038316908117909155604080518181526003918101919091526233b7bb60e91b60608201526020810191909152600080516020615f0583398151915290608001611381565b3360009081526036602052604081205460ff166140fb5760405162461bcd60e51b81526004016119ed90615cc0565b600254604051630710f2ff60e51b8152600481018790526064916402540be400916001600160a01b039091169063e21e5fe090602401602060405180830381865afa15801561414e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141729190615d0f565b61417c9087615e9c565b6141869190615eb3565b6141909190615eb3565b9050816141a5576141a2600282615eb3565b90505b82156141e15780601f60008282546141bd9190615ce3565b9250508190555080601d60008282546141d69190615ce3565b909155506142129050565b80601e60008282546141f39190615ce3565b9250508190555080601c600082825461420c9190615ce3565b90915550505b61421d600282615e9c565b95945050505050565b601a546001600160a01b0316331461423d57600080fd5b600654601b54601c546040516340c10f1960e01b81526001600160a01b03938416936340c10f199361427493911691600401615cf6565b600060405180830381600087803b15801561428e57600080fd5b505af11580156142a2573d6000803e3d6000fd5b5050600654601a54601e546040516340c10f1960e01b81526001600160a01b0393841695506340c10f1994506142de9390921691600401615cf6565b600060405180830381600087803b1580156142f857600080fd5b505af115801561430c573d6000803e3d6000fd5b50505050601e54601c546143209190615ce3565b602160008282546143319190615ce3565b9091555050600054601a54601f5460405163a9059cbb60e01b81526001600160a01b036201000090940484169363a9059cbb9361437393911691600401615cf6565b6020604051808303816000875af1158015614392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143b69190615d28565b50600054601b54601d5460405163a9059cbb60e01b81526001600160a01b036201000090940484169363a9059cbb936143f493911691600401615cf6565b6020604051808303816000875af1158015614413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144379190615d28565b506000601c819055601e819055601d819055601f55565b3360009081526036602052604090205460ff1661447d5760405162461bcd60e51b81526004016119ed90615cc0565b61448f81600001518260200151611e82565b60408201908152436101608301908152602b805460018082018355600083905285517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e4f600d90930292830180546001600160a01b0319166001600160a01b0390921691909117905560208601517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e5083015593517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e5182015560608501517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e5282015560808501517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e5382015560a08501517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e548201805460ff191691151591909117905560c08501517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e5582015560e08501517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e568201556101008501517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e578201556101208501517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e588201556101408501517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e5982015591517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e5a8301556101808401517f11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e5b90920191909155546146fe9190615d45565b81516001600160a01b0390811660009081526029602090815260408083208287018051855290835281842082880151855283528184209590955585519093168252602a81528282209351825292909252812080549161475c83615c90565b919050555050565b606060248054806020026020016040519081016040528092919081815260200182805480156120a857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161479e575050505050905090565b601a546001600160a01b031633146147dc57600080fd5b6001600160a01b0381166147ef57600080fd5b601b80546001600160a01b0319166001600160a01b03831690811790915560408051818152600391810191909152623232bb60e91b60608201526020810191909152600080516020615f0583398151915290608001611381565b3360009081526036602052604090205460ff166148785760405162461bcd60e51b81526004016119ed90615cc0565b80516001600160a01b031660009081526026602090815260408083208285015184528252808320818501518452909152812060078101549091036148ba575050565b606082015160038201556080820151600482015560a0820151600582015560e082015160079091015550565b601a546001600160a01b031633146148fd57600080fd5b6000811161490a57600080fd5b600e819055604080518181526010918101919091526f36b0bc2a3930b232b9a832b92830b4b960811b606082015260208101829052600080516020615ee583398151915290608001611381565b602b54600090810361496b57506000611ce0565b6001600160a01b03841660009081526029602090815260408083208684528252808320858452909152812054602b805490919081106149ac576149ac615c04565b60009182526020909120600d9091020180549091506001600160a01b0386811691161480156149de5750838160010154145b801561421d5750600201549091149392505050565b601a546001600160a01b03163314614a0a57600080fd5b601481905560408051818152601291810191909152716e66745375636365737354696d656c6f636b60701b606082015260208101829052600080516020615ee583398151915290608001611381565b60316020528160005260406000208181548110614a7557600080fd5b6000918252602090912001546001600160a01b03169150829050565b3360009081526036602052604090205460ff16614ac05760405162461bcd60e51b81526004016119ed90615cc0565b600354604051633104b73f60e21b8152600481018390526001600160a01b039091169063c412dcfc90602401600060405180830381600087803b158015614b0657600080fd5b505af1158015614040573d6000803e3d6000fd5b3360009081526036602052604090205460ff16614b495760405162461bcd60e51b81526004016119ed90615cc0565b6000546040516340c10f1960e01b8152620100009091046001600160a01b0316906340c10f1990614b809085908590600401615cf6565b600060405180830381600087803b158015614b9a57600080fd5b505af1158015614bae573d6000803e3d6000fd5b505050505050565b601a546001600160a01b03163314614bcd57600080fd5b60008111614bda57600080fd5b601081905560408051818152601691810191909152756d617850656e64696e674d61726b65744f726465727360501b606082015260208101829052600080516020615ee583398151915290608001611381565b614c686040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b506001600160a01b03929092166000908152602760209081526040808320938352928152828220938252928352819020815160c0810183528154815260018201549381019390935260028101549183019190915260038101546060830152600481015460808301526005015460ff16151560a082015290565b601a546001600160a01b03163314614cf857600080fd5b803515801590614d0c575080356020820135115b8015614d1f575060208101356040820135115b8015614d32575060408101356060820135115b8015614d45575060608101356080820135115b614d4e57600080fd5b614d5b60158260056150b2565b507fdaae5e047a75b6f38ad4e279cdefe910fc35d5a99a91b8303bd948c0a999372a816040516113819190615ed5565b601a546001600160a01b03163314614da257600080fd5b6001600160a01b038116614db557600080fd5b6001600160a01b038116600081815260366020908152604091829020805460ff1916600117905590519182527fb692fa98cbec9bd705572b4c7e0927e3f7698e9fe526dcef6f40f3d4d4980ca39101611381565b601a546001600160a01b03163314614e2057600080fd5b6001600160a01b038116614e3357600080fd5b600580546001600160a01b0319166001600160a01b038316908117909155604080518181526009918101919091526863616c6c6261636b7360b81b60608201526020810191909152600080516020615f0583398151915290608001611381565b600081614ea1576001614ea4565b60005b600086815260336020526040902060ff91909116915083614ee35784818360038110614ed257614ed2615c04565b0154614ede9190615d45565b614f02565b84818360038110614ef657614ef6615c04565b0154614f029190615ce3565b818360038110614f1457614f14615c04565b01558054600182015460405188907f6da9a00899a8a4900c75b0c762b64375242e6c0fa1e5bd9e5c5b663bdbdfe13c90600090a4505050505050565b8260058101928215614f98579160200282015b82811115614f9857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614f63565b50614fa49291506150e0565b5090565b60405180610c8001604052806064906020820280368337509192915050565b60405180610140016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081525090565b6040518060a001604052806005906020820280368337509192915050565b6040518060c00160405280615056614fc7565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b8260058101928215614f98579160200282015b82811115614f98578251829060ff16905591602001919060010190615092565b8260058101928215614f98579160200282015b82811115614f985782358255916020019190600101906150c5565b5b80821115614fa457600081556001016150e1565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561512e5761512e6150f5565b60405290565b604051610140810167ffffffffffffffff8111828210171561512e5761512e6150f5565b6040516101a0810167ffffffffffffffff8111828210171561512e5761512e6150f5565b6001600160a01b038116811461346757600080fd5b600060a082840312156151a357600080fd5b82601f8301126151b257600080fd5b60405160a0810181811067ffffffffffffffff821117156151d5576151d56150f5565b6040528060a08401858111156151ea57600080fd5b845b8181101561520d5780356151ff8161517c565b8352602092830192016151ec565b509195945050505050565b60006020828403121561522a57600080fd5b5035919050565b8060005b606481101561233e578151845260209384019390910190600101615235565b61322081016152638288615231565b610c8082018660005b60648110156152945781516001600160a01b031683526020928301929091019060010161526c565b5050506152a5611900830186615231565b6152b3612580830185615231565b826132008301529695505050505050565b600080604083850312156152d757600080fd5b50508035926020909101359150565b80356152f18161517c565b919050565b60006020828403121561530857600080fd5b8135611ce08161517c565b6000806040838503121561532657600080fd5b82356153318161517c565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b6005811061537357634e487b7160e01b600052602160045260246000fd5b9052565b600060c08201905060018060a01b038084511683526020840151602084015280604085015116604084015250606083015160608301526080830151608083015260a0830151611c2e60a0840182615355565b6000806000606084860312156153de57600080fd5b83356153e98161517c565b95602085013595506040909401359392505050565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015161545060c084018215159052565b5060e08181015190830152610100808201519083015261012090810151910152565b610140810161548182846153fe565b92915050565b801515811461346757600080fd5b80356152f181615487565b6000806000606084860312156154b557600080fd5b83356154c08161517c565b92506020840135915060408401356154d781615487565b809150509250925092565b60a08101818360005b600581101561550a5781518352602092830192909101906001016154eb565b50505092915050565b6020808252825182820181905260009190848201906040850190845b8181101561554b5783518352928401929184019160010161552f565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561554b5783516001600160a01b031683529284019291840191600101615573565b60006101e0820190506155ac8284516153fe565b60208301516101408301526040830151610160830152606083015161018083015260808301516101a083015260a0909201516101c09091015290565b600080600080608085870312156155fe57600080fd5b84356156098161517c565b966020860135965060408601359560600135945092505050565b60008082840360e081121561563757600080fd5b60c081121561564557600080fd5b5061564e61510b565b83356156598161517c565b81526020848101359082015260408401356156738161517c565b80604083015250606084013560608201526080840135608082015260a0840135600581106156a057600080fd5b60a08201529460c0939093013593505050565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a08101516156fb60a084018215159052565b5060c0818101519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018090810151910152565b6020808252825182820181905260009190848201906040850190845b8181101561554b576157778385516156b3565b928401926101a09290920191600101615764565b6000806000606084860312156157a057600080fd5b83356157ab8161517c565b925060208401356157bb8161517c565b929592945050506040919091013590565b6001600160a01b0387811682526020820187905285166040820152606081018490526080810183905260c0810161580660a0830184615355565b979650505050505050565b6000806040838503121561582457600080fd5b823561582f8161517c565b9150602083013561583f8161517c565b809150509250929050565b6101e0810161585982896153fe565b6101408201969096526101608101949094526101808401929092526101a08301526101c090910152919050565b60006101a0828403121561589957600080fd5b50919050565b6101a0810161548182846156b3565b6000806000606084860312156158c357600080fd5b83356158ce8161517c565b925060208401356158de8161517c565b915060408401356154d78161517c565b6000610140828403121561590157600080fd5b615909615134565b9050615914826152e6565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015261595460c08301615495565b60c082015260e082013560e082015261010080830135818301525061012080830135818301525092915050565b60008082840361020081121561599657600080fd5b6159a085856158ee565b925060c061013f19820112156159b557600080fd5b506159be61510b565b6101408401358152610160840135602082015261018084013560408201526101a084013560608201526101c084013560808201526101e0840135615a0181615487565b60a0820152919491935090915050565b6000806000838503610220811215615a2857600080fd5b6101e080821215615a3857600080fd5b615a4061510b565b9150615a4c87876158ee565b82526101408601356020830152610160860135604083015261018086013560608301526101a086013560808301526101c086013560a08301529093508401359150615a9a6102008501615495565b90509250925092565b60008060408385031215615ab657600080fd5b82359150602083013561583f81615487565b60008060008060808587031215615ade57600080fd5b84359350602085013592506040850135615af781615487565b91506060850135615b0781615487565b939692955090935050565b60006101a08284031215615b2557600080fd5b615b2d615158565b615b36836152e6565b815260208301356020820152604083013560408201526060830135606082015260808301356080820152615b6c60a08401615495565b60a082015260c0838101359082015260e080840135908201526101008084013590820152610120808401359082015261014080840135908201526101608084013590820152610180928301359281019290925250919050565b60006101408284031215615bd857600080fd5b611ce083836158ee565b600060a08284031215615bf457600080fd5b8260a08301111561589957600080fd5b634e487b7160e01b600052603260045260246000fd5b60a08101818360005b600581101561550a5781516001600160a01b0316835260209283019290910190600101615c23565b60008060408385031215615c5e57600080fd5b8251615c6981615487565b602084015190925061583f81615487565b634e487b7160e01b600052601160045260246000fd5b600060018201615ca257615ca2615c7a565b5060010190565b600081615cb857615cb8615c7a565b506000190190565b60208082526009908201526868657265206865726560b81b604082015260600190565b8082018082111561548157615481615c7a565b6001600160a01b03929092168252602082015260400190565b600060208284031215615d2157600080fd5b5051919050565b600060208284031215615d3a57600080fd5b8151611ce081615487565b8181038181111561548157615481615c7a565b634e487b7160e01b600052603160045260246000fd5b81546001600160a01b0316815260018201546020820152600282015460408201526003820154606082015260048201546080820152600582015460a0820152600682015460ff16151560c0820152600782015460e08201526008820154610100820152600982015461012082015261014081015b5061014001919050565b600060208284031215615dfe57600080fd5b8135611ce081615487565b81516001600160a01b03168152602080830151908201526040808301519082015260608083015190820152615de2615e8e615e80615e73615e64615e57608087016080890151815260200190565b60a0880151815260200190565b60c08701511515815260200190565b60e0860151815260200190565b610100850151815260200190565b610120840151815260200190565b808202811582820484141761548157615481615c7a565b600082615ed057634e487b7160e01b600052601260045260246000fd5b500490565b60a0818101908383379291505056fe8cf3e35f6221b16e1670a3413180c9484bf5aa71787905909fa82a6a2662e9ab943e9d45a11aaae5d87503e3bc248665d9807856e5cf2bdb4a988bee44422781a2646970667358221220111855c43539f560e8c483415599f131efd66dafd4b9c336e3b7514febcd13dc64736f6c63430008170033",
  "deployedBytecode": "",
  "devdoc": {
    "events": {
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2892,
        "contract": "contracts/Storage.sol:Storage",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 2895,
        "contract": "contracts/Storage.sol:Storage",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 19286,
        "contract": "contracts/Storage.sol:Storage",
        "label": "WETH",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(TokenInterface)33144"
      },
      {
        "astId": 19289,
        "contract": "contracts/Storage.sol:Storage",
        "label": "oracle",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IOracle)31707"
      },
      {
        "astId": 19298,
        "contract": "contracts/Storage.sol:Storage",
        "label": "priceAggregator",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorInterfaceV1)30906"
      },
      {
        "astId": 19301,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pool",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(PoolInterfaceV5)32479"
      },
      {
        "astId": 19304,
        "contract": "contracts/Storage.sol:Storage",
        "label": "trading",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(PausableInterfaceV5)32471"
      },
      {
        "astId": 19307,
        "contract": "contracts/Storage.sol:Storage",
        "label": "callbacks",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(PausableInterfaceV5)32471"
      },
      {
        "astId": 19313,
        "contract": "contracts/Storage.sol:Storage",
        "label": "token",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(TokenInterface)33144"
      },
      {
        "astId": 19334,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nfts",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_contract(NftInterfaceV5)32010)5_storage"
      },
      {
        "astId": 19336,
        "contract": "contracts/Storage.sol:Storage",
        "label": "vault",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 19338,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tokenWETHRouter",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 19341,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxTradesPerPair",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 19344,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxTradesPerBlock",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 19347,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxPendingMarketOrders",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 19350,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxGainP",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 19353,
        "contract": "contracts/Storage.sol:Storage",
        "label": "maxSlP",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 19356,
        "contract": "contracts/Storage.sol:Storage",
        "label": "defaultLeverageUnlocked",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 19359,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nftSuccessTimelock",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 19369,
        "contract": "contracts/Storage.sol:Storage",
        "label": "spreadReductionsP",
        "offset": 0,
        "slot": "21",
        "type": "t_array(t_uint256)5_storage"
      },
      {
        "astId": 19371,
        "contract": "contracts/Storage.sol:Storage",
        "label": "gov",
        "offset": 0,
        "slot": "26",
        "type": "t_address"
      },
      {
        "astId": 19373,
        "contract": "contracts/Storage.sol:Storage",
        "label": "dev",
        "offset": 0,
        "slot": "27",
        "type": "t_address"
      },
      {
        "astId": 19375,
        "contract": "contracts/Storage.sol:Storage",
        "label": "devFeesToken",
        "offset": 0,
        "slot": "28",
        "type": "t_uint256"
      },
      {
        "astId": 19377,
        "contract": "contracts/Storage.sol:Storage",
        "label": "devFeesWETH",
        "offset": 0,
        "slot": "29",
        "type": "t_uint256"
      },
      {
        "astId": 19379,
        "contract": "contracts/Storage.sol:Storage",
        "label": "govFeesToken",
        "offset": 0,
        "slot": "30",
        "type": "t_uint256"
      },
      {
        "astId": 19381,
        "contract": "contracts/Storage.sol:Storage",
        "label": "govFeesWETH",
        "offset": 0,
        "slot": "31",
        "type": "t_uint256"
      },
      {
        "astId": 19383,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tokensBurned",
        "offset": 0,
        "slot": "32",
        "type": "t_uint256"
      },
      {
        "astId": 19385,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tokensMinted",
        "offset": 0,
        "slot": "33",
        "type": "t_uint256"
      },
      {
        "astId": 19387,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nftRewards",
        "offset": 0,
        "slot": "34",
        "type": "t_uint256"
      },
      {
        "astId": 19390,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pairs",
        "offset": 0,
        "slot": "35",
        "type": "t_uint256"
      },
      {
        "astId": 19400,
        "contract": "contracts/Storage.sol:Storage",
        "label": "supportedTokens",
        "offset": 0,
        "slot": "36",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 19405,
        "contract": "contracts/Storage.sol:Storage",
        "label": "traders",
        "offset": 0,
        "slot": "37",
        "type": "t_mapping(t_address,t_struct(Trader)19397_storage)"
      },
      {
        "astId": 19414,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openTrades",
        "offset": 0,
        "slot": "38",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)32559_storage)))"
      },
      {
        "astId": 19423,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openTradesInfo",
        "offset": 0,
        "slot": "39",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)32572_storage)))"
      },
      {
        "astId": 19429,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openTradesCount",
        "offset": 0,
        "slot": "40",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 19437,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openLimitOrderIds",
        "offset": 0,
        "slot": "41",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))"
      },
      {
        "astId": 19443,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openLimitOrdersCount",
        "offset": 0,
        "slot": "42",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 19447,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openLimitOrders",
        "offset": 0,
        "slot": "43",
        "type": "t_array(t_struct(OpenLimitOrder)32599_storage)dyn_storage"
      },
      {
        "astId": 19452,
        "contract": "contracts/Storage.sol:Storage",
        "label": "reqID_pendingMarketOrder",
        "offset": 0,
        "slot": "44",
        "type": "t_mapping(t_uint256,t_struct(PendingMarketOrder)32613_storage)"
      },
      {
        "astId": 19457,
        "contract": "contracts/Storage.sol:Storage",
        "label": "reqID_pendingNftOrder",
        "offset": 0,
        "slot": "45",
        "type": "t_mapping(t_uint256,t_struct(PendingNftOrder)32627_storage)"
      },
      {
        "astId": 19462,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pendingOrderIds",
        "offset": 0,
        "slot": "46",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 19468,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pendingMarketOpenCount",
        "offset": 0,
        "slot": "47",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 19474,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pendingMarketCloseCount",
        "offset": 0,
        "slot": "48",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 19479,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pairTraders",
        "offset": 0,
        "slot": "49",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 19485,
        "contract": "contracts/Storage.sol:Storage",
        "label": "pairTradersId",
        "offset": 0,
        "slot": "50",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 19491,
        "contract": "contracts/Storage.sol:Storage",
        "label": "openInterestWETH",
        "offset": 0,
        "slot": "51",
        "type": "t_mapping(t_uint256,t_array(t_uint256)3_storage)"
      },
      {
        "astId": 19495,
        "contract": "contracts/Storage.sol:Storage",
        "label": "tradesPerBlock",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 19499,
        "contract": "contracts/Storage.sol:Storage",
        "label": "nftLastSuccess",
        "offset": 0,
        "slot": "53",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 19503,
        "contract": "contracts/Storage.sol:Storage",
        "label": "isTradingContract",
        "offset": 0,
        "slot": "54",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(NftInterfaceV5)32010)5_storage": {
        "base": "t_contract(NftInterfaceV5)32010",
        "encoding": "inplace",
        "label": "contract NftInterfaceV5[5]",
        "numberOfBytes": "160"
      },
      "t_array(t_struct(OpenLimitOrder)32599_storage)dyn_storage": {
        "base": "t_struct(OpenLimitOrder)32599_storage",
        "encoding": "dynamic_array",
        "label": "struct StorageInterface.OpenLimitOrder[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)3_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[3]",
        "numberOfBytes": "96"
      },
      "t_array(t_uint256)5_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[5]",
        "numberOfBytes": "160"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorInterfaceV1)30906": {
        "encoding": "inplace",
        "label": "contract AggregatorInterfaceV1",
        "numberOfBytes": "20"
      },
      "t_contract(IOracle)31707": {
        "encoding": "inplace",
        "label": "contract IOracle",
        "numberOfBytes": "20"
      },
      "t_contract(NftInterfaceV5)32010": {
        "encoding": "inplace",
        "label": "contract NftInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_contract(PausableInterfaceV5)32471": {
        "encoding": "inplace",
        "label": "contract PausableInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_contract(PoolInterfaceV5)32479": {
        "encoding": "inplace",
        "label": "contract PoolInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_contract(TokenInterface)33144": {
        "encoding": "inplace",
        "label": "contract TokenInterface",
        "numberOfBytes": "20"
      },
      "t_enum(LimitOrder)32538": {
        "encoding": "inplace",
        "label": "enum StorageInterface.LimitOrder",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)32559_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct StorageInterface.Trade)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)32559_storage))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)32572_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct StorageInterface.TradeInfo)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)32572_storage))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Trader)19397_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Storage.Trader)",
        "numberOfBytes": "32",
        "value": "t_struct(Trader)19397_storage"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_uint256)3_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[3])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)3_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)32559_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct StorageInterface.Trade))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Trade)32559_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)32572_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct StorageInterface.TradeInfo))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(TradeInfo)32572_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(PendingMarketOrder)32613_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct StorageInterface.PendingMarketOrder)",
        "numberOfBytes": "32",
        "value": "t_struct(PendingMarketOrder)32613_storage"
      },
      "t_mapping(t_uint256,t_struct(PendingNftOrder)32627_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct StorageInterface.PendingNftOrder)",
        "numberOfBytes": "32",
        "value": "t_struct(PendingNftOrder)32627_storage"
      },
      "t_mapping(t_uint256,t_struct(Trade)32559_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct StorageInterface.Trade)",
        "numberOfBytes": "32",
        "value": "t_struct(Trade)32559_storage"
      },
      "t_mapping(t_uint256,t_struct(TradeInfo)32572_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct StorageInterface.TradeInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(TradeInfo)32572_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(OpenLimitOrder)32599_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.OpenLimitOrder",
        "members": [
          {
            "astId": 32574,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trader",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 32576,
            "contract": "contracts/Storage.sol:Storage",
            "label": "pairIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 32578,
            "contract": "contracts/Storage.sol:Storage",
            "label": "index",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 32580,
            "contract": "contracts/Storage.sol:Storage",
            "label": "positionSize",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 32582,
            "contract": "contracts/Storage.sol:Storage",
            "label": "spreadReductionP",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 32584,
            "contract": "contracts/Storage.sol:Storage",
            "label": "buy",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 32586,
            "contract": "contracts/Storage.sol:Storage",
            "label": "leverage",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 32588,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 32590,
            "contract": "contracts/Storage.sol:Storage",
            "label": "sl",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 32592,
            "contract": "contracts/Storage.sol:Storage",
            "label": "minPrice",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 32594,
            "contract": "contracts/Storage.sol:Storage",
            "label": "maxPrice",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 32596,
            "contract": "contracts/Storage.sol:Storage",
            "label": "block",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 32598,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenId",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(PendingMarketOrder)32613_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.PendingMarketOrder",
        "members": [
          {
            "astId": 32602,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trade",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Trade)32559_storage"
          },
          {
            "astId": 32604,
            "contract": "contracts/Storage.sol:Storage",
            "label": "block",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 32606,
            "contract": "contracts/Storage.sol:Storage",
            "label": "wantedPrice",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 32608,
            "contract": "contracts/Storage.sol:Storage",
            "label": "slippageP",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256"
          },
          {
            "astId": 32610,
            "contract": "contracts/Storage.sol:Storage",
            "label": "spreadReductionP",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256"
          },
          {
            "astId": 32612,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenId",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "480"
      },
      "t_struct(PendingNftOrder)32627_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.PendingNftOrder",
        "members": [
          {
            "astId": 32615,
            "contract": "contracts/Storage.sol:Storage",
            "label": "nftHolder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 32617,
            "contract": "contracts/Storage.sol:Storage",
            "label": "nftId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 32619,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trader",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 32621,
            "contract": "contracts/Storage.sol:Storage",
            "label": "pairIndex",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 32623,
            "contract": "contracts/Storage.sol:Storage",
            "label": "index",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 32626,
            "contract": "contracts/Storage.sol:Storage",
            "label": "orderType",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(LimitOrder)32538"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Trade)32559_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.Trade",
        "members": [
          {
            "astId": 32540,
            "contract": "contracts/Storage.sol:Storage",
            "label": "trader",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 32542,
            "contract": "contracts/Storage.sol:Storage",
            "label": "pairIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 32544,
            "contract": "contracts/Storage.sol:Storage",
            "label": "index",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 32546,
            "contract": "contracts/Storage.sol:Storage",
            "label": "initialPosToken",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 32548,
            "contract": "contracts/Storage.sol:Storage",
            "label": "positionSizeWETH",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 32550,
            "contract": "contracts/Storage.sol:Storage",
            "label": "openPrice",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 32552,
            "contract": "contracts/Storage.sol:Storage",
            "label": "buy",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 32554,
            "contract": "contracts/Storage.sol:Storage",
            "label": "leverage",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 32556,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 32558,
            "contract": "contracts/Storage.sol:Storage",
            "label": "sl",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(TradeInfo)32572_storage": {
        "encoding": "inplace",
        "label": "struct StorageInterface.TradeInfo",
        "members": [
          {
            "astId": 32561,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 32563,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tokenPriceWETH",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 32565,
            "contract": "contracts/Storage.sol:Storage",
            "label": "openInterestWETH",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 32567,
            "contract": "contracts/Storage.sol:Storage",
            "label": "tpLastUpdated",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 32569,
            "contract": "contracts/Storage.sol:Storage",
            "label": "slLastUpdated",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 32571,
            "contract": "contracts/Storage.sol:Storage",
            "label": "beingMarketClosed",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Trader)19397_storage": {
        "encoding": "inplace",
        "label": "struct Storage.Trader",
        "members": [
          {
            "astId": 19392,
            "contract": "contracts/Storage.sol:Storage",
            "label": "leverageUnlocked",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 19394,
            "contract": "contracts/Storage.sol:Storage",
            "label": "referral",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 19396,
            "contract": "contracts/Storage.sol:Storage",
            "label": "referralRewardsTotal",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}